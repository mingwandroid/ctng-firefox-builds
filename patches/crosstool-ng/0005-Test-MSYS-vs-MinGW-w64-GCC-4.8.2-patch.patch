From 855d99ae8dc585aee818d9a3bf97bf63291c7e9c Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Sun, 1 Dec 2013 16:57:31 +0000
Subject: [PATCH 05/27] Test MSYS vs MinGW-w64 GCC 4.8.2 patch

---
 .../gcc/4.8.2/100-msys-native-paths-gengtype.patch | 244 +++++++++++++++++++++
 1 file changed, 244 insertions(+)
 create mode 100644 patches/gcc/4.8.2/100-msys-native-paths-gengtype.patch

diff --git a/patches/gcc/4.8.2/100-msys-native-paths-gengtype.patch b/patches/gcc/4.8.2/100-msys-native-paths-gengtype.patch
new file mode 100644
index 0000000..c641551
--- /dev/null
+++ b/patches/gcc/4.8.2/100-msys-native-paths-gengtype.patch
@@ -0,0 +1,244 @@
+diff -urN gcc-4.8.2.orig/gcc/Makefile.in gcc-4.8.2/gcc/Makefile.in
+--- gcc-4.8.2.orig/gcc/Makefile.in	2013-12-02 11:57:04.792311915 +0000
++++ gcc-4.8.2/gcc/Makefile.in	2013-12-02 11:57:05.758993475 +0000
+@@ -72,6 +72,9 @@
+ 
+ # Directory where sources are, absolute.
+ abs_srcdir = @abs_srcdir@
++# Directory where sources are, absolute, natively (for MSYS/Cygwin)
++abs_srcdir_native = @abs_srcdir_native@
++
+ abs_docdir = @abs_srcdir@/doc
+ 
+ # Top build directory for this package, relative to here.
+@@ -297,6 +300,11 @@
+ 			  $(shell expr $(range) + $(write_entries_to_file_split) - 1), $(1))" \
+ 	     | tr ' ' '\012' >> $(2)))
+ 
++# write_entries_to_file_native - as above, but replaces each entry with it's native
++# version first.
++# Parameters:
++to_native = $(foreach a,$(1),$(subst $(abs_srcdir),$(abs_srcdir_native),$(a)))
++write_entries_to_file_native = $(call write_entries_to_file, $(call to_native, $(1)), $(2))
+ # --------
+ # UNSORTED
+ # --------
+@@ -3784,7 +3792,7 @@
+ 
+ gtyp-input.list: s-gtyp-input ; @true
+ s-gtyp-input: Makefile
+-	@: $(call write_entries_to_file,$(GTFILES),tmp-gi.list)
++	@: $(call write_entries_to_file_native,$(GTFILES),tmp-gi.list)
+ 	$(SHELL) $(srcdir)/../move-if-change tmp-gi.list gtyp-input.list
+ 	$(STAMP) s-gtyp-input
+ 
+diff -urN gcc-4.8.2.orig/gcc/configure gcc-4.8.2/gcc/configure
+--- gcc-4.8.2.orig/gcc/configure	2013-12-02 11:57:04.798978644 +0000
++++ gcc-4.8.2/gcc/configure	2013-12-02 17:45:02.295176810 +0000
+@@ -800,6 +800,7 @@
+ LDFLAGS
+ CFLAGS
+ CC
++abs_srcdir_native
+ GENINSRC
+ target_subdir
+ host_subdir
+@@ -3364,6 +3365,36 @@
+ fi
+ 
+ 
++# This block prevents mismatch between the host system for GCC build tools (e.g. a MinGW-w64 built
++# gengtypes.exe) and the build system (e.g. MSYS2/Cygwin) from causing path conflicts. Makefile.in
++# uses abs_srcdir_native var when it needs to transform build-machine paths to host-machine ones.
++{ $as_echo "$as_me:${as_lineno-$LINENO}: checking where (build) absolute srcdir is in the (host) native filesystem (MSYS*/Cygwin)" >&5
++$as_echo_n "checking where (build) absolute srcdir is in the (host) native filesystem (MSYS*/Cygwin)... " >&6; }
++case $build_os in
++  mingw*|cygwin*)
++    case $host_os in
++      mingw*)
++        # We're building on MSYS*/Cygwin to run on Windows.
++	# Requires fixing up path translation conflicts.
++        abs_srcdir_native=$(cd $srcdir; pwd -W)
++        { $as_echo "$as_me:${as_lineno-$LINENO}: result: $abs_srcdir_native .. yes - build is MSYS*/Cygwin host is Native Windows" >&5
++$as_echo "$abs_srcdir_native .. yes - build is MSYS*/Cygwin host is Native Windows" >&6; }
++        ;;
++      *)
++        abs_srcdir_native=$(cd $srcdir; pwd)
++        { $as_echo "$as_me:${as_lineno-$LINENO}: result: $abs_srcdir_native .. no - build is MSYS*/Cygwin host is not Native Windows" >&5
++$as_echo "$abs_srcdir_native .. no - build is MSYS*/Cygwin host is not Native Windows" >&6; }
++        ;;
++    esac
++    ;;
++  *)
++    abs_srcdir_native=$(cd $srcdir; pwd)
++    { $as_echo "$as_me:${as_lineno-$LINENO}: result: $abs_srcdir_native .. no" >&5
++$as_echo "$abs_srcdir_native .. no" >&6; }
++    ;;
++esac
++
++
+ # -------------------
+ # Find default linker
+ # -------------------
+@@ -17828,7 +17859,7 @@
+   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
+   lt_status=$lt_dlunknown
+   cat > conftest.$ac_ext <<_LT_EOF
+-#line 17831 "configure"
++#line 17862 "configure"
+ #include "confdefs.h"
+ 
+ #if HAVE_DLFCN_H
+@@ -17934,7 +17965,7 @@
+   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
+   lt_status=$lt_dlunknown
+   cat > conftest.$ac_ext <<_LT_EOF
+-#line 17937 "configure"
++#line 17968 "configure"
+ #include "confdefs.h"
+ 
+ #if HAVE_DLFCN_H
+diff -urN gcc-4.8.2.orig/gcc/configure.ac gcc-4.8.2/gcc/configure.ac
+--- gcc-4.8.2.orig/gcc/configure.ac	2013-12-02 11:57:04.038966904 +0000
++++ gcc-4.8.2/gcc/configure.ac	2013-12-02 15:24:27.000000000 +0000
+@@ -188,6 +188,32 @@
+ fi
+ AC_SUBST(GENINSRC)
+ 
++# This block prevents mismatch between the host system for GCC build tools (e.g. a MinGW-w64 built
++# gengtypes.exe) and the build system (e.g. MSYS2/Cygwin) from causing path conflicts. Makefile.in
++# uses abs_srcdir_native var when it needs to transform build-machine paths to host-machine ones.
++AC_MSG_CHECKING([where (build) absolute srcdir is in the (host) native filesystem (MSYS*/Cygwin)])
++case $build_os in
++  mingw*|cygwin*)
++    case $host_os in
++      mingw*)
++        # We're building on MSYS*/Cygwin to run on Windows.
++	# Requires fixing up path translation conflicts.
++        abs_srcdir_native=$(cd $srcdir; pwd -W)
++        AC_MSG_RESULT($abs_srcdir_native .. yes - build is MSYS*/Cygwin host is Native Windows)
++        ;;
++      *)
++        abs_srcdir_native=$(cd $srcdir; pwd)
++        AC_MSG_RESULT($abs_srcdir_native .. no - build is MSYS*/Cygwin host is not Native Windows)
++        ;;
++    esac
++    ;;
++  *)
++    abs_srcdir_native=$(cd $srcdir; pwd)
++    AC_MSG_RESULT($abs_srcdir_native .. no)
++    ;;
++esac
++AC_SUBST(abs_srcdir_native)
++
+ # -------------------
+ # Find default linker
+ # -------------------
+diff -urN gcc-4.8.2.orig/libgcc/Makefile.in gcc-4.8.2/libgcc/Makefile.in
+--- gcc-4.8.2.orig/libgcc/Makefile.in	2013-12-02 11:57:05.215651758 +0000
++++ gcc-4.8.2/libgcc/Makefile.in	2013-12-02 17:46:54.000000000 +0000
+@@ -25,6 +25,10 @@
+ gcc_objdir = $(MULTIBUILDTOP)../../$(host_subdir)/gcc
+ 
+ srcdir = @srcdir@
++# Directory where sources are, absolute.
++abs_srcdir = @abs_srcdir@
++# Directory where sources are, absolute, natively (for MSYS/Cygwin)
++abs_srcdir_native = @abs_srcdir_native@
+ 
+ prefix = @prefix@
+ 
+@@ -343,7 +347,8 @@
+ libgcc_tm_file = @tm_file@
+ libgcc_tm.h: libgcc_tm.stamp; @true
+ libgcc_tm.stamp:
+-	DEFINES='$(libgcc_tm_defines)' HEADERS='$(libgcc_tm_file)' \
++	DEFINES='$(libgcc_tm_defines)' \
++	HEADERS='$(subst $(abs_srcdir),$(abs_srcdir_native),$(libgcc_tm_file))' \
+ 		$(srcdir)/mkheader.sh > tmp-libgcc_tm.h
+ 	$(SHELL) $(srcdir)/../move-if-change tmp-libgcc_tm.h libgcc_tm.h
+ 	echo timestamp > $@
+diff -urN gcc-4.8.2.orig/libgcc/configure gcc-4.8.2/libgcc/configure
+--- gcc-4.8.2.orig/libgcc/configure	2013-12-02 11:57:05.215651758 +0000
++++ gcc-4.8.2/libgcc/configure	2013-12-02 19:59:43.023476394 +0000
+@@ -562,6 +562,7 @@
+ tm_defines
+ tm_file
+ tmake_file
++abs_srcdir_native
+ sfp_machine_header
+ set_use_emutls
+ set_have_cc_tls
+@@ -4482,6 +4483,36 @@
+ fi
+ 
+ 
++# This block prevents mismatch between the host system for GCC build tools (e.g. a MinGW-w64 built
++# gengtypes.exe) and the build system (e.g. MSYS2/Cygwin) from causing path conflicts. Makefile.in
++# uses abs_srcdir_native var when it needs to transform build-machine paths to host-machine ones.
++{ $as_echo "$as_me:${as_lineno-$LINENO}: checking where (build) absolute srcdir is in the (host) native filesystem (MSYS*/Cygwin)" >&5
++$as_echo_n "checking where (build) absolute srcdir is in the (host) native filesystem (MSYS*/Cygwin)... " >&6; }
++case $build_os in
++  mingw*|cygwin*)
++    case $host_os in
++      mingw*)
++        # We're building on MSYS*/Cygwin to run on Windows.
++        # Requires fixing up path translation conflicts.
++        abs_srcdir_native=$(cd $srcdir; pwd -W)
++        { $as_echo "$as_me:${as_lineno-$LINENO}: result: $abs_srcdir_native .. yes - build is MSYS*/Cygwin and host is native Windows" >&5
++$as_echo "$abs_srcdir_native .. yes - build is MSYS*/Cygwin and host is native Windows" >&6; }
++        ;;
++      *)
++        abs_srcdir_native=$(cd $srcdir; pwd)
++        { $as_echo "$as_me:${as_lineno-$LINENO}: result: $abs_srcdir_native .. no - build is MSYS*/Cygwin and host is not native Windows" >&5
++$as_echo "$abs_srcdir_native .. no - build is MSYS*/Cygwin and host is not native Windows" >&6; }
++        ;;
++    esac
++    ;;
++  *)
++    abs_srcdir_native=$(cd $srcdir; pwd)
++    { $as_echo "$as_me:${as_lineno-$LINENO}: result: $abs_srcdir_native .. no" >&5
++$as_echo "$abs_srcdir_native .. no" >&6; }
++    ;;
++esac
++
++
+ # Conditionalize the makefile for this target machine.
+ tmake_file_=
+ for f in ${tmake_file}
+diff -urN gcc-4.8.2.orig/libgcc/configure.ac gcc-4.8.2/libgcc/configure.ac
+--- gcc-4.8.2.orig/libgcc/configure.ac	2013-12-02 11:57:05.215651758 +0000
++++ gcc-4.8.2/libgcc/configure.ac	2013-12-02 19:52:57.323868856 +0000
+@@ -354,6 +354,32 @@
+ fi
+ AC_SUBST(sfp_machine_header)
+ 
++# This block prevents mismatch between the host system for GCC build tools (e.g. a MinGW-w64 built
++# gengtypes.exe) and the build system (e.g. MSYS2/Cygwin) from causing path conflicts. Makefile.in
++# uses abs_srcdir_native var when it needs to transform build-machine paths to host-machine ones.
++AC_MSG_CHECKING([where (build) absolute srcdir is in the (host) native filesystem (MSYS*/Cygwin)])
++case $build_os in
++  mingw*|cygwin*)
++    case $host_os in
++      mingw*)
++        # We're building on MSYS*/Cygwin to run on Windows.
++        # Requires fixing up path translation conflicts.
++        abs_srcdir_native=$(cd $srcdir; pwd -W)
++        AC_MSG_RESULT($abs_srcdir_native .. yes - build is MSYS*/Cygwin and host is native Windows)
++        ;;
++      *)
++        abs_srcdir_native=$(cd $srcdir; pwd)
++        AC_MSG_RESULT($abs_srcdir_native .. no - build is MSYS*/Cygwin and host is not native Windows)
++        ;;
++    esac
++    ;;
++  *)
++    abs_srcdir_native=$(cd $srcdir; pwd)
++    AC_MSG_RESULT($abs_srcdir_native .. no)
++    ;;
++esac
++AC_SUBST(abs_srcdir_native)
++
+ # Conditionalize the makefile for this target machine.
+ tmake_file_=
+ for f in ${tmake_file}
-- 
1.8.5.3


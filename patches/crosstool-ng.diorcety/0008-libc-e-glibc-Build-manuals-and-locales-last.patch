From 8f68c37bd6e33745b9a00c8dca243a94959514e2 Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Sat, 12 Apr 2014 13:19:06 +0100
Subject: [PATCH 08/18] libc/(e)glibc: Build manuals and locales last

Rather then building the manuals and locales for each multilib target, only
build the manuals on the last multilib target.

If you are not building a multilib toolchain, then the first libc build will
be the last.

Signed-off-by: Bryan Hundven <bryanhundven@gmail.com>
---
 scripts/build/libc/glibc-eglibc.sh-common | 20 +++++++++++++++++---
 1 file changed, 17 insertions(+), 3 deletions(-)

diff --git a/scripts/build/libc/glibc-eglibc.sh-common b/scripts/build/libc/glibc-eglibc.sh-common
index d8dbd91..95ab33e 100644
--- a/scripts/build/libc/glibc-eglibc.sh-common
+++ b/scripts/build/libc/glibc-eglibc.sh-common
@@ -76,6 +76,7 @@ do_libc_backend() {
     local multilib
     local multi_dir
     local multi_flags
+    local multi_last
     local target
     local extra_dir
     local libc_headers libc_startfiles libc_full
@@ -105,7 +106,14 @@ do_libc_backend() {
     # If gcc is not configured for multilib, it still prints
     # a single line for the default settings
     multilibs=( $("${CT_TARGET}-gcc" -print-multi-lib 2>/dev/null) )
+    last_multi=
     for multilib in "${multilibs[@]}"; do
+        last_multi=$(( ${#multilibs[@]} - 1 ))
+        if [ "${multilib%%;*}" = "${multilibs[last_multi]%%;*}" ]; then
+            # This is the last multilib build or multilib is '.'
+            # (default target, not multilib)
+            multi_last=y
+        fi
         multi_dir="${multilib%%;*}"
         if [ "${multi_dir}" != "." ]; then
             CT_DoStep INFO "Building for multilib subdir='${multi_dir}'"
@@ -148,7 +156,8 @@ do_libc_backend() {
                              libc_headers="${libc_headers}"         \
                              libc_startfiles="${libc_startfiles}"   \
                              libc_full="${libc_full}"               \
-                             libc_target="${target}"
+                             libc_target="${target}"                \
+                             multi_last="${multi_last}"
 
         CT_Popd
 
@@ -166,6 +175,7 @@ do_libc_backend() {
 #   libc_full           : Build full libc                       : bool      : n
 #   extra_flags         : Extra CFLAGS to use (for multilib)    : string    : (empty)
 #   extra_dir           : Extra subdir for multilib             : string    : (empty)
+#   multi_last          : The last multilib target              : bool      : n
 do_libc_backend_once() {
     local libc_headers
     local libc_startfiles
@@ -183,6 +193,7 @@ do_libc_backend_once() {
     local float_extra
     local endian_extra
     local libc_target="${CT_TARGET}"
+    local multi_last
     local arg
 
     for arg in "$@"; do
@@ -468,7 +479,10 @@ do_libc_backend_once() {
                               install_root="${install_root}"  \
                               install
 
-        if [ "${CT_BUILD_MANUALS}" = "y" ]; then
+        if [ "${CT_BUILD_MANUALS}" = "y" -a "${multi_last}" = "y" ]; then
+            # We only need to build the manuals once. Only build them on the
+            # last multilib target. If it's not multilib, it will happen on the
+            # only target.
             CT_DoLog EXTRA "Building and installing the C library manual"
             # Omit JOBSFLAGS as GLIBC has problems building the
             # manuals in parallel
@@ -485,7 +499,7 @@ do_libc_backend_once() {
             fi
         fi
 
-        if [ "${CT_LIBC_LOCALES}" = "y" ]; then
+        if [ "${CT_LIBC_LOCALES}" = "y" -a "${multi_last}" = "y" ]; then
             do_libc_locales
         fi
     fi # libc_full == y
-- 
1.9.2


From ca37a32d4d7bd179b3b2bb04405c6418b1b0d0b7 Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Sun, 23 Feb 2014 14:44:23 +0000
Subject: [PATCH 37/38] {e}glibc 2.15 .. 2.19: Re{number|name} + fix patches

Mine are all from 200-290, those before are pre-existing
and ones 300+ are other people's patches that I've added
subsequently, making it easier to compare and contrast.

Other than renumbering ..

1.
Rename-oS-to-oSTATIC-for-case-insensitive-fs
.. was renamed to:
Rename-extensions-for-case-insensitive-fs
.. and fixed to rename .dT to .dTEMP

2.
MSYS-Hack-elf-librtld.mk-gen
.. was renamed to:
MSYS-vs-MinGW-Hacky-sed-in-Makefiles
.. and fixed to handle sedding dependency files
generated by MinGW-w64 GCC but interpreted by MSYS2 GNU
make.

3.
Use-{e}glibc-2_18-sunrpc-Makefile-for-cross-compilation
.. was added. It backports the sunrpc Makefile to get fixes
for cross compilation.

4.
cross-fix-rpc_types_h-include
.. changed an instance of #include <rpc/types.h> to

5.
MinGW-w64-cross-fixes-for-timezone-and-getconf
.. fixes problems in timezone (link, symlink, general cross)
and getconf (check for "nul" as well as "/dev/null")
---
 patches/eglibc/2_15/100-make-4.patch               |  24 --
 ...re-Default-to-CPP-CC--E-unless-overridden.patch | 318 ---------------------
 .../110-Fix-crossrpc-to-build-on-non-Linux.patch   | 247 ----------------
 .../2_15/120-MSYS-Hack-elf-librtld.mk-gen.patch    |  62 ----
 ...ame-oS-to-oSTATIC-for-case-insensitive-fs.patch | 201 -------------
 patches/eglibc/2_15/140-MSYS-Hack-force-ln-s.patch |  39 ---
 .../160-Remove-test-for-__builtin_expect.patch     |  91 ------
 ...tr-use-of-local-buffer-outside-its-extent.patch |  55 ----
 patches/eglibc/2_15/200-make-4.patch               |  24 ++
 ...re-Default-to-CPP-CC--E-unless-overridden.patch | 318 +++++++++++++++++++++
 .../220-Fix-crossrpc-to-build-on-non-Linux.patch   | 247 ++++++++++++++++
 .../230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch | 113 ++++++++
 ...Rename-extensions-for-case-insensitive-fs.patch | 201 +++++++++++++
 patches/eglibc/2_15/250-MSYS-Hack-force-ln-s.patch |  39 +++
 .../2_15/260-cross-fix-rpc_types_h-include.patch   |  11 +
 ...-w64-cross-fixes-for-timezone-and-getconf.patch | 137 +++++++++
 .../300-Remove-test-for-__builtin_expect.patch     |  76 +++++
 ...tr-use-of-local-buffer-outside-its-extent.patch |  55 ++++
 ..._18-sunrpc-Makefile-for-cross-compilation.patch | 182 ++++++++++++
 patches/eglibc/2_16/200-make-4.patch               |  24 ++
 ...re-Default-to-CPP-CC--E-unless-overridden.patch | 242 ++++++++++++++++
 .../220-Fix-crossrpc-to-build-on-non-Linux.patch   | 247 ++++++++++++++++
 .../230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch | 113 ++++++++
 ...Rename-extensions-for-case-insensitive-fs.patch | 249 ++++++++++++++++
 patches/eglibc/2_16/250-MSYS-Hack-force-ln-s.patch |  39 +++
 patches/eglibc/2_17/200-make-4.patch               |  24 ++
 ...re-Default-to-CPP-CC--E-unless-overridden.patch | 242 ++++++++++++++++
 .../220-Fix-crossrpc-to-build-on-non-Linux.patch   | 247 ++++++++++++++++
 .../230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch | 115 ++++++++
 ...Rename-extensions-for-case-insensitive-fs.patch | 250 ++++++++++++++++
 patches/eglibc/2_17/250-MSYS-Hack-force-ln-s.patch |  39 +++
 patches/eglibc/2_18/100-make-4.patch               |  24 --
 .../110-Fix-crossrpc-to-build-on-non-Linux.patch   | 251 ----------------
 .../2_18/120-MSYS-Hack-elf-librtld.mk-gen.patch    |  61 ----
 ...ame-oS-to-oSTATIC-for-case-insensitive-fs.patch | 238 ---------------
 patches/eglibc/2_18/140-MSYS-Hack-force-ln-s.patch |  39 ---
 patches/eglibc/2_18/200-make-4.patch               |  24 ++
 .../220-Fix-crossrpc-to-build-on-non-Linux.patch   | 248 ++++++++++++++++
 .../230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch | 118 ++++++++
 ...Rename-extensions-for-case-insensitive-fs.patch | 247 ++++++++++++++++
 patches/eglibc/2_18/250-MSYS-Hack-force-ln-s.patch |  39 +++
 .../220-Fix-crossrpc-to-build-on-non-Linux.patch   | 248 ++++++++++++++++
 .../230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch | 118 ++++++++
 ...Rename-extensions-for-case-insensitive-fs.patch | 247 ++++++++++++++++
 patches/eglibc/2_19/250-MSYS-Hack-force-ln-s.patch |  39 +++
 patches/glibc/2.15/100-make-4.patch                |  24 --
 ...re-Default-to-CPP-CC--E-unless-overridden.patch | 253 ----------------
 .../110-Fix-crossrpc-to-build-on-non-Linux.patch   | 247 ----------------
 .../2.15/120-MSYS-Hack-elf-librtld.mk-gen.patch    |  62 ----
 ...ame-oS-to-oSTATIC-for-case-insensitive-fs.patch | 201 -------------
 patches/glibc/2.15/140-MSYS-Hack-force-ln-s.patch  |  39 ---
 .../150-0095_all_glibc-2.15-ctors-dtors-test.patch |  50 ----
 .../160-Remove-test-for-__builtin_expect.patch     |  74 -----
 .../170-100-fix_cpuid_h_check-from-OpenWrt.patch   |  22 --
 ...tr-use-of-local-buffer-outside-its-extent.patch |  35 ---
 patches/glibc/2.15/200-make-4.patch                |  24 ++
 ...re-Default-to-CPP-CC--E-unless-overridden.patch | 253 ++++++++++++++++
 .../220-Fix-crossrpc-to-build-on-non-Linux.patch   | 247 ++++++++++++++++
 .../230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch | 113 ++++++++
 ...Rename-extensions-for-case-insensitive-fs.patch | 210 ++++++++++++++
 patches/glibc/2.15/250-MSYS-Hack-force-ln-s.patch  |  39 +++
 .../300-0095_all_glibc-2.15-ctors-dtors-test.patch |  51 ++++
 .../310-Remove-test-for-__builtin_expect.patch     |  74 +++++
 .../320-100-fix_cpuid_h_check-from-OpenWrt.patch   |  24 ++
 ...tr-use-of-local-buffer-outside-its-extent.patch |  35 +++
 ..._18-sunrpc-Makefile-for-cross-compilation.patch | 189 ++++++++++++
 ...f-libgcc_s-and-libgcc_eh-when-building-gl.patch | 318 +++++++++++++++++++++
 patches/glibc/2.16.0/100-make-4.patch              |  24 --
 ...re-Default-to-CPP-CC--E-unless-overridden.patch | 242 ----------------
 patches/glibc/2.16.0/200-make-4.patch              |  24 ++
 ...re-Default-to-CPP-CC--E-unless-overridden.patch | 253 ++++++++++++++++
 .../220-Fix-crossrpc-to-build-on-non-Linux.patch   | 247 ++++++++++++++++
 .../230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch | 113 ++++++++
 ...Rename-extensions-for-case-insensitive-fs.patch | 249 ++++++++++++++++
 .../glibc/2.16.0/250-MSYS-Hack-force-ln-s.patch    |  39 +++
 patches/glibc/2.17/120-make-4.patch                |  24 --
 ...re-Default-to-CPP-CC--E-unless-overridden.patch | 253 ----------------
 patches/glibc/2.17/200-make-4.patch                |  24 ++
 ...re-Default-to-CPP-CC--E-unless-overridden.patch | 253 ++++++++++++++++
 .../220-Fix-crossrpc-to-build-on-non-Linux.patch   | 247 ++++++++++++++++
 .../230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch | 115 ++++++++
 ...Rename-extensions-for-case-insensitive-fs.patch | 250 ++++++++++++++++
 patches/glibc/2.17/250-MSYS-Hack-force-ln-s.patch  |  39 +++
 ...a-ARM-Fix-clone-code-when-built-for-Thumb.patch |  44 +--
 ...ad_cond_broadcast-and-pthread_cond_signal.patch |  46 +--
 patches/glibc/2.18/120-make-4.patch                |  45 ---
 patches/glibc/2.18/200-make-4.patch                |  24 ++
 .../220-Fix-crossrpc-to-build-on-non-Linux.patch   | 248 ++++++++++++++++
 .../230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch | 118 ++++++++
 ...Rename-extensions-for-case-insensitive-fs.patch | 247 ++++++++++++++++
 patches/glibc/2.18/250-MSYS-Hack-force-ln-s.patch  |  39 +++
 .../220-Fix-crossrpc-to-build-on-non-Linux.patch   | 248 ++++++++++++++++
 .../230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch | 118 ++++++++
 ...Rename-extensions-for-case-insensitive-fs.patch | 247 ++++++++++++++++
 patches/glibc/2.19/250-MSYS-Hack-force-ln-s.patch  |  39 +++
 95 files changed, 9346 insertions(+), 3309 deletions(-)
 delete mode 100644 patches/eglibc/2_15/100-make-4.patch
 delete mode 100644 patches/eglibc/2_15/105-configure-Default-to-CPP-CC--E-unless-overridden.patch
 delete mode 100644 patches/eglibc/2_15/110-Fix-crossrpc-to-build-on-non-Linux.patch
 delete mode 100644 patches/eglibc/2_15/120-MSYS-Hack-elf-librtld.mk-gen.patch
 delete mode 100644 patches/eglibc/2_15/130-Rename-oS-to-oSTATIC-for-case-insensitive-fs.patch
 delete mode 100644 patches/eglibc/2_15/140-MSYS-Hack-force-ln-s.patch
 delete mode 100644 patches/eglibc/2_15/160-Remove-test-for-__builtin_expect.patch
 delete mode 100644 patches/eglibc/2_15/180-Fix-confstr-use-of-local-buffer-outside-its-extent.patch
 create mode 100644 patches/eglibc/2_15/200-make-4.patch
 create mode 100644 patches/eglibc/2_15/210-configure-Default-to-CPP-CC--E-unless-overridden.patch
 create mode 100644 patches/eglibc/2_15/220-Fix-crossrpc-to-build-on-non-Linux.patch
 create mode 100644 patches/eglibc/2_15/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
 create mode 100644 patches/eglibc/2_15/240-Rename-extensions-for-case-insensitive-fs.patch
 create mode 100644 patches/eglibc/2_15/250-MSYS-Hack-force-ln-s.patch
 create mode 100644 patches/eglibc/2_15/260-cross-fix-rpc_types_h-include.patch
 create mode 100644 patches/eglibc/2_15/270-MinGW-w64-cross-fixes-for-timezone-and-getconf.patch
 create mode 100644 patches/eglibc/2_15/300-Remove-test-for-__builtin_expect.patch
 create mode 100644 patches/eglibc/2_15/310-Fix-confstr-use-of-local-buffer-outside-its-extent.patch
 create mode 100644 patches/eglibc/2_15/340-Use-eglibc-2_18-sunrpc-Makefile-for-cross-compilation.patch
 create mode 100644 patches/eglibc/2_16/200-make-4.patch
 create mode 100644 patches/eglibc/2_16/210-configure-Default-to-CPP-CC--E-unless-overridden.patch
 create mode 100644 patches/eglibc/2_16/220-Fix-crossrpc-to-build-on-non-Linux.patch
 create mode 100644 patches/eglibc/2_16/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
 create mode 100644 patches/eglibc/2_16/240-Rename-extensions-for-case-insensitive-fs.patch
 create mode 100644 patches/eglibc/2_16/250-MSYS-Hack-force-ln-s.patch
 create mode 100644 patches/eglibc/2_17/200-make-4.patch
 create mode 100644 patches/eglibc/2_17/210-configure-Default-to-CPP-CC--E-unless-overridden.patch
 create mode 100644 patches/eglibc/2_17/220-Fix-crossrpc-to-build-on-non-Linux.patch
 create mode 100644 patches/eglibc/2_17/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
 create mode 100644 patches/eglibc/2_17/240-Rename-extensions-for-case-insensitive-fs.patch
 create mode 100644 patches/eglibc/2_17/250-MSYS-Hack-force-ln-s.patch
 delete mode 100644 patches/eglibc/2_18/100-make-4.patch
 delete mode 100644 patches/eglibc/2_18/110-Fix-crossrpc-to-build-on-non-Linux.patch
 delete mode 100644 patches/eglibc/2_18/120-MSYS-Hack-elf-librtld.mk-gen.patch
 delete mode 100644 patches/eglibc/2_18/130-Rename-oS-to-oSTATIC-for-case-insensitive-fs.patch
 delete mode 100644 patches/eglibc/2_18/140-MSYS-Hack-force-ln-s.patch
 create mode 100644 patches/eglibc/2_18/200-make-4.patch
 create mode 100644 patches/eglibc/2_18/220-Fix-crossrpc-to-build-on-non-Linux.patch
 create mode 100644 patches/eglibc/2_18/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
 create mode 100644 patches/eglibc/2_18/240-Rename-extensions-for-case-insensitive-fs.patch
 create mode 100644 patches/eglibc/2_18/250-MSYS-Hack-force-ln-s.patch
 create mode 100644 patches/eglibc/2_19/220-Fix-crossrpc-to-build-on-non-Linux.patch
 create mode 100644 patches/eglibc/2_19/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
 create mode 100644 patches/eglibc/2_19/240-Rename-extensions-for-case-insensitive-fs.patch
 create mode 100644 patches/eglibc/2_19/250-MSYS-Hack-force-ln-s.patch
 delete mode 100644 patches/glibc/2.15/100-make-4.patch
 delete mode 100644 patches/glibc/2.15/105-configure-Default-to-CPP-CC--E-unless-overridden.patch
 delete mode 100644 patches/glibc/2.15/110-Fix-crossrpc-to-build-on-non-Linux.patch
 delete mode 100644 patches/glibc/2.15/120-MSYS-Hack-elf-librtld.mk-gen.patch
 delete mode 100644 patches/glibc/2.15/130-Rename-oS-to-oSTATIC-for-case-insensitive-fs.patch
 delete mode 100644 patches/glibc/2.15/140-MSYS-Hack-force-ln-s.patch
 delete mode 100644 patches/glibc/2.15/150-0095_all_glibc-2.15-ctors-dtors-test.patch
 delete mode 100644 patches/glibc/2.15/160-Remove-test-for-__builtin_expect.patch
 delete mode 100644 patches/glibc/2.15/170-100-fix_cpuid_h_check-from-OpenWrt.patch
 delete mode 100644 patches/glibc/2.15/180-Fix-confstr-use-of-local-buffer-outside-its-extent.patch
 create mode 100644 patches/glibc/2.15/200-make-4.patch
 create mode 100644 patches/glibc/2.15/210-configure-Default-to-CPP-CC--E-unless-overridden.patch
 create mode 100644 patches/glibc/2.15/220-Fix-crossrpc-to-build-on-non-Linux.patch
 create mode 100644 patches/glibc/2.15/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
 create mode 100644 patches/glibc/2.15/240-Rename-extensions-for-case-insensitive-fs.patch
 create mode 100644 patches/glibc/2.15/250-MSYS-Hack-force-ln-s.patch
 create mode 100644 patches/glibc/2.15/300-0095_all_glibc-2.15-ctors-dtors-test.patch
 create mode 100644 patches/glibc/2.15/310-Remove-test-for-__builtin_expect.patch
 create mode 100644 patches/glibc/2.15/320-100-fix_cpuid_h_check-from-OpenWrt.patch
 create mode 100644 patches/glibc/2.15/330-Fix-confstr-use-of-local-buffer-outside-its-extent.patch
 create mode 100644 patches/glibc/2.15/340-Use-glibc-2_18-sunrpc-Makefile-for-cross-compilation.patch
 create mode 100644 patches/glibc/2.16.0/001-Avoid-use-of-libgcc_s-and-libgcc_eh-when-building-gl.patch
 delete mode 100644 patches/glibc/2.16.0/100-make-4.patch
 delete mode 100644 patches/glibc/2.16.0/110-configure-Default-to-CPP-CC--E-unless-overridden.patch
 create mode 100644 patches/glibc/2.16.0/200-make-4.patch
 create mode 100644 patches/glibc/2.16.0/210-configure-Default-to-CPP-CC--E-unless-overridden.patch
 create mode 100644 patches/glibc/2.16.0/220-Fix-crossrpc-to-build-on-non-Linux.patch
 create mode 100644 patches/glibc/2.16.0/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
 create mode 100644 patches/glibc/2.16.0/240-Rename-extensions-for-case-insensitive-fs.patch
 create mode 100644 patches/glibc/2.16.0/250-MSYS-Hack-force-ln-s.patch
 delete mode 100644 patches/glibc/2.17/120-make-4.patch
 delete mode 100644 patches/glibc/2.17/130-configure-Default-to-CPP-CC--E-unless-overridden.patch
 create mode 100644 patches/glibc/2.17/200-make-4.patch
 create mode 100644 patches/glibc/2.17/210-configure-Default-to-CPP-CC--E-unless-overridden.patch
 create mode 100644 patches/glibc/2.17/220-Fix-crossrpc-to-build-on-non-Linux.patch
 create mode 100644 patches/glibc/2.17/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
 create mode 100644 patches/glibc/2.17/240-Rename-extensions-for-case-insensitive-fs.patch
 create mode 100644 patches/glibc/2.17/250-MSYS-Hack-force-ln-s.patch
 delete mode 100644 patches/glibc/2.18/120-make-4.patch
 create mode 100644 patches/glibc/2.18/200-make-4.patch
 create mode 100644 patches/glibc/2.18/220-Fix-crossrpc-to-build-on-non-Linux.patch
 create mode 100644 patches/glibc/2.18/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
 create mode 100644 patches/glibc/2.18/240-Rename-extensions-for-case-insensitive-fs.patch
 create mode 100644 patches/glibc/2.18/250-MSYS-Hack-force-ln-s.patch
 create mode 100644 patches/glibc/2.19/220-Fix-crossrpc-to-build-on-non-Linux.patch
 create mode 100644 patches/glibc/2.19/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
 create mode 100644 patches/glibc/2.19/240-Rename-extensions-for-case-insensitive-fs.patch
 create mode 100644 patches/glibc/2.19/250-MSYS-Hack-force-ln-s.patch

diff --git a/patches/eglibc/2_15/100-make-4.patch b/patches/eglibc/2_15/100-make-4.patch
deleted file mode 100644
index 7183b85..0000000
--- a/patches/eglibc/2_15/100-make-4.patch
+++ /dev/null
@@ -1,24 +0,0 @@
-diff -urN a/configure b/configure
---- a/configure	2014-02-07 21:13:28.000000000 +0000
-+++ b/configure	2014-02-18 19:57:33.343538466 +0000
-@@ -5246,7 +5246,7 @@
-   ac_prog_version=`$MAKE --version 2>&1 | sed -n 's/^.*GNU Make[^0-9]*\([0-9][0-9.]*\).*$/\1/p'`
-   case $ac_prog_version in
-     '') ac_prog_version="v. ?.??, bad"; ac_verc_fail=yes;;
--    3.79* | 3.[89]*)
-+    3.79* | 3.[89]* | 4.*)
-        ac_prog_version="$ac_prog_version, ok"; ac_verc_fail=no;;
-     *) ac_prog_version="$ac_prog_version, bad"; ac_verc_fail=yes;;
- 
-diff -urN a/configure.in b/configure.in
---- a/configure.in	2014-02-07 21:13:28.000000000 +0000
-+++ b/configure.in	2014-02-18 19:57:33.346871836 +0000
-@@ -1048,7 +1048,7 @@
-   critic_missing="$critic_missing gcc")
- AC_CHECK_PROG_VER(MAKE, gnumake gmake make, --version,
-   [GNU Make[^0-9]*\([0-9][0-9.]*\)],
--  [3.79* | 3.[89]*], critic_missing="$critic_missing make")
-+  [3.79* | 3.[89]* | 4.*], critic_missing="$critic_missing make")
- 
- AC_CHECK_PROG_VER(MSGFMT, gnumsgfmt gmsgfmt msgfmt, --version,
-   [GNU gettext.* \([0-9]*\.[0-9.]*\)],
diff --git a/patches/eglibc/2_15/105-configure-Default-to-CPP-CC--E-unless-overridden.patch b/patches/eglibc/2_15/105-configure-Default-to-CPP-CC--E-unless-overridden.patch
deleted file mode 100644
index da534be..0000000
--- a/patches/eglibc/2_15/105-configure-Default-to-CPP-CC--E-unless-overridden.patch
+++ /dev/null
@@ -1,318 +0,0 @@
-diff -urN a/ChangeLog b/ChangeLog
---- a/ChangeLog	2014-02-18 19:58:01.703977043 +0000
-+++ b/ChangeLog	2014-02-18 19:59:53.365703737 +0000
-@@ -1,3 +1,8 @@
-+2013-01-25  Thomas Schwinge  <thomas@codesourcery.com>
-+
-+        * configure.in (AC_PROG_CPP): New definition.
-+        * configure: Regenerate.
-+
- 2012-09-28  Andreas Schwab  <schwab@linux-m68k.org>
- 
- 	[BZ #6530]
-diff -urN a/configure b/configure
---- a/configure	2014-02-18 19:58:01.663976423 +0000
-+++ b/configure	2014-02-18 20:02:37.324906090 +0000
-@@ -2021,6 +2021,11 @@
- 
- 
- 
-+# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
-+# here to work around the Autoconf issue discussed in
-+# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
-+# AC_PROG_CPP
-+
- 
- 
- subdirs="$subdirs "
-@@ -2898,242 +2903,14 @@
- 
- fi
- 
--ac_ext=c
--ac_cpp='$CPP $CPPFLAGS'
--ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
--ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
--ac_compiler_gnu=$ac_cv_c_compiler_gnu
--{ $as_echo "$as_me:$LINENO: checking how to run the C preprocessor" >&5
--$as_echo_n "checking how to run the C preprocessor... " >&6; }
- # On Suns, sometimes $CPP names a directory.
- if test -n "$CPP" && test -d "$CPP"; then
-   CPP=
- fi
- if test -z "$CPP"; then
--  if test "${ac_cv_prog_CPP+set}" = set; then
--  $as_echo_n "(cached) " >&6
--else
--      # Double quotes because CPP needs to be expanded
--    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
--    do
--      ac_preproc_ok=false
--for ac_c_preproc_warn_flag in '' yes
--do
--  # Use a header file that comes with gcc, so configuring glibc
--  # with a fresh cross-compiler works.
--  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
--  # <limits.h> exists even on freestanding compilers.
--  # On the NeXT, cc -E runs the code through the compiler's parser,
--  # not just through cpp. "Syntax error" is here to catch this case.
--  cat >conftest.$ac_ext <<_ACEOF
--/* confdefs.h.  */
--_ACEOF
--cat confdefs.h >>conftest.$ac_ext
--cat >>conftest.$ac_ext <<_ACEOF
--/* end confdefs.h.  */
--#ifdef __STDC__
--# include <limits.h>
--#else
--# include <assert.h>
--#endif
--		     Syntax error
--_ACEOF
--if { (ac_try="$ac_cpp conftest.$ac_ext"
--case "(($ac_try" in
--  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
--  *) ac_try_echo=$ac_try;;
--esac
--eval ac_try_echo="\"\$as_me:$LINENO: $ac_try_echo\""
--$as_echo "$ac_try_echo") >&5
--  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
--  ac_status=$?
--  grep -v '^ *+' conftest.er1 >conftest.err
--  rm -f conftest.er1
--  cat conftest.err >&5
--  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
--  (exit $ac_status); } >/dev/null && {
--	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
--	 test ! -s conftest.err
--       }; then
--  :
--else
--  $as_echo "$as_me: failed program was:" >&5
--sed 's/^/| /' conftest.$ac_ext >&5
--
--  # Broken: fails on valid input.
--continue
--fi
--
--rm -f conftest.err conftest.$ac_ext
--
--  # OK, works on sane cases.  Now check whether nonexistent headers
--  # can be detected and how.
--  cat >conftest.$ac_ext <<_ACEOF
--/* confdefs.h.  */
--_ACEOF
--cat confdefs.h >>conftest.$ac_ext
--cat >>conftest.$ac_ext <<_ACEOF
--/* end confdefs.h.  */
--#include <ac_nonexistent.h>
--_ACEOF
--if { (ac_try="$ac_cpp conftest.$ac_ext"
--case "(($ac_try" in
--  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
--  *) ac_try_echo=$ac_try;;
--esac
--eval ac_try_echo="\"\$as_me:$LINENO: $ac_try_echo\""
--$as_echo "$ac_try_echo") >&5
--  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
--  ac_status=$?
--  grep -v '^ *+' conftest.er1 >conftest.err
--  rm -f conftest.er1
--  cat conftest.err >&5
--  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
--  (exit $ac_status); } >/dev/null && {
--	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
--	 test ! -s conftest.err
--       }; then
--  # Broken: success on invalid input.
--continue
--else
--  $as_echo "$as_me: failed program was:" >&5
--sed 's/^/| /' conftest.$ac_ext >&5
--
--  # Passes both tests.
--ac_preproc_ok=:
--break
--fi
--
--rm -f conftest.err conftest.$ac_ext
--
--done
--# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
--rm -f conftest.err conftest.$ac_ext
--if $ac_preproc_ok; then
--  break
--fi
--
--    done
--    ac_cv_prog_CPP=$CPP
--
--fi
--  CPP=$ac_cv_prog_CPP
--else
--  ac_cv_prog_CPP=$CPP
--fi
--{ $as_echo "$as_me:$LINENO: result: $CPP" >&5
--$as_echo "$CPP" >&6; }
--ac_preproc_ok=false
--for ac_c_preproc_warn_flag in '' yes
--do
--  # Use a header file that comes with gcc, so configuring glibc
--  # with a fresh cross-compiler works.
--  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
--  # <limits.h> exists even on freestanding compilers.
--  # On the NeXT, cc -E runs the code through the compiler's parser,
--  # not just through cpp. "Syntax error" is here to catch this case.
--  cat >conftest.$ac_ext <<_ACEOF
--/* confdefs.h.  */
--_ACEOF
--cat confdefs.h >>conftest.$ac_ext
--cat >>conftest.$ac_ext <<_ACEOF
--/* end confdefs.h.  */
--#ifdef __STDC__
--# include <limits.h>
--#else
--# include <assert.h>
--#endif
--		     Syntax error
--_ACEOF
--if { (ac_try="$ac_cpp conftest.$ac_ext"
--case "(($ac_try" in
--  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
--  *) ac_try_echo=$ac_try;;
--esac
--eval ac_try_echo="\"\$as_me:$LINENO: $ac_try_echo\""
--$as_echo "$ac_try_echo") >&5
--  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
--  ac_status=$?
--  grep -v '^ *+' conftest.er1 >conftest.err
--  rm -f conftest.er1
--  cat conftest.err >&5
--  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
--  (exit $ac_status); } >/dev/null && {
--	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
--	 test ! -s conftest.err
--       }; then
--  :
--else
--  $as_echo "$as_me: failed program was:" >&5
--sed 's/^/| /' conftest.$ac_ext >&5
--
--  # Broken: fails on valid input.
--continue
--fi
--
--rm -f conftest.err conftest.$ac_ext
--
--  # OK, works on sane cases.  Now check whether nonexistent headers
--  # can be detected and how.
--  cat >conftest.$ac_ext <<_ACEOF
--/* confdefs.h.  */
--_ACEOF
--cat confdefs.h >>conftest.$ac_ext
--cat >>conftest.$ac_ext <<_ACEOF
--/* end confdefs.h.  */
--#include <ac_nonexistent.h>
--_ACEOF
--if { (ac_try="$ac_cpp conftest.$ac_ext"
--case "(($ac_try" in
--  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
--  *) ac_try_echo=$ac_try;;
--esac
--eval ac_try_echo="\"\$as_me:$LINENO: $ac_try_echo\""
--$as_echo "$ac_try_echo") >&5
--  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
--  ac_status=$?
--  grep -v '^ *+' conftest.er1 >conftest.err
--  rm -f conftest.er1
--  cat conftest.err >&5
--  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
--  (exit $ac_status); } >/dev/null && {
--	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
--	 test ! -s conftest.err
--       }; then
--  # Broken: success on invalid input.
--continue
--else
--  $as_echo "$as_me: failed program was:" >&5
--sed 's/^/| /' conftest.$ac_ext >&5
--
--  # Passes both tests.
--ac_preproc_ok=:
--break
-+  CPP="$CC -E"
- fi
- 
--rm -f conftest.err conftest.$ac_ext
--
--done
--# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
--rm -f conftest.err conftest.$ac_ext
--if $ac_preproc_ok; then
--  :
--else
--  { { $as_echo "$as_me:$LINENO: error: in \`$ac_pwd':" >&5
--$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
--{ { $as_echo "$as_me:$LINENO: error: C preprocessor \"$CPP\" fails sanity check
--See \`config.log' for more details." >&5
--$as_echo "$as_me: error: C preprocessor \"$CPP\" fails sanity check
--See \`config.log' for more details." >&2;}
--   { (exit 1); exit 1; }; }; }
--fi
--
--ac_ext=c
--ac_cpp='$CPP $CPPFLAGS'
--ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
--ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
--ac_compiler_gnu=$ac_cv_c_compiler_gnu
--
- # We need the C++ compiler only for testing.
- ac_ext=cpp
- ac_cpp='$CXXCPP $CPPFLAGS'
-@@ -3980,7 +3757,7 @@
- 
- 
- # Check whether --enable-obsolete-rpc was given.
--if test "${enable_obsolete_rpc+set}" = set; then :
-+if test "${enable_obsolete_rpc+set}" = set; then
-   enableval=$enable_obsolete_rpc; link_obsolete_rpc=$enableval
- else
-   link_obsolete_rpc=no
-@@ -3989,7 +3766,9 @@
- 
- 
- if test "$link_obsolete_rpc" = yes; then
--  $as_echo "#define LINK_OBSOLETE_RPC 1" >>confdefs.h
-+  cat >>confdefs.h <<\_ACEOF
-+#define LINK_OBSOLETE_RPC 1
-+_ACEOF
- 
- fi
- 
-diff -urN a/configure.in b/configure.in
---- a/configure.in	2014-02-18 19:58:01.663976423 +0000
-+++ b/configure.in	2014-02-18 19:58:09.730767821 +0000
-@@ -5,6 +5,23 @@
- AC_CONFIG_HEADERS([config.h])
- AC_CONFIG_AUX_DIR([scripts])
- 
-+# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
-+# here to work around the Autoconf issue discussed in
-+# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
-+AC_DEFUN([AC_PROG_CPP],
-+[AC_REQUIRE([AC_PROG_CC])dnl
-+AC_ARG_VAR([CPP],      [C preprocessor])dnl
-+_AC_ARG_VAR_CPPFLAGS()dnl
-+# On Suns, sometimes $CPP names a directory.
-+if test -n "$CPP" && test -d "$CPP"; then
-+  CPP=
-+fi
-+if test -z "$CPP"; then
-+  CPP="$CC -E"
-+fi
-+AC_SUBST(CPP)dnl
-+])# AC_PROG_CPP
-+
- dnl This is here so we can set $subdirs directly based on configure fragments.
- AC_CONFIG_SUBDIRS()
- 
diff --git a/patches/eglibc/2_15/110-Fix-crossrpc-to-build-on-non-Linux.patch b/patches/eglibc/2_15/110-Fix-crossrpc-to-build-on-non-Linux.patch
deleted file mode 100644
index 577e8f6..0000000
--- a/patches/eglibc/2_15/110-Fix-crossrpc-to-build-on-non-Linux.patch
+++ /dev/null
@@ -1,247 +0,0 @@
-diff -urN a/sunrpc/rpc/types.h b/sunrpc/rpc/types.h
---- a/sunrpc/rpc/types.h	2014-02-18 21:01:57.273293081 +0000
-+++ b/sunrpc/rpc/types.h	2014-02-18 21:02:31.023814825 +0000
-@@ -69,6 +69,7 @@
- #include <sys/types.h>
- #endif
- 
-+#ifdef __linux__
- #ifndef __u_char_defined
- typedef __u_char u_char;
- typedef __u_short u_short;
-@@ -84,11 +85,14 @@
- typedef __caddr_t caddr_t;
- # define __daddr_t_defined
- #endif
-+#endif
- 
- #include <sys/time.h>
- #include <sys/param.h>
- 
-+#ifndef _WIN32
- #include <netinet/in.h>
-+#endif
- 
- #ifndef INADDR_LOOPBACK
- #define       INADDR_LOOPBACK         (u_long)0x7F000001
-diff -urN a/sunrpc/rpc_main.c b/sunrpc/rpc_main.c
---- a/sunrpc/rpc_main.c	2014-02-18 21:01:57.273293081 +0000
-+++ b/sunrpc/rpc_main.c	2014-02-18 21:02:31.023814825 +0000
-@@ -38,13 +38,19 @@
- #include <stdio.h>
- #include <string.h>
- #include <unistd.h>
-+#ifndef IS_IN_build
- #include <libintl.h>
-+#endif
- #include <ctype.h>
- #include <sys/types.h>
- #include <sys/param.h>
- #include <sys/file.h>
- #include <sys/stat.h>
-+#ifndef _WIN32
- #include <sys/wait.h>
-+#else
-+#include <windows.h>
-+#endif
- #include "rpc_parse.h"
- #include "rpc_util.h"
- #include "rpc_scan.h"
-@@ -53,6 +59,33 @@
- #include "../version.h"
- #define PACKAGE _libc_intl_domainname
- 
-+#ifdef _WIN32
-+#define rindex(_dest, _src) strrchr((_dest), (_src))
-+
-+char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src);
-+
-+char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src)
-+{
-+  if (src == NULL)
-+      return NULL;
-+  return strcpy(dest, src) + strlen(dest);
-+}
-+#endif /* _WIN32 */
-+
-+#if defined(_WIN32) || defined(__BSD__)
-+
-+char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len);
-+
-+char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len)
-+{
-+  size_t min_len = strlen(src);
-+  if (min_len > len)
-+    min_len = len;
-+  return strncpy(dest, src, len) + min_len;
-+}
-+
-+#endif /* defined(_WIN32) || defined(__BSD__) */
-+
- #define EXTEND	1		/* alias for TRUE */
- #define DONT_EXTEND	0	/* alias for FALSE */
- 
-@@ -83,7 +116,11 @@
- static const char *CPP = SUNOS_CPP;
- static const char CPPFLAGS[] = "-C";
- static char *pathbuf;
-+#ifdef _WIN32
-+static HANDLE cpp_pid;
-+#else
- static int cpp_pid;
-+#endif
- static const char *allv[] =
- {
-   "rpcgen", "-s", "udp", "-s", "tcp"
-@@ -335,6 +372,20 @@
- {
-   struct stat buf;
- 
-+  /* Avoid trying to directly execute a bash script on Windows. */
-+#ifdef _WIN32
-+  char* CPPENVV = getenv("CPP");
-+  if (CPPENVV)
-+    {
-+      CPP = (char*)malloc(strlen(CPPENVV)+1);
-+      strcpy((char*)CPP, CPPENVV);
-+      /* Don't bother checking that it exists with stat64 as
-+       * we'd have to check in the path, also it usually ends
-+       * with a few arguments. */
-+      return;
-+    }
-+#endif
-+
-   if (stat (CPP, &buf) < 0)
-     {				/* /lib/cpp or explicit cpp does not exist */
-       if (cppDefined)
-@@ -354,9 +405,122 @@
-     }
- }
- 
-+#ifdef _WIN32
-+/*
-+ * Open input file with given define for C-preprocessor
-+ */
-+static void
-+open_input (const char *infile, const char *define)
-+{
-+  int argi;
-+  int argcc = 0;
-+  LPSTR argsall;
-+  HANDLE StdOutHandle;
-+  HANDLE StdErrHandle;
-+  HANDLE ReadPipe;
-+  HANDLE WritePipe;
-+  SECURITY_ATTRIBUTES SecAttr;
-+  STARTUPINFO StartupInfo;
-+  PROCESS_INFORMATION ProcessInfo;
-+  DWORD Status;
-+
-+  find_cpp ();
-+  putarg (0, CPP);
-+  putarg (1, CPPFLAGS);
-+  addarg (define);
-+  if (infile)
-+    addarg (infile);
-+  addarg ((char *) NULL);
-+  for (argi = 0; argi < argcount - 1; ++argi)
-+    {
-+      argcc += strlen(arglist[argi])+2;
-+    }
-+  argsall = (LPSTR)alloca(argcc + 1);
-+  if (!argsall)
-+    {
-+      fprintf (stderr, _ ("cannot alloca for argsall\n"));
-+      exit (1);
-+    }
-+  argsall[0] = '\0';
-+  for (argi = 0; argi < argcount - 1; ++argi)
-+    {
-+      strcat((char*)argsall, arglist[argi]);
-+      strcat((char*)argsall, " ");
-+    }
-+
-+  memset(&SecAttr,     0, sizeof(SecAttr));
-+  memset(&StartupInfo, 0, sizeof(StartupInfo));
-+  memset(&ProcessInfo, 0, sizeof(ProcessInfo));
-+
-+  SecAttr.nLength = sizeof(SecAttr);
-+  SecAttr.bInheritHandle = TRUE;
-+
-+  Status = CreatePipe( &ReadPipe, &WritePipe, &SecAttr, 0 );
-+  if (!Status)
-+    {
-+      fprintf (stderr, _ ("cannot CreatePipe: GetLastError() -> %d\n"), GetLastError());
-+      exit (1);
-+    }
-+
-+  SetHandleInformation( ReadPipe, HANDLE_FLAG_INHERIT, 0 );
-+
-+  /*
-+  StdOutHandle = GetStdHandle( STD_OUTPUT_HANDLE );
-+  StdErrHandle = GetStdHandle( STD_ERROR_HANDLE );
-+  if (StdOutHandle != INVALID_HANDLE_VALUE) {
-+      SetHandleInformation( StdOutHandle, HANDLE_FLAG_INHERIT, 0 );
-+  }
-+  if (StdErrHandle != INVALID_HANDLE_VALUE) {
-+      SetHandleInformation( StdErrHandle, HANDLE_FLAG_INHERIT, 0 );
-+  }
-+  */
-+
-+  StartupInfo.cb         = sizeof(StartupInfo);
-+  StartupInfo.hStdInput  = GetStdHandle( STD_INPUT_HANDLE );
-+  StartupInfo.hStdOutput = WritePipe;
-+  StartupInfo.hStdError  = GetStdHandle( STD_ERROR_HANDLE );
-+  StartupInfo.dwFlags    = STARTF_USESTDHANDLES;
-+
-+  Status = CreateProcess(
-+          NULL,           /* lpApplicationName */
-+          argsall,        /* lpCommandLine */
-+          NULL,           /* lpProcessAttributes */
-+          NULL,           /* lpThreadAttributes */
-+          TRUE,           /* bInheritHandles */
-+          0,              /* dwCreationFlags */
-+          NULL,           /* lpEnvironment */
-+          NULL,           /* lpCurrentDirectory */
-+          &StartupInfo,   /* lpStartupInfo */
-+          &ProcessInfo ); /* lpProcessInformation */
-+
-+  CloseHandle( WritePipe );
-+  if (!Status)
-+    {
-+      fprintf (stderr, _ ("cannot find C preprocessor: %s, GetLastError() -> %d\n"), CPP, GetLastError());
-+      exit (1);
-+    }
-+  int fd = _open_osfhandle((intptr_t)ReadPipe, _O_APPEND | _O_RDONLY);
-+  if(fd != -1)
-+    {
-+      fin = _fdopen(fd, "a+");
-+    }
-+  cpp_pid = ProcessInfo.hProcess;
-+}
-+
-+/* Close the connection to the C-preprocessor and check for successfull
-+   termination.  */
-+static void
-+close_input (void)
-+{
-+  WaitForSingleObject(cpp_pid, INFINITE);
-+}
-+
-+#else
-+
- /*
-  * Open input file with given define for C-preprocessor
-  */
-+
- static void
- open_input (const char *infile, const char *define)
- {
-@@ -424,6 +588,7 @@
-       crash ();
-     }
- }
-+#endif
- 
- /* valid tirpc nettypes */
- static const char *valid_ti_nettypes[] =
diff --git a/patches/eglibc/2_15/120-MSYS-Hack-elf-librtld.mk-gen.patch b/patches/eglibc/2_15/120-MSYS-Hack-elf-librtld.mk-gen.patch
deleted file mode 100644
index 5269d58..0000000
--- a/patches/eglibc/2_15/120-MSYS-Hack-elf-librtld.mk-gen.patch
+++ /dev/null
@@ -1,62 +0,0 @@
-diff -urN a/elf/Makefile b/elf/Makefile
---- a/elf/Makefile	2014-02-18 21:03:08.974401925 +0000
-+++ b/elf/Makefile	2014-02-18 21:03:18.381213967 +0000
-@@ -146,6 +146,14 @@
- ld-map		= $(common-objpfx)ld.map
- # eglibc: endif
- 
-+# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
-+uname_o := $(shell uname -o)
-+ifneq (, $(findstring Msys, $(uname_o)))
-+common-objpfxh = $(shell cd $(common-objpfx); pwd -W)/
-+else
-+common-objpfxh = $(common-objpfx)
-+endif
-+
- ifeq (yes,$(build-shared))
- extra-objs	= $(all-rtld-routines:%=%.os) soinit.os sofini.os interp.os
- generated	+= librtld.os dl-allobjs.os ld.so ldd
-@@ -388,15 +396,15 @@
- 
- $(objpfx)librtld.mk: $(objpfx)librtld.map Makefile
- 	LC_ALL=C \
--	sed -n 's@^$(common-objpfx)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
-+	sed -n 's@^$(common-objpfxh)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
- 	    $< | \
- 	while read lib file; do \
- 	  case $$lib in \
- 	  libc_pic.a) \
- 	    LC_ALL=C fgrep -l /$$file \
--		  $(common-objpfx)stamp.os $(common-objpfx)*/stamp.os | \
-+		  $(common-objpfxh)stamp.os $(common-objpfxh)*/stamp.os | \
- 	    LC_ALL=C \
--	    sed 's@^$(common-objpfx)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
-+	    sed 's@^$(common-objpfxh)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
- 	    ;; \
- 	  */*.a) \
- 	    echo rtld-$${lib%%/*} += $$file ;; \
-diff -urN a/elf/Makerules b/elf/Makerules
---- a/Makerules	2014-02-21 22:05:14.105893700 +0000
-+++ b/Makerules	2014-02-22 01:05:14.435886700 +0000
-@@ -402,11 +402,19 @@
- mv -f $(@:.d=.T) $@ $(generate-md5)
- endef
- 
-+# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
-+uname_o := $(shell uname -o)
-+ifneq (, $(findstring Msys, $(uname_o)))
-+common-objpfxh = $(shell cd $(common-objpfx); pwd -W)/
-+else
-+common-objpfxh = $(common-objpfx)
-+endif
-+
- ifneq (,$(objpfx))
- # Continuation lines here are dangerous because they introduce spaces!
- define sed-remove-objpfx
---e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfx)))@ $$(common-objpfx)@g' \
---e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfx)))@$$(common-objpfx)@g'
-+-e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfxh)))@ $$(common-objpfxh)@g' \
-+-e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfxh)))@$$(common-objpfxh)@g'
- endef
- endif
- 
diff --git a/patches/eglibc/2_15/130-Rename-oS-to-oSTATIC-for-case-insensitive-fs.patch b/patches/eglibc/2_15/130-Rename-oS-to-oSTATIC-for-case-insensitive-fs.patch
deleted file mode 100644
index 1ab1b90..0000000
--- a/patches/eglibc/2_15/130-Rename-oS-to-oSTATIC-for-case-insensitive-fs.patch
+++ /dev/null
@@ -1,201 +0,0 @@
-diff -urN a/ChangeLog b/ChangeLog
---- a/ChangeLog	2014-02-22 01:12:45.524167600 +0000
-+++ b/ChangeLog	2014-02-22 01:12:59.581952700 +0000
-@@ -1,3 +1,8 @@
-+2014-01-22  Ray Donnelly  <mingw.android@gmail.com>
-+
-+        * Rename .oS to .oSTATIC so that builds can be done on file
-+        systems that are not both case sensitive and case preserving.
-+
- 2013-01-25  Thomas Schwinge  <thomas@codesourcery.com>
- 
-         * configure.in (AC_PROG_CPP): New definition.
-diff -urN a/extra-lib.mk b/extra-lib.mk
---- a/extra-lib.mk	2014-02-22 01:12:45.915717300 +0000
-+++ b/extra-lib.mk	2014-02-22 01:12:59.590953900 +0000
-@@ -13,7 +13,7 @@
- 
- ifneq (,$($(lib)-static-only-routines))
- ifneq (,$(filter yesyes%,$(build-shared)$(elf)$($(lib).so-version)))
--object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oS)
-+object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oSTATIC)
- endif
- endif
- 
-@@ -31,7 +31,7 @@
- 
- # Add each flavor of library to the lists of things to build and install.
- install-lib += $(foreach o,$(object-suffixes-$(lib)),$(lib:lib%=$(libtype$o)))
--extra-objs += $(foreach o,$(filter-out .os .oS,$(object-suffixes-$(lib))),\
-+extra-objs += $(foreach o,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))),\
- 			$(patsubst %,%$o,$(filter-out \
- 					   $($(lib)-shared-only-routines),\
- 					   $(all-$(lib)-routines))))
-@@ -59,7 +59,7 @@
- 
- 
- # Use o-iterator.mk to generate a rule for each flavor of library.
--ifneq (,$(filter-out .os .oS,$(object-suffixes-$(lib))))
-+ifneq (,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))))
- define o-iterator-doit
- $(objpfx)$(patsubst %,$(libtype$o),$(lib:lib%=%)): \
-   $(patsubst %,$(objpfx)%$o,\
-@@ -67,7 +67,7 @@
- 			  $(all-$(lib)-routines))); \
- 	$$(build-extra-lib)
- endef
--object-suffixes-left = $(filter-out .os .oS,$(object-suffixes-$(lib)))
-+object-suffixes-left = $(filter-out .os .oSTATIC,$(object-suffixes-$(lib)))
- include $(patsubst %,$(..)o-iterator.mk,$(object-suffixes-left))
- endif
- 
-@@ -79,9 +79,9 @@
- 	$(build-extra-lib)
- endif
- 
--ifneq (,$(filter .oS,$(object-suffixes-$(lib))))
--$(objpfx)$(patsubst %,$(libtype.oS),$(lib:lib%=%)): \
--  $(patsubst %,$(objpfx)%.oS,\
-+ifneq (,$(filter .oSTATIC,$(object-suffixes-$(lib))))
-+$(objpfx)$(patsubst %,$(libtype.oSTATIC),$(lib:lib%=%)): \
-+  $(patsubst %,$(objpfx)%.oSTATIC,\
- 	     $(filter $($(lib)-static-only-routines),\
- 		      $(all-$(lib)-routines)))
- 	$(build-extra-lib)
-diff -urN a/Makeconfig b/Makeconfig
---- a/Makeconfig	2014-02-22 01:12:46.838334500 +0000
-+++ b/Makeconfig	2014-02-22 01:12:59.585453200 +0000
-@@ -508,7 +508,7 @@
- # run the linked programs.
- link-libc = -Wl,-rpath-link=$(rpath-link) \
- 	    $(common-objpfx)libc.so$(libc.so-version) \
--	    $(common-objpfx)$(patsubst %,$(libtype.oS),c) \
-+	    $(common-objpfx)$(patsubst %,$(libtype.oSTATIC),c) \
- 	    $(as-needed) $(common-objpfx)elf/ld.so $(no-as-needed) $(gnulib)
- # This is how to find at build-time things that will be installed there.
- rpath-dirs = math elf dlfcn nss nis rt resolv crypt
-@@ -738,7 +738,7 @@
- # The compilation rules use $(CPPFLAGS-${SUFFIX}) and $(CFLAGS-${SUFFIX})
- # to pass different flags for each flavor.
- libtypes = $(foreach o,$(object-suffixes-for-libc),$(libtype$o))
--all-object-suffixes := .o .os .op .og .ob .oS
-+all-object-suffixes := .o .os .op .og .ob .oSTATIC
- object-suffixes :=
- CPPFLAGS-.o = $(pic-default)
- CFLAGS-.o = $(filter %frame-pointer,$(+cflags))
-@@ -798,14 +798,14 @@
- 
- ifeq (yes,$(build-shared))
- # Build special library that contains the static-only routines for libc.
--object-suffixes-for-libc += .oS
-+object-suffixes-for-libc += .oSTATIC
- 
- # Must build the routines as PIC, though, because they can end up in (users')
- # shared objects.  We don't want to use CFLAGS-os because users may, for
- # example, make that processor-specific.
--CFLAGS-.oS = $(CFLAGS-.o) $(PIC-ccflag)
--CPPFLAGS-.oS = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
--libtype.oS = lib%_nonshared.a
-+CFLAGS-.oSTATIC = $(CFLAGS-.o) $(PIC-ccflag)
-+CPPFLAGS-.oSTATIC = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
-+libtype.oSTATIC = lib%_nonshared.a
- endif
- 
- # The assembler can generate debug information too.
-diff -urN a/Makerules b/Makerules
---- a/Makerules	2014-02-22 01:12:46.839334600 +0000
-+++ b/Makerules	2014-02-22 01:12:59.598954900 +0000
-@@ -163,14 +163,14 @@
- # We only generate these in the top-level makefile, to avoid any weirdness
- # from subdir-specific makefile tweaks creeping in on an update.
- $(common-objpfx)%.make: $(..)%.make.c $(..)Makerules $(common-before-compile)
--	rm -f $@T $@.dT
-+	rm -f $@T $@.dTEMP
- 	(echo '# Generated from $*.make.c by Makerules.'; \
- 	 $(CC) $(CFLAGS) $(CPPFLAGS) -E -DASSEMBLER $< \
--	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dT \
-+	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dTEMP \
- 	 | sed -n '/@@@/{s/@@@[	 ]*\(.*\)@@@/\1/;s/[	 ]*$$//p;}'; \
- 	 echo 'common-generated += $(@F)'; \
--	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dT; \
--	 rm -f $@.dT) > $@T
-+	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dTEMP; \
-+	 rm -f $@.dTEMP) > $@T
- 	mv -f $@T $@
- endif
- 
-@@ -449,7 +449,7 @@
- # Bounded pointer thunks are only built for *.ob
- elide-bp-thunks = $(addprefix $(bppfx),$(bp-thunks))
- 
--elide-routines.oS += $(filter-out $(static-only-routines),\
-+elide-routines.oSTATIC += $(filter-out $(static-only-routines),\
- 				  $(routines) $(aux) $(sysdep_routines)) \
- 		     $(elide-bp-thunks)
- elide-routines.os += $(static-only-routines) $(elide-bp-thunks)
-@@ -1068,7 +1068,7 @@
- install: $(inst_libdir)/libc.so
- $(inst_libdir)/libc.so: $(common-objpfx)format.lds \
- 			$(common-objpfx)libc.so$(libc.so-version) \
--			$(inst_libdir)/$(patsubst %,$(libtype.oS),\
-+			$(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
- 						  $(libprefix)$(libc-name)) \
- 			$(+force)
- 	(echo '/* GNU ld script';\
-@@ -1076,7 +1076,7 @@
- 	 echo '   the static library, so try that secondarily.  */';\
- 	 cat $<; \
- 	 echo 'GROUP ( $(slibdir)/libc.so$(libc.so-version)' \
--	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)$(libc-name))'\
-+	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)$(libc-name))'\
- 	      ' AS_NEEDED (' $(slibdir)/$(rtld-installed-name) ') )' \
- 	) > $@.new
- 	mv -f $@.new $@
-diff -urN a/nptl/Makefile b/nptl/Makefile
---- a/nptl/Makefile	2014-02-22 01:12:47.111369200 +0000
-+++ b/nptl/Makefile	2014-02-22 01:12:59.592954100 +0000
-@@ -396,7 +396,7 @@
- 
- $(inst_libdir)/libpthread.so: $(common-objpfx)format.lds \
- 			      $(objpfx)libpthread.so$(libpthread.so-version) \
--			      $(inst_libdir)/$(patsubst %,$(libtype.oS),\
-+			      $(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
- 							$(libprefix)pthread) \
- 			      $(+force)
- 	(echo '/* GNU ld script';\
-@@ -404,7 +404,7 @@
- 	 echo '   the static library, so try that secondarily.  */';\
- 	 cat $<; \
- 	 echo 'GROUP ( $(slibdir)/libpthread.so$(libpthread.so-version)' \
--	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)pthread)'\
-+	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)pthread)'\
- 	      ')' \
- 	) > $@.new
- 	mv -f $@.new $@
-diff -urN a/sysdeps/i386/i686/Makefile b/sysdeps/i386/i686/Makefile
---- a/sysdeps/i386/i686/Makefile	2014-02-22 01:12:48.110496000 +0000
-+++ b/sysdeps/i386/i686/Makefile	2014-02-22 01:12:59.594954400 +0000
-@@ -16,12 +16,12 @@
- CFLAGS-.op += -Wa,-mtune=i686
- CFLAGS-.og += -Wa,-mtune=i686
- CFLAGS-.ob += -Wa,-mtune=i686
--CFLAGS-.oS += -Wa,-mtune=i686
-+CFLAGS-.oSTATIC += -Wa,-mtune=i686
- 
- ASFLAGS-.o += -Wa,-mtune=i686
- ASFLAGS-.os += -Wa,-mtune=i686
- ASFLAGS-.op += -Wa,-mtune=i686
- ASFLAGS-.og += -Wa,-mtune=i686
- ASFLAGS-.ob += -Wa,-mtune=i686
--ASFLAGS-.oS += -Wa,-mtune=i686
-+ASFLAGS-.oSTATIC += -Wa,-mtune=i686
- endif
-diff -urN a/sysdeps/sparc/sparc32/sparcv9/Makefile b/sysdeps/sparc/sparc32/sparcv9/Makefile
---- a/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-02-22 01:12:49.028112600 +0000
-+++ b/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-02-22 01:12:59.596454600 +0000
-@@ -10,4 +10,4 @@
- ASFLAGS-.op += -Wa,-Av9a
- ASFLAGS-.og += -Wa,-Av9a
- ASFLAGS-.ob += -Wa,-Av9a
--ASFLAGS-.oS += -Wa,-Av9a
-+ASFLAGS-.oSTATIC += -Wa,-Av9a
diff --git a/patches/eglibc/2_15/140-MSYS-Hack-force-ln-s.patch b/patches/eglibc/2_15/140-MSYS-Hack-force-ln-s.patch
deleted file mode 100644
index 291c03d..0000000
--- a/patches/eglibc/2_15/140-MSYS-Hack-force-ln-s.patch
+++ /dev/null
@@ -1,39 +0,0 @@
-diff -urN a/configure b/configure
---- a/configure	2014-02-18 21:05:29.506575189 +0000
-+++ b/configure	2014-02-18 21:05:43.073451819 +0000
-@@ -4671,6 +4671,16 @@
- $as_echo "no, using $LN_S" >&6; }
- fi
- 
-+# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
-+# eglibc, whereas cp -r doesn't.
-+case "$build_os" in
-+*mingw*)
-+  as_ln_s='ln -s'
-+  LN_S=$as_ln_s
-+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&5
-+$as_echo "$as_me: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&2;}
-+  ;;
-+esac
- 
- # Was a --with-binutils option given?
- if test -n "$path_binutils"; then
-diff -urN a/configure.in b/configure.in
---- a/configure.in	2014-02-18 21:05:29.506575189 +0000
-+++ b/configure.in	2014-02-18 21:05:43.076785047 +0000
-@@ -1035,6 +1035,15 @@
-   INSTALL='\$(..)./scripts/install-sh -c'
- fi
- AC_PROG_LN_S
-+# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
-+# eglibc, whereas cp -r doesn't.
-+case "$build_os" in
-+*mingw*)
-+  as_ln_s='ln -s'
-+  LN_S=$as_ln_s
-+  AC_MSG_WARN(Hacked as_ln_s and LN_S to 'ln -s' for MSYS2)
-+  ;;
-+esac
- 
- LIBC_PROG_BINUTILS
- AC_SUBST(MIG)dnl Needed by sysdeps/mach/configure.in
diff --git a/patches/eglibc/2_15/160-Remove-test-for-__builtin_expect.patch b/patches/eglibc/2_15/160-Remove-test-for-__builtin_expect.patch
deleted file mode 100644
index aa946ab..0000000
--- a/patches/eglibc/2_15/160-Remove-test-for-__builtin_expect.patch
+++ /dev/null
@@ -1,91 +0,0 @@
-diff -urN a/eglibc-2_15/configure b/eglibc-2_15/configure
---- a/configure	2014-02-07 21:13:28.000000000 +0000
-+++ b/configure	2014-02-18 21:48:54.993535011 +0000
-@@ -7376,40 +7376,6 @@
- fi
- fi
- 
--{ $as_echo "$as_me:$LINENO: checking for __builtin_expect" >&5
--$as_echo_n "checking for __builtin_expect... " >&6; }
--if test "${libc_cv_gcc_builtin_expect+set}" = set; then
--  $as_echo_n "(cached) " >&6
--else
--  cat > conftest.c <<EOF
--#line $LINENO "configure"
--int foo (int a)
--{
--  a = __builtin_expect (a, 10);
--  return a == 10 ? 0 : 1;
--}
--EOF
--if { ac_try='${CC-cc} $CFLAGS $CPPFLAGS $LDFLAGS -nostdlib -nostartfiles
--			    -o conftest conftest.c -lgcc >&5'
--  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
--  (eval $ac_try) 2>&5
--  ac_status=$?
--  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
--  (exit $ac_status); }; }; then
--  libc_cv_gcc_builtin_expect=yes
--else
--  libc_cv_gcc_builtin_expect=no
--fi
--rm -f conftest*
--fi
--{ $as_echo "$as_me:$LINENO: result: $libc_cv_gcc_builtin_expect" >&5
--$as_echo "$libc_cv_gcc_builtin_expect" >&6; }
--if test "$libc_cv_gcc_builtin_expect" = no; then
--  { { $as_echo "$as_me:$LINENO: error: support for __builtin_expect needed" >&5
--$as_echo "$as_me: error: support for __builtin_expect needed" >&2;}
--   { (exit 1); exit 1; }; }
--fi
--
- { $as_echo "$as_me:$LINENO: checking for __builtin_memset" >&5
- $as_echo_n "checking for __builtin_memset... " >&6; }
- if test "${libc_cv_gcc_builtin_memset+set}" = set; then
-diff -urN a/eglibc-2_15/configure.in b/eglibc-2_15/configure.in
---- a/configure.in	2014-02-07 21:13:28.000000000 +0000
-+++ b/configure.in	2014-02-18 21:48:54.993535011 +0000
-@@ -2171,28 +2171,6 @@
- fi
- fi
- 
--dnl Check whether compiler understands __builtin_expect.
--AC_CACHE_CHECK(for __builtin_expect, libc_cv_gcc_builtin_expect,
--[cat > conftest.c <<EOF
--#line $LINENO "configure"
--int foo (int a)
--{
--  a = __builtin_expect (a, 10);
--  return a == 10 ? 0 : 1;
--}
--EOF
--dnl No \ in command here because it ends up inside ''.
--if AC_TRY_COMMAND([${CC-cc} $CFLAGS $CPPFLAGS $LDFLAGS -nostdlib -nostartfiles
--			    -o conftest conftest.c -lgcc >&AS_MESSAGE_LOG_FD]); then
--  libc_cv_gcc_builtin_expect=yes
--else
--  libc_cv_gcc_builtin_expect=no
--fi
--rm -f conftest*])
--if test "$libc_cv_gcc_builtin_expect" = no; then
--  AC_MSG_ERROR([support for __builtin_expect needed])
--fi
--
- AC_CACHE_CHECK(for __builtin_memset, libc_cv_gcc_builtin_memset, [dnl
- cat > conftest.c <<\EOF
- void zero (void *x)
-diff -urN a/sysdeps/i386/configure.rej b/sysdeps/i386/configure.rej
---- a/sysdeps/i386/configure.rej	1970-01-01 01:00:00.000000000 +0100
-+++ b/sysdeps/i386/configure.rej	2014-02-18 21:23:44.723512431 +0000
-@@ -0,0 +1,11 @@
-+--- sysdeps/i386/configure.orig	2014-01-24 09:13:37.232015700 +0000
-++++ sysdeps/i386/configure	2014-01-24 09:14:32.788193300 +0000
-+@@ -632,7 +632,7 @@
-+ done
-+ 
-+ 
-+-ac_fn_c_check_header_mongrel "$LINENO" "cpuid.h" "ac_cv_header_cpuid_h" "$ac_includes_default"
-++ac_fn_c_check_header_mongrel "$LINENO" "cpuid.h" "ac_cv_header_cpuid_h" ""
-+ if test "x$ac_cv_header_cpuid_h" = xyes; then :
-+ 
-+ else
diff --git a/patches/eglibc/2_15/180-Fix-confstr-use-of-local-buffer-outside-its-extent.patch b/patches/eglibc/2_15/180-Fix-confstr-use-of-local-buffer-outside-its-extent.patch
deleted file mode 100644
index 25b7f93..0000000
--- a/patches/eglibc/2_15/180-Fix-confstr-use-of-local-buffer-outside-its-extent.patch
+++ /dev/null
@@ -1,55 +0,0 @@
-diff -urN a/posix/confstr.c b/posix/confstr.c
---- a/posix/confstr.c	2014-02-19 00:13:49.954666882 +0000
-+++ b/posix/confstr.c	2014-02-19 00:19:02.019492923 +0000
-@@ -36,6 +36,10 @@
-   const char *string = "";
-   size_t string_len = 1;
- 
-+  /* Note that this buffer must be large enough for the longest strings
-+     used below.  */
-+  char restenvs[4 * sizeof "POSIX_V7_LPBIG_OFFBIG"];
-+
-   switch (name)
-     {
-     case _CS_PATH:
-diff -urN a/posix/confstr.inc b/posix/confstr.inc
---- a/posix/confstr.inc	2014-02-19 00:13:49.958000267 +0000
-+++ b/posix/confstr.inc	2014-02-19 00:17:22.854625641 +0000
-@@ -29,7 +29,6 @@
- 
- 	 Currently this means all environment which the system allows.  */
-       {
--	char restenvs[4 * sizeof "POSIX_V7_LPBIG_OFFBIG"];
- 
- 	string_len = 0;
- #ifndef _POSIX_V7_ILP32_OFF32
-@@ -92,7 +91,6 @@
- 
- 	 Currently this means all environment which the system allows.  */
-       {
--	char restenvs[4 * sizeof "POSIX_V6_LPBIG_OFFBIG"];
- 
- 	string_len = 0;
- #ifndef _POSIX_V6_ILP32_OFF32
-@@ -155,7 +153,6 @@
- 
- 	 Currently this means all environment which the system allows.  */
-       {
--	char restenvs[4 * sizeof "XBS5_LPBIG_OFFBIG"];
- 
- 	string_len = 0;
- #ifndef _XBS5_ILP32_OFF32
-diff -urN a/posix/cross-getconf.c b/posix/cross-getconf.c
---- a/posix/cross-getconf.c	2014-02-19 00:13:49.954666882 +0000
-+++ b/posix/cross-getconf.c	2014-02-19 00:17:22.854625641 +0000
-@@ -93,6 +93,10 @@
-   const char *string = "";
-   size_t string_len = 1;
- 
-+  /* Note that this buffer must be large enough for the longest strings
-+     used below.  */
-+  char restenvs[4 * sizeof "POSIX_V7_LPBIG_OFFBIG"];
-+
-   switch (name)
-     {
- #include "confstr.inc"
diff --git a/patches/eglibc/2_15/200-make-4.patch b/patches/eglibc/2_15/200-make-4.patch
new file mode 100644
index 0000000..4ca1ebb
--- /dev/null
+++ b/patches/eglibc/2_15/200-make-4.patch
@@ -0,0 +1,24 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-02-07 21:13:28.000000000 +0000
++++ b/configure	2014-02-23 12:27:05.648947000 +0000
+@@ -5246,7 +5246,7 @@
+   ac_prog_version=`$MAKE --version 2>&1 | sed -n 's/^.*GNU Make[^0-9]*\([0-9][0-9.]*\).*$/\1/p'`
+   case $ac_prog_version in
+     '') ac_prog_version="v. ?.??, bad"; ac_verc_fail=yes;;
+-    3.79* | 3.[89]*)
++    3.79* | 3.[89]* | 4.*)
+        ac_prog_version="$ac_prog_version, ok"; ac_verc_fail=no;;
+     *) ac_prog_version="$ac_prog_version, bad"; ac_verc_fail=yes;;
+ 
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-07 21:13:28.000000000 +0000
++++ b/configure.in	2014-02-23 12:27:05.651447400 +0000
+@@ -1048,7 +1048,7 @@
+   critic_missing="$critic_missing gcc")
+ AC_CHECK_PROG_VER(MAKE, gnumake gmake make, --version,
+   [GNU Make[^0-9]*\([0-9][0-9.]*\)],
+-  [3.79* | 3.[89]*], critic_missing="$critic_missing make")
++  [3.79* | 3.[89]* | 4.*], critic_missing="$critic_missing make")
+ 
+ AC_CHECK_PROG_VER(MSGFMT, gnumsgfmt gmsgfmt msgfmt, --version,
+   [GNU gettext.* \([0-9]*\.[0-9.]*\)],
diff --git a/patches/eglibc/2_15/210-configure-Default-to-CPP-CC--E-unless-overridden.patch b/patches/eglibc/2_15/210-configure-Default-to-CPP-CC--E-unless-overridden.patch
new file mode 100644
index 0000000..62bfe0f
--- /dev/null
+++ b/patches/eglibc/2_15/210-configure-Default-to-CPP-CC--E-unless-overridden.patch
@@ -0,0 +1,318 @@
+diff -urN a/ChangeLog b/ChangeLog
+--- a/ChangeLog	2014-02-23 12:27:09.620451400 +0000
++++ b/ChangeLog	2014-02-23 12:27:20.088280600 +0000
+@@ -1,3 +1,8 @@
++2013-01-25  Thomas Schwinge  <thomas@codesourcery.com>
++
++        * configure.in (AC_PROG_CPP): New definition.
++        * configure: Regenerate.
++
+ 2012-09-28  Andreas Schwab  <schwab@linux-m68k.org>
+ 
+ 	[BZ #6530]
+diff -urN a/configure b/configure
+--- a/configure	2014-02-23 12:27:09.632452900 +0000
++++ b/configure	2014-02-23 12:27:20.094781400 +0000
+@@ -2021,6 +2021,11 @@
+ 
+ 
+ 
++# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
++# here to work around the Autoconf issue discussed in
++# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
++# AC_PROG_CPP
++
+ 
+ 
+ subdirs="$subdirs "
+@@ -2898,242 +2903,14 @@
+ 
+ fi
+ 
+-ac_ext=c
+-ac_cpp='$CPP $CPPFLAGS'
+-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+-ac_compiler_gnu=$ac_cv_c_compiler_gnu
+-{ $as_echo "$as_me:$LINENO: checking how to run the C preprocessor" >&5
+-$as_echo_n "checking how to run the C preprocessor... " >&6; }
+ # On Suns, sometimes $CPP names a directory.
+ if test -n "$CPP" && test -d "$CPP"; then
+   CPP=
+ fi
+ if test -z "$CPP"; then
+-  if test "${ac_cv_prog_CPP+set}" = set; then
+-  $as_echo_n "(cached) " >&6
+-else
+-      # Double quotes because CPP needs to be expanded
+-    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
+-    do
+-      ac_preproc_ok=false
+-for ac_c_preproc_warn_flag in '' yes
+-do
+-  # Use a header file that comes with gcc, so configuring glibc
+-  # with a fresh cross-compiler works.
+-  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+-  # <limits.h> exists even on freestanding compilers.
+-  # On the NeXT, cc -E runs the code through the compiler's parser,
+-  # not just through cpp. "Syntax error" is here to catch this case.
+-  cat >conftest.$ac_ext <<_ACEOF
+-/* confdefs.h.  */
+-_ACEOF
+-cat confdefs.h >>conftest.$ac_ext
+-cat >>conftest.$ac_ext <<_ACEOF
+-/* end confdefs.h.  */
+-#ifdef __STDC__
+-# include <limits.h>
+-#else
+-# include <assert.h>
+-#endif
+-		     Syntax error
+-_ACEOF
+-if { (ac_try="$ac_cpp conftest.$ac_ext"
+-case "(($ac_try" in
+-  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+-  *) ac_try_echo=$ac_try;;
+-esac
+-eval ac_try_echo="\"\$as_me:$LINENO: $ac_try_echo\""
+-$as_echo "$ac_try_echo") >&5
+-  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
+-  ac_status=$?
+-  grep -v '^ *+' conftest.er1 >conftest.err
+-  rm -f conftest.er1
+-  cat conftest.err >&5
+-  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
+-  (exit $ac_status); } >/dev/null && {
+-	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+-	 test ! -s conftest.err
+-       }; then
+-  :
+-else
+-  $as_echo "$as_me: failed program was:" >&5
+-sed 's/^/| /' conftest.$ac_ext >&5
+-
+-  # Broken: fails on valid input.
+-continue
+-fi
+-
+-rm -f conftest.err conftest.$ac_ext
+-
+-  # OK, works on sane cases.  Now check whether nonexistent headers
+-  # can be detected and how.
+-  cat >conftest.$ac_ext <<_ACEOF
+-/* confdefs.h.  */
+-_ACEOF
+-cat confdefs.h >>conftest.$ac_ext
+-cat >>conftest.$ac_ext <<_ACEOF
+-/* end confdefs.h.  */
+-#include <ac_nonexistent.h>
+-_ACEOF
+-if { (ac_try="$ac_cpp conftest.$ac_ext"
+-case "(($ac_try" in
+-  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+-  *) ac_try_echo=$ac_try;;
+-esac
+-eval ac_try_echo="\"\$as_me:$LINENO: $ac_try_echo\""
+-$as_echo "$ac_try_echo") >&5
+-  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
+-  ac_status=$?
+-  grep -v '^ *+' conftest.er1 >conftest.err
+-  rm -f conftest.er1
+-  cat conftest.err >&5
+-  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
+-  (exit $ac_status); } >/dev/null && {
+-	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+-	 test ! -s conftest.err
+-       }; then
+-  # Broken: success on invalid input.
+-continue
+-else
+-  $as_echo "$as_me: failed program was:" >&5
+-sed 's/^/| /' conftest.$ac_ext >&5
+-
+-  # Passes both tests.
+-ac_preproc_ok=:
+-break
+-fi
+-
+-rm -f conftest.err conftest.$ac_ext
+-
+-done
+-# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+-rm -f conftest.err conftest.$ac_ext
+-if $ac_preproc_ok; then
+-  break
+-fi
+-
+-    done
+-    ac_cv_prog_CPP=$CPP
+-
+-fi
+-  CPP=$ac_cv_prog_CPP
+-else
+-  ac_cv_prog_CPP=$CPP
+-fi
+-{ $as_echo "$as_me:$LINENO: result: $CPP" >&5
+-$as_echo "$CPP" >&6; }
+-ac_preproc_ok=false
+-for ac_c_preproc_warn_flag in '' yes
+-do
+-  # Use a header file that comes with gcc, so configuring glibc
+-  # with a fresh cross-compiler works.
+-  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+-  # <limits.h> exists even on freestanding compilers.
+-  # On the NeXT, cc -E runs the code through the compiler's parser,
+-  # not just through cpp. "Syntax error" is here to catch this case.
+-  cat >conftest.$ac_ext <<_ACEOF
+-/* confdefs.h.  */
+-_ACEOF
+-cat confdefs.h >>conftest.$ac_ext
+-cat >>conftest.$ac_ext <<_ACEOF
+-/* end confdefs.h.  */
+-#ifdef __STDC__
+-# include <limits.h>
+-#else
+-# include <assert.h>
+-#endif
+-		     Syntax error
+-_ACEOF
+-if { (ac_try="$ac_cpp conftest.$ac_ext"
+-case "(($ac_try" in
+-  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+-  *) ac_try_echo=$ac_try;;
+-esac
+-eval ac_try_echo="\"\$as_me:$LINENO: $ac_try_echo\""
+-$as_echo "$ac_try_echo") >&5
+-  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
+-  ac_status=$?
+-  grep -v '^ *+' conftest.er1 >conftest.err
+-  rm -f conftest.er1
+-  cat conftest.err >&5
+-  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
+-  (exit $ac_status); } >/dev/null && {
+-	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+-	 test ! -s conftest.err
+-       }; then
+-  :
+-else
+-  $as_echo "$as_me: failed program was:" >&5
+-sed 's/^/| /' conftest.$ac_ext >&5
+-
+-  # Broken: fails on valid input.
+-continue
+-fi
+-
+-rm -f conftest.err conftest.$ac_ext
+-
+-  # OK, works on sane cases.  Now check whether nonexistent headers
+-  # can be detected and how.
+-  cat >conftest.$ac_ext <<_ACEOF
+-/* confdefs.h.  */
+-_ACEOF
+-cat confdefs.h >>conftest.$ac_ext
+-cat >>conftest.$ac_ext <<_ACEOF
+-/* end confdefs.h.  */
+-#include <ac_nonexistent.h>
+-_ACEOF
+-if { (ac_try="$ac_cpp conftest.$ac_ext"
+-case "(($ac_try" in
+-  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+-  *) ac_try_echo=$ac_try;;
+-esac
+-eval ac_try_echo="\"\$as_me:$LINENO: $ac_try_echo\""
+-$as_echo "$ac_try_echo") >&5
+-  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
+-  ac_status=$?
+-  grep -v '^ *+' conftest.er1 >conftest.err
+-  rm -f conftest.er1
+-  cat conftest.err >&5
+-  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
+-  (exit $ac_status); } >/dev/null && {
+-	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+-	 test ! -s conftest.err
+-       }; then
+-  # Broken: success on invalid input.
+-continue
+-else
+-  $as_echo "$as_me: failed program was:" >&5
+-sed 's/^/| /' conftest.$ac_ext >&5
+-
+-  # Passes both tests.
+-ac_preproc_ok=:
+-break
++  CPP="$CC -E"
+ fi
+ 
+-rm -f conftest.err conftest.$ac_ext
+-
+-done
+-# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+-rm -f conftest.err conftest.$ac_ext
+-if $ac_preproc_ok; then
+-  :
+-else
+-  { { $as_echo "$as_me:$LINENO: error: in \`$ac_pwd':" >&5
+-$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+-{ { $as_echo "$as_me:$LINENO: error: C preprocessor \"$CPP\" fails sanity check
+-See \`config.log' for more details." >&5
+-$as_echo "$as_me: error: C preprocessor \"$CPP\" fails sanity check
+-See \`config.log' for more details." >&2;}
+-   { (exit 1); exit 1; }; }; }
+-fi
+-
+-ac_ext=c
+-ac_cpp='$CPP $CPPFLAGS'
+-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+-ac_compiler_gnu=$ac_cv_c_compiler_gnu
+-
+ # We need the C++ compiler only for testing.
+ ac_ext=cpp
+ ac_cpp='$CXXCPP $CPPFLAGS'
+@@ -3980,7 +3757,7 @@
+ 
+ 
+ # Check whether --enable-obsolete-rpc was given.
+-if test "${enable_obsolete_rpc+set}" = set; then :
++if test "${enable_obsolete_rpc+set}" = set; then
+   enableval=$enable_obsolete_rpc; link_obsolete_rpc=$enableval
+ else
+   link_obsolete_rpc=no
+@@ -3989,7 +3766,9 @@
+ 
+ 
+ if test "$link_obsolete_rpc" = yes; then
+-  $as_echo "#define LINK_OBSOLETE_RPC 1" >>confdefs.h
++  cat >>confdefs.h <<\_ACEOF
++#define LINK_OBSOLETE_RPC 1
++_ACEOF
+ 
+ fi
+ 
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-23 12:27:09.632952900 +0000
++++ b/configure.in	2014-02-23 12:27:20.097281700 +0000
+@@ -5,6 +5,23 @@
+ AC_CONFIG_HEADERS([config.h])
+ AC_CONFIG_AUX_DIR([scripts])
+ 
++# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
++# here to work around the Autoconf issue discussed in
++# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
++AC_DEFUN([AC_PROG_CPP],
++[AC_REQUIRE([AC_PROG_CC])dnl
++AC_ARG_VAR([CPP],      [C preprocessor])dnl
++_AC_ARG_VAR_CPPFLAGS()dnl
++# On Suns, sometimes $CPP names a directory.
++if test -n "$CPP" && test -d "$CPP"; then
++  CPP=
++fi
++if test -z "$CPP"; then
++  CPP="$CC -E"
++fi
++AC_SUBST(CPP)dnl
++])# AC_PROG_CPP
++
+ dnl This is here so we can set $subdirs directly based on configure fragments.
+ AC_CONFIG_SUBDIRS()
+ 
diff --git a/patches/eglibc/2_15/220-Fix-crossrpc-to-build-on-non-Linux.patch b/patches/eglibc/2_15/220-Fix-crossrpc-to-build-on-non-Linux.patch
new file mode 100644
index 0000000..32ba3ef
--- /dev/null
+++ b/patches/eglibc/2_15/220-Fix-crossrpc-to-build-on-non-Linux.patch
@@ -0,0 +1,247 @@
+diff -urN a/sunrpc/rpc/types.h b/sunrpc/rpc/types.h
+--- a/sunrpc/rpc/types.h	2014-02-23 12:27:26.428085700 +0000
++++ b/sunrpc/rpc/types.h	2014-02-23 12:27:34.635627900 +0000
+@@ -69,6 +69,7 @@
+ #include <sys/types.h>
+ #endif
+ 
++#ifdef __linux__
+ #ifndef __u_char_defined
+ typedef __u_char u_char;
+ typedef __u_short u_short;
+@@ -84,11 +85,14 @@
+ typedef __caddr_t caddr_t;
+ # define __daddr_t_defined
+ #endif
++#endif
+ 
+ #include <sys/time.h>
+ #include <sys/param.h>
+ 
++#ifndef _WIN32
+ #include <netinet/in.h>
++#endif
+ 
+ #ifndef INADDR_LOOPBACK
+ #define       INADDR_LOOPBACK         (u_long)0x7F000001
+diff -urN a/sunrpc/rpc_main.c b/sunrpc/rpc_main.c
+--- a/sunrpc/rpc_main.c	2014-02-23 12:27:26.437086800 +0000
++++ b/sunrpc/rpc_main.c	2014-02-23 12:27:34.638128200 +0000
+@@ -38,13 +38,19 @@
+ #include <stdio.h>
+ #include <string.h>
+ #include <unistd.h>
++#ifndef IS_IN_build
+ #include <libintl.h>
++#endif
+ #include <ctype.h>
+ #include <sys/types.h>
+ #include <sys/param.h>
+ #include <sys/file.h>
+ #include <sys/stat.h>
++#ifndef _WIN32
+ #include <sys/wait.h>
++#else
++#include <windows.h>
++#endif
+ #include "rpc_parse.h"
+ #include "rpc_util.h"
+ #include "rpc_scan.h"
+@@ -53,6 +59,33 @@
+ #include "../version.h"
+ #define PACKAGE _libc_intl_domainname
+ 
++#ifdef _WIN32
++#define rindex(_dest, _src) strrchr((_dest), (_src))
++
++char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src);
++
++char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src)
++{
++  if (src == NULL)
++      return NULL;
++  return strcpy(dest, src) + strlen(dest);
++}
++#endif /* _WIN32 */
++
++#if defined(_WIN32) || defined(__BSD__)
++
++char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len);
++
++char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len)
++{
++  size_t min_len = strlen(src);
++  if (min_len > len)
++    min_len = len;
++  return strncpy(dest, src, len) + min_len;
++}
++
++#endif /* defined(_WIN32) || defined(__BSD__) */
++
+ #define EXTEND	1		/* alias for TRUE */
+ #define DONT_EXTEND	0	/* alias for FALSE */
+ 
+@@ -83,7 +116,11 @@
+ static const char *CPP = SUNOS_CPP;
+ static const char CPPFLAGS[] = "-C";
+ static char *pathbuf;
++#ifdef _WIN32
++static HANDLE cpp_pid;
++#else
+ static int cpp_pid;
++#endif
+ static const char *allv[] =
+ {
+   "rpcgen", "-s", "udp", "-s", "tcp"
+@@ -335,6 +372,20 @@
+ {
+   struct stat buf;
+ 
++  /* Avoid trying to directly execute a bash script on Windows. */
++#ifdef _WIN32
++  char* CPPENVV = getenv("CPP");
++  if (CPPENVV)
++    {
++      CPP = (char*)malloc(strlen(CPPENVV)+1);
++      strcpy((char*)CPP, CPPENVV);
++      /* Don't bother checking that it exists with stat64 as
++       * we'd have to check in the path, also it usually ends
++       * with a few arguments. */
++      return;
++    }
++#endif
++
+   if (stat (CPP, &buf) < 0)
+     {				/* /lib/cpp or explicit cpp does not exist */
+       if (cppDefined)
+@@ -354,9 +405,122 @@
+     }
+ }
+ 
++#ifdef _WIN32
++/*
++ * Open input file with given define for C-preprocessor
++ */
++static void
++open_input (const char *infile, const char *define)
++{
++  int argi;
++  int argcc = 0;
++  LPSTR argsall;
++  HANDLE StdOutHandle;
++  HANDLE StdErrHandle;
++  HANDLE ReadPipe;
++  HANDLE WritePipe;
++  SECURITY_ATTRIBUTES SecAttr;
++  STARTUPINFO StartupInfo;
++  PROCESS_INFORMATION ProcessInfo;
++  DWORD Status;
++
++  find_cpp ();
++  putarg (0, CPP);
++  putarg (1, CPPFLAGS);
++  addarg (define);
++  if (infile)
++    addarg (infile);
++  addarg ((char *) NULL);
++  for (argi = 0; argi < argcount - 1; ++argi)
++    {
++      argcc += strlen(arglist[argi])+2;
++    }
++  argsall = (LPSTR)alloca(argcc + 1);
++  if (!argsall)
++    {
++      fprintf (stderr, _ ("cannot alloca for argsall\n"));
++      exit (1);
++    }
++  argsall[0] = '\0';
++  for (argi = 0; argi < argcount - 1; ++argi)
++    {
++      strcat((char*)argsall, arglist[argi]);
++      strcat((char*)argsall, " ");
++    }
++
++  memset(&SecAttr,     0, sizeof(SecAttr));
++  memset(&StartupInfo, 0, sizeof(StartupInfo));
++  memset(&ProcessInfo, 0, sizeof(ProcessInfo));
++
++  SecAttr.nLength = sizeof(SecAttr);
++  SecAttr.bInheritHandle = TRUE;
++
++  Status = CreatePipe( &ReadPipe, &WritePipe, &SecAttr, 0 );
++  if (!Status)
++    {
++      fprintf (stderr, _ ("cannot CreatePipe: GetLastError() -> %d\n"), GetLastError());
++      exit (1);
++    }
++
++  SetHandleInformation( ReadPipe, HANDLE_FLAG_INHERIT, 0 );
++
++  /*
++  StdOutHandle = GetStdHandle( STD_OUTPUT_HANDLE );
++  StdErrHandle = GetStdHandle( STD_ERROR_HANDLE );
++  if (StdOutHandle != INVALID_HANDLE_VALUE) {
++      SetHandleInformation( StdOutHandle, HANDLE_FLAG_INHERIT, 0 );
++  }
++  if (StdErrHandle != INVALID_HANDLE_VALUE) {
++      SetHandleInformation( StdErrHandle, HANDLE_FLAG_INHERIT, 0 );
++  }
++  */
++
++  StartupInfo.cb         = sizeof(StartupInfo);
++  StartupInfo.hStdInput  = GetStdHandle( STD_INPUT_HANDLE );
++  StartupInfo.hStdOutput = WritePipe;
++  StartupInfo.hStdError  = GetStdHandle( STD_ERROR_HANDLE );
++  StartupInfo.dwFlags    = STARTF_USESTDHANDLES;
++
++  Status = CreateProcess(
++          NULL,           /* lpApplicationName */
++          argsall,        /* lpCommandLine */
++          NULL,           /* lpProcessAttributes */
++          NULL,           /* lpThreadAttributes */
++          TRUE,           /* bInheritHandles */
++          0,              /* dwCreationFlags */
++          NULL,           /* lpEnvironment */
++          NULL,           /* lpCurrentDirectory */
++          &StartupInfo,   /* lpStartupInfo */
++          &ProcessInfo ); /* lpProcessInformation */
++
++  CloseHandle( WritePipe );
++  if (!Status)
++    {
++      fprintf (stderr, _ ("cannot find C preprocessor: %s, GetLastError() -> %d\n"), CPP, GetLastError());
++      exit (1);
++    }
++  int fd = _open_osfhandle((intptr_t)ReadPipe, _O_APPEND | _O_RDONLY);
++  if(fd != -1)
++    {
++      fin = _fdopen(fd, "a+");
++    }
++  cpp_pid = ProcessInfo.hProcess;
++}
++
++/* Close the connection to the C-preprocessor and check for successfull
++   termination.  */
++static void
++close_input (void)
++{
++  WaitForSingleObject(cpp_pid, INFINITE);
++}
++
++#else
++
+ /*
+  * Open input file with given define for C-preprocessor
+  */
++
+ static void
+ open_input (const char *infile, const char *define)
+ {
+@@ -424,6 +588,7 @@
+       crash ();
+     }
+ }
++#endif
+ 
+ /* valid tirpc nettypes */
+ static const char *valid_ti_nettypes[] =
diff --git a/patches/eglibc/2_15/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch b/patches/eglibc/2_15/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
new file mode 100644
index 0000000..599f7aa
--- /dev/null
+++ b/patches/eglibc/2_15/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
@@ -0,0 +1,113 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-04-27 01:03:05.863090200 +0100
++++ b/configure	2014-04-27 01:03:45.506357600 +0100
+@@ -706,6 +706,7 @@
+ libc_cv_gcc_static_libgcc
+ CXX_SYSINCLUDES
+ SYSINCLUDES
++sysheaders
+ AUTOCONF
+ READELF
+ SED
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-04-27 01:03:05.864090200 +0100
++++ b/configure.in	2014-04-27 01:03:45.520358400 +0100
+@@ -1133,6 +1133,7 @@
+     done
+   fi
+ fi
++AC_SUBST(sysheaders)
+ AC_SUBST(SYSINCLUDES)
+ AC_SUBST(CXX_SYSINCLUDES)
+ 
+diff -urN a/elf/Makefile b/elf/Makefile
+--- a/elf/Makefile	2014-04-27 01:03:05.960095700 +0100
++++ b/elf/Makefile	2014-04-27 01:03:45.523358600 +0100
+@@ -146,6 +146,15 @@
+ ld-map		= $(common-objpfx)ld.map
+ # eglibc: endif
+ 
++# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
++# suffix of w means Windows.
++uname_o := $(shell uname -o)
++ifneq (, $(findstring Msys, $(uname_o)))
++common-objpfxw = $(shell cd $(common-objpfx); pwd -W)/
++else
++common-objpfxw = $(common-objpfx)
++endif
++
+ ifeq (yes,$(build-shared))
+ extra-objs	= $(all-rtld-routines:%=%.os) soinit.os sofini.os interp.os
+ generated	+= librtld.os dl-allobjs.os ld.so ldd
+@@ -388,15 +397,15 @@
+ 
+ $(objpfx)librtld.mk: $(objpfx)librtld.map Makefile
+ 	LC_ALL=C \
+-	sed -n 's@^$(common-objpfx)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
++	sed -n 's@^$(common-objpfxw)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
+ 	    $< | \
+ 	while read lib file; do \
+ 	  case $$lib in \
+ 	  libc_pic.a) \
+ 	    LC_ALL=C fgrep -l /$$file \
+-		  $(common-objpfx)stamp.os $(common-objpfx)*/stamp.os | \
++		  $(common-objpfxw)stamp.os $(common-objpfxw)*/stamp.os | \
+ 	    LC_ALL=C \
+-	    sed 's@^$(common-objpfx)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
++	    sed 's@^$(common-objpfxw)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
+ 	    ;; \
+ 	  */*.a) \
+ 	    echo rtld-$${lib%%/*} += $$file ;; \
+diff -urN a/Makefile.in b/Makefile.in
+--- a/Makefile.in	2014-04-27 01:03:06.646134900 +0100
++++ b/Makefile.in	2014-04-27 01:04:20.059333900 +0100
+@@ -1,11 +1,12 @@
+ srcdir = @srcdir@
++sysheaders = @sysheaders@
+ 
+ # Uncomment the line below if you want to do parallel build.
+ # PARALLELMFLAGS = -j 4
+ 
+ all .DEFAULT:
+-	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` $@
++	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` sysheaders=$(sysheaders) $@
+ 
+ install:
+ 	LANGUAGE=C LC_ALL=C; export LANGUAGE LC_ALL; \
+-	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` $@
++	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` sysheaders=$(sysheaders) $@
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2014-04-27 01:03:06.646134900 +0100
++++ b/Makerules	2014-04-27 01:03:45.527358800 +0100
+@@ -402,11 +402,29 @@
+ mv -f $(@:.d=.T) $@ $(generate-md5)
+ endef
+ 
++# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
++# suffix of w means Windows, and m means MSYS2.
++uname_o := $(shell uname -o)
++sysroot = $(shell echo `$(CC) -print-file-name="include"`)
++ifneq (, $(findstring Msys, $(uname_o)))
++common-objpfxw = $(shell cd $(common-objpfx); pwd -W)/
++sysheadersw = $(shell cd $(sysheaders); pwd -W)
++sysrootm = $(shell cd $(sysroot); pwd)
++else
++common-objpfxw = $(common-objpfx)
++sysheadersw = $(sysheaders)
++sysrootm = $(sysroot)
++endif
++
+ ifneq (,$(objpfx))
+ # Continuation lines here are dangerous because they introduce spaces!
+ define sed-remove-objpfx
+--e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfx)))@ $$(common-objpfx)@g' \
+--e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfx)))@$$(common-objpfx)@g'
++-e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfxw)))@ $$(common-objpfx)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfxw)))@$$(common-objpfx)@g' \
++-e 's@ $(subst .,\.,$(subst @,\@,$(sysheadersw)))@ $(sysheaders)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(sysheadersw)))@$(sysheaders)@g' \
++-e 's@ $(subst .,\.,$(subst @,\@,$(sysroot)))@ $(sysrootm)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(sysroot)))@$(sysrootm)@g'
+ endef
+ endif
+ 
diff --git a/patches/eglibc/2_15/240-Rename-extensions-for-case-insensitive-fs.patch b/patches/eglibc/2_15/240-Rename-extensions-for-case-insensitive-fs.patch
new file mode 100644
index 0000000..4d5bdcb
--- /dev/null
+++ b/patches/eglibc/2_15/240-Rename-extensions-for-case-insensitive-fs.patch
@@ -0,0 +1,201 @@
+diff -urN a/ChangeLog b/ChangeLog
+--- a/ChangeLog	2014-04-27 01:08:14.134722300 +0100
++++ b/ChangeLog	2014-04-27 01:08:47.198613400 +0100
+@@ -1,3 +1,8 @@
++2014-01-22  Ray Donnelly  <mingw.android@gmail.com>
++
++        * Rename .oS to .oSTATIC so that builds can be done on file
++        systems that are not both case sensitive and case preserving.
++
+ 2013-01-25  Thomas Schwinge  <thomas@codesourcery.com>
+ 
+         * configure.in (AC_PROG_CPP): New definition.
+diff -urN a/extra-lib.mk b/extra-lib.mk
+--- a/extra-lib.mk	2014-04-27 01:08:14.413738200 +0100
++++ b/extra-lib.mk	2014-04-27 01:08:47.267617400 +0100
+@@ -13,7 +13,7 @@
+ 
+ ifneq (,$($(lib)-static-only-routines))
+ ifneq (,$(filter yesyes%,$(build-shared)$(elf)$($(lib).so-version)))
+-object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oS)
++object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oSTATIC)
+ endif
+ endif
+ 
+@@ -31,7 +31,7 @@
+ 
+ # Add each flavor of library to the lists of things to build and install.
+ install-lib += $(foreach o,$(object-suffixes-$(lib)),$(lib:lib%=$(libtype$o)))
+-extra-objs += $(foreach o,$(filter-out .os .oS,$(object-suffixes-$(lib))),\
++extra-objs += $(foreach o,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))),\
+ 			$(patsubst %,%$o,$(filter-out \
+ 					   $($(lib)-shared-only-routines),\
+ 					   $(all-$(lib)-routines))))
+@@ -59,7 +59,7 @@
+ 
+ 
+ # Use o-iterator.mk to generate a rule for each flavor of library.
+-ifneq (,$(filter-out .os .oS,$(object-suffixes-$(lib))))
++ifneq (,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))))
+ define o-iterator-doit
+ $(objpfx)$(patsubst %,$(libtype$o),$(lib:lib%=%)): \
+   $(patsubst %,$(objpfx)%$o,\
+@@ -67,7 +67,7 @@
+ 			  $(all-$(lib)-routines))); \
+ 	$$(build-extra-lib)
+ endef
+-object-suffixes-left = $(filter-out .os .oS,$(object-suffixes-$(lib)))
++object-suffixes-left = $(filter-out .os .oSTATIC,$(object-suffixes-$(lib)))
+ include $(patsubst %,$(..)o-iterator.mk,$(object-suffixes-left))
+ endif
+ 
+@@ -79,9 +79,9 @@
+ 	$(build-extra-lib)
+ endif
+ 
+-ifneq (,$(filter .oS,$(object-suffixes-$(lib))))
+-$(objpfx)$(patsubst %,$(libtype.oS),$(lib:lib%=%)): \
+-  $(patsubst %,$(objpfx)%.oS,\
++ifneq (,$(filter .oSTATIC,$(object-suffixes-$(lib))))
++$(objpfx)$(patsubst %,$(libtype.oSTATIC),$(lib:lib%=%)): \
++  $(patsubst %,$(objpfx)%.oSTATIC,\
+ 	     $(filter $($(lib)-static-only-routines),\
+ 		      $(all-$(lib)-routines)))
+ 	$(build-extra-lib)
+diff -urN a/Makeconfig b/Makeconfig
+--- a/Makeconfig	2014-04-27 01:08:14.950769000 +0100
++++ b/Makeconfig	2014-04-27 01:08:47.269617500 +0100
+@@ -508,7 +508,7 @@
+ # run the linked programs.
+ link-libc = -Wl,-rpath-link=$(rpath-link) \
+ 	    $(common-objpfx)libc.so$(libc.so-version) \
+-	    $(common-objpfx)$(patsubst %,$(libtype.oS),c) \
++	    $(common-objpfx)$(patsubst %,$(libtype.oSTATIC),c) \
+ 	    $(as-needed) $(common-objpfx)elf/ld.so $(no-as-needed) $(gnulib)
+ # This is how to find at build-time things that will be installed there.
+ rpath-dirs = math elf dlfcn nss nis rt resolv crypt
+@@ -738,7 +738,7 @@
+ # The compilation rules use $(CPPFLAGS-${SUFFIX}) and $(CFLAGS-${SUFFIX})
+ # to pass different flags for each flavor.
+ libtypes = $(foreach o,$(object-suffixes-for-libc),$(libtype$o))
+-all-object-suffixes := .o .os .op .og .ob .oS
++all-object-suffixes := .o .os .op .og .ob .oSTATIC
+ object-suffixes :=
+ CPPFLAGS-.o = $(pic-default)
+ CFLAGS-.o = $(filter %frame-pointer,$(+cflags))
+@@ -798,14 +798,14 @@
+ 
+ ifeq (yes,$(build-shared))
+ # Build special library that contains the static-only routines for libc.
+-object-suffixes-for-libc += .oS
++object-suffixes-for-libc += .oSTATIC
+ 
+ # Must build the routines as PIC, though, because they can end up in (users')
+ # shared objects.  We don't want to use CFLAGS-os because users may, for
+ # example, make that processor-specific.
+-CFLAGS-.oS = $(CFLAGS-.o) $(PIC-ccflag)
+-CPPFLAGS-.oS = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
+-libtype.oS = lib%_nonshared.a
++CFLAGS-.oSTATIC = $(CFLAGS-.o) $(PIC-ccflag)
++CPPFLAGS-.oSTATIC = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
++libtype.oSTATIC = lib%_nonshared.a
+ endif
+ 
+ # The assembler can generate debug information too.
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2014-04-27 01:08:14.951769000 +0100
++++ b/Makerules	2014-04-27 01:08:47.272617700 +0100
+@@ -163,14 +163,14 @@
+ # We only generate these in the top-level makefile, to avoid any weirdness
+ # from subdir-specific makefile tweaks creeping in on an update.
+ $(common-objpfx)%.make: $(..)%.make.c $(..)Makerules $(common-before-compile)
+-	rm -f $@T $@.dT
++	rm -f $@T $@.dTEMP
+ 	(echo '# Generated from $*.make.c by Makerules.'; \
+ 	 $(CC) $(CFLAGS) $(CPPFLAGS) -E -DASSEMBLER $< \
+-	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dT \
++	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dTEMP \
+ 	 | sed -n '/@@@/{s/@@@[	 ]*\(.*\)@@@/\1/;s/[	 ]*$$//p;}'; \
+ 	 echo 'common-generated += $(@F)'; \
+-	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dT; \
+-	 rm -f $@.dT) > $@T
++	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dTEMP; \
++	 rm -f $@.dTEMP) > $@T
+ 	mv -f $@T $@
+ endif
+ 
+@@ -459,7 +459,7 @@
+ # Bounded pointer thunks are only built for *.ob
+ elide-bp-thunks = $(addprefix $(bppfx),$(bp-thunks))
+ 
+-elide-routines.oS += $(filter-out $(static-only-routines),\
++elide-routines.oSTATIC += $(filter-out $(static-only-routines),\
+ 				  $(routines) $(aux) $(sysdep_routines)) \
+ 		     $(elide-bp-thunks)
+ elide-routines.os += $(static-only-routines) $(elide-bp-thunks)
+@@ -1078,7 +1078,7 @@
+ install: $(inst_libdir)/libc.so
+ $(inst_libdir)/libc.so: $(common-objpfx)format.lds \
+ 			$(common-objpfx)libc.so$(libc.so-version) \
+-			$(inst_libdir)/$(patsubst %,$(libtype.oS),\
++			$(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
+ 						  $(libprefix)$(libc-name)) \
+ 			$(+force)
+ 	(echo '/* GNU ld script';\
+@@ -1086,7 +1086,7 @@
+ 	 echo '   the static library, so try that secondarily.  */';\
+ 	 cat $<; \
+ 	 echo 'GROUP ( $(slibdir)/libc.so$(libc.so-version)' \
+-	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)$(libc-name))'\
++	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)$(libc-name))'\
+ 	      ' AS_NEEDED (' $(slibdir)/$(rtld-installed-name) ') )' \
+ 	) > $@.new
+ 	mv -f $@.new $@
+diff -urN a/nptl/Makefile b/nptl/Makefile
+--- a/nptl/Makefile	2014-04-27 01:08:15.092777100 +0100
++++ b/nptl/Makefile	2014-04-27 01:08:47.274617800 +0100
+@@ -396,7 +396,7 @@
+ 
+ $(inst_libdir)/libpthread.so: $(common-objpfx)format.lds \
+ 			      $(objpfx)libpthread.so$(libpthread.so-version) \
+-			      $(inst_libdir)/$(patsubst %,$(libtype.oS),\
++			      $(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
+ 							$(libprefix)pthread) \
+ 			      $(+force)
+ 	(echo '/* GNU ld script';\
+@@ -404,7 +404,7 @@
+ 	 echo '   the static library, so try that secondarily.  */';\
+ 	 cat $<; \
+ 	 echo 'GROUP ( $(slibdir)/libpthread.so$(libpthread.so-version)' \
+-	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)pthread)'\
++	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)pthread)'\
+ 	      ')' \
+ 	) > $@.new
+ 	mv -f $@.new $@
+diff -urN a/sysdeps/i386/i686/Makefile b/sysdeps/i386/i686/Makefile
+--- a/sysdeps/i386/i686/Makefile	2014-04-27 01:08:15.651809100 +0100
++++ b/sysdeps/i386/i686/Makefile	2014-04-27 01:08:47.276617900 +0100
+@@ -16,12 +16,12 @@
+ CFLAGS-.op += -Wa,-mtune=i686
+ CFLAGS-.og += -Wa,-mtune=i686
+ CFLAGS-.ob += -Wa,-mtune=i686
+-CFLAGS-.oS += -Wa,-mtune=i686
++CFLAGS-.oSTATIC += -Wa,-mtune=i686
+ 
+ ASFLAGS-.o += -Wa,-mtune=i686
+ ASFLAGS-.os += -Wa,-mtune=i686
+ ASFLAGS-.op += -Wa,-mtune=i686
+ ASFLAGS-.og += -Wa,-mtune=i686
+ ASFLAGS-.ob += -Wa,-mtune=i686
+-ASFLAGS-.oS += -Wa,-mtune=i686
++ASFLAGS-.oSTATIC += -Wa,-mtune=i686
+ endif
+diff -urN a/sysdeps/sparc/sparc32/sparcv9/Makefile b/sysdeps/sparc/sparc32/sparcv9/Makefile
+--- a/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-04-27 01:08:16.162838300 +0100
++++ b/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-04-27 01:08:47.278618000 +0100
+@@ -10,4 +10,4 @@
+ ASFLAGS-.op += -Wa,-Av9a
+ ASFLAGS-.og += -Wa,-Av9a
+ ASFLAGS-.ob += -Wa,-Av9a
+-ASFLAGS-.oS += -Wa,-Av9a
++ASFLAGS-.oSTATIC += -Wa,-Av9a
diff --git a/patches/eglibc/2_15/250-MSYS-Hack-force-ln-s.patch b/patches/eglibc/2_15/250-MSYS-Hack-force-ln-s.patch
new file mode 100644
index 0000000..aac935d
--- /dev/null
+++ b/patches/eglibc/2_15/250-MSYS-Hack-force-ln-s.patch
@@ -0,0 +1,39 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-02-23 12:28:07.506301900 +0000
++++ b/configure	2014-02-23 12:28:17.906122500 +0000
+@@ -4672,6 +4672,16 @@
+ $as_echo "no, using $LN_S" >&6; }
+ fi
+ 
++# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
++# eglibc, whereas cp -r doesn't.
++case "$build_os" in
++*mingw*)
++  as_ln_s='ln -s'
++  LN_S=$as_ln_s
++  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&5
++$as_echo "$as_me: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&2;}
++  ;;
++esac
+ 
+ # Was a --with-binutils option given?
+ if test -n "$path_binutils"; then
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-23 12:28:07.506301900 +0000
++++ b/configure.in	2014-02-23 12:28:17.910123000 +0000
+@@ -1035,6 +1035,15 @@
+   INSTALL='\$(..)./scripts/install-sh -c'
+ fi
+ AC_PROG_LN_S
++# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
++# eglibc, whereas cp -r doesn't.
++case "$build_os" in
++*mingw*)
++  as_ln_s='ln -s'
++  LN_S=$as_ln_s
++  AC_MSG_WARN(Hacked as_ln_s and LN_S to 'ln -s' for MSYS2)
++  ;;
++esac
+ 
+ LIBC_PROG_BINUTILS
+ AC_SUBST(MIG)dnl Needed by sysdeps/mach/configure.in
diff --git a/patches/eglibc/2_15/260-cross-fix-rpc_types_h-include.patch b/patches/eglibc/2_15/260-cross-fix-rpc_types_h-include.patch
new file mode 100644
index 0000000..b2fec09
--- /dev/null
+++ b/patches/eglibc/2_15/260-cross-fix-rpc_types_h-include.patch
@@ -0,0 +1,11 @@
+--- a/sunrpc/rpc_clntout.c	2014-02-24 20:36:52.244519000 +0000
++++ b/sunrpc/rpc_clntout.c	2014-02-24 20:38:11.279055100 +0000
+@@ -31,7 +31,7 @@
+  */
+ #include <stdio.h>
+ #include <string.h>
+-#include <rpc/types.h>
++#include "rpc/types.h"
+ #include "rpc_parse.h"
+ #include "rpc_util.h"
+ #include "proto.h"
diff --git a/patches/eglibc/2_15/270-MinGW-w64-cross-fixes-for-timezone-and-getconf.patch b/patches/eglibc/2_15/270-MinGW-w64-cross-fixes-for-timezone-and-getconf.patch
new file mode 100644
index 0000000..9e43962
--- /dev/null
+++ b/patches/eglibc/2_15/270-MinGW-w64-cross-fixes-for-timezone-and-getconf.patch
@@ -0,0 +1,137 @@
+diff -urN a/posix/cross-getconf.c b/posix/cross-getconf.c
+--- a/posix/cross-getconf.c	2014-02-25 00:34:28.936889000 +0000
++++ b/posix/cross-getconf.c	2014-02-25 00:34:34.591607100 +0000
+@@ -119,7 +119,9 @@
+ 
+   getconf_dir = getenv ("GETCONF_DIR");
+   if (getconf_dir == NULL
+-      || strcmp (getconf_dir, "/dev/null") != 0)
++      || (strcmp (getconf_dir, "/dev/null") != 0 &&
++          strcmp (getconf_dir, "nul") != 0
++          ))
+     {
+       fprintf (stderr, "%s: GETCONF_DIR should be /dev/null\n", argv[0]);
+       return 1;
+diff -urN a/timezone/Makefile b/timezone/Makefile
+--- a/timezone/Makefile	2014-02-25 00:34:31.877262400 +0000
++++ b/timezone/Makefile	2014-02-25 00:34:37.446969700 +0000
+@@ -180,12 +180,27 @@
+ 
+ $(objpfx)zic: $(addprefix $(objpfx), $(zic-objs))
+ 
+-$(addprefix $(objpfx)cross-,$(zic-objs)): $(objpfx)cross-%.o: %.c
+-	gcc $< -c $(OUTPUT_OPTION) $(CFLAGS-$*.c) $(CPPFLAGS-$*) \
+-		-DCROSS_ZIC $(compile-mkdep-flags)
++#$(addprefix $(objpfx)cross-,$(zic-objs)): $(objpfx)cross-%.o: %.c
++#	gcc $< -c $(OUTPUT_OPTION) $(CFLAGS-$*.c) $(CPPFLAGS-$*) \
++#		-DCROSS_ZIC $(compile-mkdep-flags)
++#
++#$(objpfx)cross-zic: $(addprefix $(objpfx)cross-,$(zic-objs))
++#	gcc $(addprefix $(objpfx)cross-,$(zic-objs)) -o $@
+ 
+-$(objpfx)cross-zic: $(addprefix $(objpfx)cross-,$(zic-objs))
+-	gcc $(addprefix $(objpfx)cross-,$(zic-objs)) -o $@
++cross-zic-objs := $(addprefix $(objpfx)cross-,$(zic-objs))
++
++ALL_BUILD_CFLAGS = $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) -D_GNU_SOURCE \
++		   -DIS_IN_build
++
++# When generic makefile support for build system programs is
++# available, it should replace this code.  See
++# <http://sourceware.org/bugzilla/show_bug.cgi?id=14087>.
++$(cross-zic-objs): $(objpfx)cross-%.o: %.c $(before-compile)
++	$(BUILD_CC) $($(basename $(<F))-CFLAGS) $(ALL_BUILD_CFLAGS) \
++	-DCROSS_ZIC $< $(OUTPUT_OPTION) $(native-compile-mkdep-flags) -c
++
++$(objpfx)cross-zic: $(cross-zic-objs)
++	$(BUILD_CC) $^ $(BUILD_LDFLAGS) -o $@
+ 
+ tz-cflags = -DTZDIR='"$(zonedir)"' \
+ 	    -DTZDEFAULT='"$(localtime-file)"' \
+diff -urN a/timezone/private.h b/timezone/private.h
+--- a/timezone/private.h	2014-02-25 00:34:31.878762600 +0000
++++ b/timezone/private.h	2014-02-25 00:34:37.448969900 +0000
+@@ -94,7 +94,10 @@
+ #endif /* HAVE_GETTEXT */
+ 
+ #if HAVE_SYS_WAIT_H
++#ifdef _WIN32
++#else
+ #include <sys/wait.h>	/* for WIFEXITED and WEXITSTATUS */
++#endif
+ #endif /* HAVE_SYS_WAIT_H */
+ 
+ #ifndef WIFEXITED
+diff -urN a/timezone/zic.c b/timezone/zic.c
+--- a/timezone/zic.c	2014-02-25 00:34:31.885763500 +0000
++++ b/timezone/zic.c	2014-02-25 00:34:37.455470800 +0000
+@@ -32,6 +32,10 @@
+ #define MKDIR_UMASK 0755
+ #endif
+ 
++#ifdef _WIN32
++#define mkdir(_x,_f) mkdir(_x)
++#endif
++
+ /*
+ ** On some ancient hosts, predicates like `isspace(C)' are defined
+ ** only if isascii(C) || C == EOF. Modern hosts obey the C Standard,
+@@ -105,9 +109,58 @@
+ 	zic_t		z_untiltime;
+ };
+ 
++#ifdef _WIN32
++int copy_file(const char * fromname, const char * toname) {
++	FILE *from, *to;
++	size_t nbytes;
++	char buffer[4096];
++
++	from = fopen(fromname, "rb");
++	if ( from == NULL )
++	  return -1;
++
++	to = fopen(toname, "wb");
++	if ( to == NULL )
++	  return -1;
++
++	while ( (nbytes = fread(buffer, 1, sizeof(buffer), from)) > 0 ) {
++	  if ( fwrite(buffer, 1, nbytes, to) != nbytes ) {
++	    return -1;
++	  }
++	}
++	fclose(from);
++	fclose(to);
++	return 0;
++}
++
++int	link(const char * fromname, const char * toname) {
++	return copy_file(fromname, toname);
++}
++
++int symlink(const char * symlink_contents, const char * toname) {
++	char linktarget[4096];
++	if ( symlink_contents[0] == '/' ) {
++	  /* Absolute, easy. */
++	  strcpy( linktarget, symlink_contents );
++	} else {
++	  /* Relative, fiddly - assumes that toname is absolute .. */
++	  strcpy( linktarget, toname );
++	  if ( strrchr( linktarget, '/') != NULL ) {
++	    *(strrchr( linktarget, '/')+1) = '\0';
++	  } else {
++	    linktarget[0] = '\0';
++	  }
++	  strcat( linktarget, symlink_contents );
++	}
++	return copy_file(linktarget, toname);
++}
++#endif
++
+ extern int	getopt(int argc, char * const argv[],
+ 			const char * options);
++#ifndef _WIN32
+ extern int	link(const char * fromname, const char * toname);
++#endif
+ extern char *	optarg;
+ extern int	optind;
+ 
diff --git a/patches/eglibc/2_15/300-Remove-test-for-__builtin_expect.patch b/patches/eglibc/2_15/300-Remove-test-for-__builtin_expect.patch
new file mode 100644
index 0000000..c990a01
--- /dev/null
+++ b/patches/eglibc/2_15/300-Remove-test-for-__builtin_expect.patch
@@ -0,0 +1,76 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-02-23 12:28:21.886628000 +0000
++++ b/configure	2014-02-23 12:28:32.235942200 +0000
+@@ -7377,40 +7377,6 @@
+ fi
+ fi
+ 
+-{ $as_echo "$as_me:$LINENO: checking for __builtin_expect" >&5
+-$as_echo_n "checking for __builtin_expect... " >&6; }
+-if test "${libc_cv_gcc_builtin_expect+set}" = set; then
+-  $as_echo_n "(cached) " >&6
+-else
+-  cat > conftest.c <<EOF
+-#line $LINENO "configure"
+-int foo (int a)
+-{
+-  a = __builtin_expect (a, 10);
+-  return a == 10 ? 0 : 1;
+-}
+-EOF
+-if { ac_try='${CC-cc} $CFLAGS $CPPFLAGS $LDFLAGS -nostdlib -nostartfiles
+-			    -o conftest conftest.c -lgcc >&5'
+-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+-  (eval $ac_try) 2>&5
+-  ac_status=$?
+-  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
+-  (exit $ac_status); }; }; then
+-  libc_cv_gcc_builtin_expect=yes
+-else
+-  libc_cv_gcc_builtin_expect=no
+-fi
+-rm -f conftest*
+-fi
+-{ $as_echo "$as_me:$LINENO: result: $libc_cv_gcc_builtin_expect" >&5
+-$as_echo "$libc_cv_gcc_builtin_expect" >&6; }
+-if test "$libc_cv_gcc_builtin_expect" = no; then
+-  { { $as_echo "$as_me:$LINENO: error: support for __builtin_expect needed" >&5
+-$as_echo "$as_me: error: support for __builtin_expect needed" >&2;}
+-   { (exit 1); exit 1; }; }
+-fi
+-
+ { $as_echo "$as_me:$LINENO: checking for __builtin_memset" >&5
+ $as_echo_n "checking for __builtin_memset... " >&6; }
+ if test "${libc_cv_gcc_builtin_memset+set}" = set; then
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-23 12:28:21.887128100 +0000
++++ b/configure.in	2014-02-23 12:28:32.239942700 +0000
+@@ -2172,28 +2172,6 @@
+ fi
+ fi
+ 
+-dnl Check whether compiler understands __builtin_expect.
+-AC_CACHE_CHECK(for __builtin_expect, libc_cv_gcc_builtin_expect,
+-[cat > conftest.c <<EOF
+-#line $LINENO "configure"
+-int foo (int a)
+-{
+-  a = __builtin_expect (a, 10);
+-  return a == 10 ? 0 : 1;
+-}
+-EOF
+-dnl No \ in command here because it ends up inside ''.
+-if AC_TRY_COMMAND([${CC-cc} $CFLAGS $CPPFLAGS $LDFLAGS -nostdlib -nostartfiles
+-			    -o conftest conftest.c -lgcc >&AS_MESSAGE_LOG_FD]); then
+-  libc_cv_gcc_builtin_expect=yes
+-else
+-  libc_cv_gcc_builtin_expect=no
+-fi
+-rm -f conftest*])
+-if test "$libc_cv_gcc_builtin_expect" = no; then
+-  AC_MSG_ERROR([support for __builtin_expect needed])
+-fi
+-
+ AC_CACHE_CHECK(for __builtin_memset, libc_cv_gcc_builtin_memset, [dnl
+ cat > conftest.c <<\EOF
+ void zero (void *x)
diff --git a/patches/eglibc/2_15/310-Fix-confstr-use-of-local-buffer-outside-its-extent.patch b/patches/eglibc/2_15/310-Fix-confstr-use-of-local-buffer-outside-its-extent.patch
new file mode 100644
index 0000000..6a7426c
--- /dev/null
+++ b/patches/eglibc/2_15/310-Fix-confstr-use-of-local-buffer-outside-its-extent.patch
@@ -0,0 +1,55 @@
+diff -urN a/posix/confstr.c b/posix/confstr.c
+--- a/posix/confstr.c	2014-02-23 12:28:38.135191300 +0000
++++ b/posix/confstr.c	2014-02-23 12:28:46.839296600 +0000
+@@ -36,6 +36,10 @@
+   const char *string = "";
+   size_t string_len = 1;
+ 
++  /* Note that this buffer must be large enough for the longest strings
++     used below.  */
++  char restenvs[4 * sizeof "POSIX_V7_LPBIG_OFFBIG"];
++
+   switch (name)
+     {
+     case _CS_PATH:
+diff -urN a/posix/confstr.inc b/posix/confstr.inc
+--- a/posix/confstr.inc	2014-02-23 12:28:38.135191300 +0000
++++ b/posix/confstr.inc	2014-02-23 12:28:46.840796800 +0000
+@@ -29,7 +29,6 @@
+ 
+ 	 Currently this means all environment which the system allows.  */
+       {
+-	char restenvs[4 * sizeof "POSIX_V7_LPBIG_OFFBIG"];
+ 
+ 	string_len = 0;
+ #ifndef _POSIX_V7_ILP32_OFF32
+@@ -92,7 +91,6 @@
+ 
+ 	 Currently this means all environment which the system allows.  */
+       {
+-	char restenvs[4 * sizeof "POSIX_V6_LPBIG_OFFBIG"];
+ 
+ 	string_len = 0;
+ #ifndef _POSIX_V6_ILP32_OFF32
+@@ -155,7 +153,6 @@
+ 
+ 	 Currently this means all environment which the system allows.  */
+       {
+-	char restenvs[4 * sizeof "XBS5_LPBIG_OFFBIG"];
+ 
+ 	string_len = 0;
+ #ifndef _XBS5_ILP32_OFF32
+diff -urN a/posix/cross-getconf.c b/posix/cross-getconf.c
+--- a/posix/cross-getconf.c	2014-02-23 12:28:38.136191400 +0000
++++ b/posix/cross-getconf.c	2014-02-23 12:28:46.841796900 +0000
+@@ -93,6 +93,10 @@
+   const char *string = "";
+   size_t string_len = 1;
+ 
++  /* Note that this buffer must be large enough for the longest strings
++     used below.  */
++  char restenvs[4 * sizeof "POSIX_V7_LPBIG_OFFBIG"];
++
+   switch (name)
+     {
+ #include "confstr.inc"
diff --git a/patches/eglibc/2_15/340-Use-eglibc-2_18-sunrpc-Makefile-for-cross-compilation.patch b/patches/eglibc/2_15/340-Use-eglibc-2_18-sunrpc-Makefile-for-cross-compilation.patch
new file mode 100644
index 0000000..9ee8968
--- /dev/null
+++ b/patches/eglibc/2_15/340-Use-eglibc-2_18-sunrpc-Makefile-for-cross-compilation.patch
@@ -0,0 +1,182 @@
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2014-02-24 15:08:46.500225100 +0000
++++ b/Makerules	2014-02-24 15:08:59.472967100 +0000
+@@ -1293,8 +1293,8 @@
+ endef
+ 
+ # We always want to use configuration definitions.
+-# Note that this is only used for commands running in $(objpfx).
+-ALL_BUILD_CFLAGS = $(BUILD_CFLAGS) -include $(..)config.h
++ALL_BUILD_CFLAGS = $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) -D_GNU_SOURCE \
++		   -DIS_IN_build -include $(common-objpfx)config.h
+ 
+ # Support the GNU standard name for this target.
+ .PHONY: check
+diff -urN a/sunrpc/Makefile b/sunrpc/Makefile
+--- a/sunrpc/Makefile	2014-02-24 15:08:47.548285000 +0000
++++ b/sunrpc/Makefile	2014-02-24 15:08:59.463966600 +0000
+@@ -1,4 +1,4 @@
+-# Copyright (C) 1994-2004, 2005, 2006, 2011, 2012 Free Software Foundation, Inc.
++# Copyright (C) 1994-2013 Free Software Foundation, Inc.
+ # This file is part of the GNU C Library.
+ 
+ # The GNU C Library is free software; you can redistribute it and/or
+@@ -12,9 +12,8 @@
+ # Lesser General Public License for more details.
+ 
+ # You should have received a copy of the GNU Lesser General Public
+-# License along with the GNU C Library; if not, write to the Free
+-# Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+-# 02111-1307 USA.
++# License along with the GNU C Library; if not, see
++# <http://www.gnu.org/licenses/>.
+ 
+ #
+ #	Sub-makefile for sunrpc portion of the library.
+@@ -103,12 +102,8 @@
+ rpcgen-objs = rpc_main.o rpc_hout.o rpc_cout.o rpc_parse.o \
+ 	      rpc_scan.o rpc_util.o rpc_svcout.o rpc_clntout.o \
+ 	      rpc_tblout.o rpc_sample.o
+-# These headers are part of rpcgen.
+-distribute := proto.h rpc_util.h rpc_parse.h rpc_scan.h \
+-	      $(headers-in-tirpc) $(headers-not-in-tirpc) \
+-	      $(rpcgen-objs:.o=.c) etc.rpc \
+-	      errqueue.h
+-extra-objs-$(OPTION_EGLIBC_SUNRPC) += $(rpcgen-objs)
++extra-objs-$(OPTION_EGLIBC_SUNRPC) = $(rpcgen-objs) $(addprefix cross-,$(rpcgen-objs))
++others-$(OPTION_EGLIBC_SUNRPC) += rpcgen
+ 
+ all: # Make this the default target; it will be defined in Rules.
+ 
+@@ -120,14 +115,7 @@
+ ifeq ($(have-thread-library),yes)
+ xtests-$(OPTION_EGLIBC_SUNRPC) += thrsvc
+ endif
+-distribute += thrsvc.c
+ 
+-ifeq (yes,$(build-static-nss))
+-otherlibs += $(nssobjdir)/libnss_files.a $(resolvobjdir)/libnss_dns.a \
+-	     $(resolvobjdir)/libresolv.a
+-endif
+-
+-ifneq (yes,$(install-bootstrap-headers))
+ headers += $(rpcsvc:%.x=rpcsvc/%.h)
+ extra-libs-$(OPTION_EGLIBC_SUNRPC) += librpcsvc
+ # Make it in `others' pass, not `lib' pass.
+@@ -135,14 +123,17 @@
+ librpcsvc-routines = $(rpcsvc:%.x=x%)
+ librpcsvc-inhibit-o = .os # Build no shared rpcsvc library.
+ omit-deps = $(librpcsvc-routines)
+-endif
+-
+-include ../Rules
+ 
+ ifeq (yes,$(build-shared))
+ rpc-compat-routines = $(addprefix compat-,$(need-export-routines))
+ rpc-compat-routines.os = $(addprefix $(objpfx), \
+ 				     $(addsuffix .os,$(rpc-compat-routines)))
++extra-objs += $(addsuffix .os,$(rpc-compat-routines))
++endif
++
++include ../Rules
++
++ifeq (yes,$(build-shared))
+ subdir_lib: $(objpfx)librpc_compat_pic.a
+ $(objpfx)librpc_compat_pic.a: $(rpc-compat-routines.os)
+ 	$(AR) cr$(verbose) $@ $^
+@@ -169,41 +160,38 @@
+ CFLAGS-clnt_perr.c = -fexceptions
+ CFLAGS-openchild.c = -fexceptions
+ 
+-CPPFLAGS += -D_RPC_THREAD_SAFE_
++sunrpc-CPPFLAGS = -D_RPC_THREAD_SAFE_
++CPPFLAGS += $(sunrpc-CPPFLAGS)
++BUILD_CPPFLAGS += $(sunrpc-CPPFLAGS)
+ 
+ $(objpfx)tst-getmyaddr: $(common-objpfx)linkobj/libc.so
+ $(objpfx)tst-xdrmem: $(common-objpfx)linkobj/libc.so
+ $(objpfx)tst-xdrmem2: $(common-objpfx)linkobj/libc.so
+ 
+-$(objpfx)rpcgen: $(addprefix $(objpfx),$(rpcgen-objs)) \
+-  $(sort $(filter $(common-objpfx)libc%,$(link-libc))) \
+-  $(addprefix $(csu-objpfx),start.o) $(+preinit) $(+postinit)
+-	$(+link)
+-
+-$(addprefix $(objpfx)cross-,$(rpcgen-objs)): $(objpfx)cross-%.o: %.c
+-	gcc $< -c -D_RPC_THREAD_SAFE_ -D_CROSS_RPCGEN_ \
+-		$(OUTPUT_OPTION) $(compile-mkdep-flags)
++$(objpfx)rpcgen: $(addprefix $(objpfx),$(rpcgen-objs))
+ 
+-$(objpfx)cross-rpcgen: $(addprefix $(objpfx)cross-,$(rpcgen-objs))
+-	gcc $^ -o $@
++cross-rpcgen-objs := $(addprefix $(objpfx)cross-,$(rpcgen-objs))
++
++# When generic makefile support for build system programs is
++# available, it should replace this code.  See
++# <http://sourceware.org/bugzilla/show_bug.cgi?id=14087>.
++$(cross-rpcgen-objs): $(objpfx)cross-%.o: %.c $(before-compile)
++	$(BUILD_CC) $($(basename $(<F))-CFLAGS) -D_CROSS_RPCGEN_ $(ALL_BUILD_CFLAGS) $< \
++		$(OUTPUT_OPTION) $(native-compile-mkdep-flags) -c
++
++$(objpfx)cross-rpcgen: $(cross-rpcgen-objs)
++	$(BUILD_CC) $^ $(BUILD_LDFLAGS) -o $@
+ 
+ # This makes sure -DNOT_IN_libc is passed for all these modules.
+ cpp-srcs-left := $(rpcgen-objs:.o=.c)
+ lib := nonlib
+ include $(patsubst %,$(..)cppflags-iterator.mk,$(cpp-srcs-left))
+ 
+-ifeq (no,$(cross-compiling))
+-# Tell rpcgen where to find the C preprocessor.
+-rpcgen-cmd = CPP='$(CC) -E -x c-header' $(built-program-cmd) -Y ../scripts
+-# Depend rpcsvc headers and sources on rpcgen.
+-rpcgen-dep = $(objpfx)rpcgen
+-else
+-# Tell rpcgen where to find the C preprocessor.
+-rpcgen-cmd = CPP='$(CC) -E -x c-header' $(objpfx)cross-rpcgen -Y ../scripts
+-# Depend rpcsvc headers and sources on cross-rpcgen and rpcgen (to trigger
+-# its build).
+-rpcgen-dep = $(objpfx)rpcgen $(objpfx)cross-rpcgen
+-endif
++# How we run rpcgen to generate sources and headers in the rules below.
++# Setting CPP tells it how to run the C preprocessor correctly.  Note
++# that $(built-program-file) requires that the just-built cross-rpcgen
++# binary be the second dependency listed in each rule using rpcgen-cmd.
++rpcgen-cmd = CPP='$(CC) -E -x c-header' $(built-program-file) -Y ../scripts
+ 
+ # Install the rpc data base file.
+ $(inst_sysconfdir)/rpc: etc.rpc $(+force)
+@@ -214,7 +202,7 @@
+ # relinked.
+ $(rpcsvc:%.x=$(objpfx)rpcsvc/%.h): $(objpfx)rpcsvc/%.h: $(objpfx)rpcsvc/%.stmp
+ 	@:
+-$(objpfx)rpcsvc/%.stmp: rpcsvc/%.x $(rpcgen-dep)
++$(objpfx)rpcsvc/%.stmp: rpcsvc/%.x $(objpfx)cross-rpcgen
+ 	$(make-target-directory)
+ 	-@rm -f ${@:stmp=T} $@
+ 	$(rpcgen-cmd) -h $< -o ${@:stmp=T}
+@@ -224,7 +212,7 @@
+ # Generate the rpcsvc XDR functions with rpcgen.
+ $(rpcsvc:%.x=$(objpfx)x%.c): $(objpfx)x%.c: $(objpfx)x%.stmp
+ 	@:
+-$(objpfx)x%.stmp: rpcsvc/%.x $(rpcgen-dep)
++$(objpfx)x%.stmp: rpcsvc/%.x $(objpfx)cross-rpcgen
+ 	-@rm -f ${@:stmp=T} $@
+ 	$(rpcgen-cmd) -c $< -o ${@:stmp=T}
+ 	$(move-if-change) $(@:stmp=T) $(@:stmp=c)
+diff -urN a/sunrpc/rpcgen.c b/sunrpc/rpcgen.c
+--- a/sunrpc/rpcgen.c	1970-01-01 01:00:00.000000000 +0100
++++ b/sunrpc/rpcgen.c	2014-02-24 15:08:59.467966800 +0000
+@@ -0,0 +1,2 @@
++/* Empty file expected by glibc's standard build rules for
++   executables.  */
+diff -urN a/config.h.in b/config.h.in
+--- a/config.h.in	2014-02-24 16:13:54.864770800 +0000
++++ b/config.h.in	2014-02-24 16:14:17.624072500 +0000
+@@ -1,4 +1,5 @@
+-#if !defined __ASSEMBLER__ && !defined _ISOMAC && !defined __OPTIMIZE__
++#if !defined IS_IN_build && !defined __ASSEMBLER__ && !defined _ISOMAC \
++    && !defined __OPTIMIZE__
+ # error "glibc cannot be compiled without optimization"
+ #endif
+ 
diff --git a/patches/eglibc/2_16/200-make-4.patch b/patches/eglibc/2_16/200-make-4.patch
new file mode 100644
index 0000000..fa93ca1
--- /dev/null
+++ b/patches/eglibc/2_16/200-make-4.patch
@@ -0,0 +1,24 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-02-23 12:56:42.271049400 +0000
++++ b/configure	2014-02-23 12:56:57.366466300 +0000
+@@ -4936,7 +4936,7 @@
+   ac_prog_version=`$MAKE --version 2>&1 | sed -n 's/^.*GNU Make[^0-9]*\([0-9][0-9.]*\).*$/\1/p'`
+   case $ac_prog_version in
+     '') ac_prog_version="v. ?.??, bad"; ac_verc_fail=yes;;
+-    3.79* | 3.[89]*)
++    3.79* | 3.[89]* | 4.*)
+        ac_prog_version="$ac_prog_version, ok"; ac_verc_fail=no;;
+     *) ac_prog_version="$ac_prog_version, bad"; ac_verc_fail=yes;;
+ 
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-23 12:56:42.271049400 +0000
++++ b/configure.in	2014-02-23 12:56:57.371466900 +0000
+@@ -968,7 +968,7 @@
+   critic_missing="$critic_missing gcc")
+ AC_CHECK_PROG_VER(MAKE, gnumake gmake make, --version,
+   [GNU Make[^0-9]*\([0-9][0-9.]*\)],
+-  [3.79* | 3.[89]*], critic_missing="$critic_missing make")
++  [3.79* | 3.[89]* | 4.*], critic_missing="$critic_missing make")
+ 
+ AC_CHECK_PROG_VER(MSGFMT, gnumsgfmt gmsgfmt msgfmt, --version,
+   [GNU gettext.* \([0-9]*\.[0-9.]*\)],
diff --git a/patches/eglibc/2_16/210-configure-Default-to-CPP-CC--E-unless-overridden.patch b/patches/eglibc/2_16/210-configure-Default-to-CPP-CC--E-unless-overridden.patch
new file mode 100644
index 0000000..a950904
--- /dev/null
+++ b/patches/eglibc/2_16/210-configure-Default-to-CPP-CC--E-unless-overridden.patch
@@ -0,0 +1,242 @@
+diff -urN a/ChangeLog b/ChangeLog
+--- a/ChangeLog	2014-02-07 21:08:45.000000000 +0000
++++ b/ChangeLog	2014-04-27 01:13:58.290406900 +0100
+@@ -1,3 +1,8 @@
++2013-01-25  Thomas Schwinge  <thomas@codesourcery.com>
++
++        * configure.in (AC_PROG_CPP): New definition.
++        * configure: Regenerate.
++
+ 2014-01-29  H.J. Lu  <hongjiu.lu@intel.com>
+ 
+ 	[BZ #16510]
+diff -urN a/configure b/configure
+--- a/configure	2014-04-27 01:14:46.525165700 +0100
++++ b/configure	2014-04-27 01:13:58.302407600 +0100
+@@ -1562,43 +1562,6 @@
+ 
+ } # ac_fn_c_try_compile
+ 
+-# ac_fn_c_try_cpp LINENO
+-# ----------------------
+-# Try to preprocess conftest.$ac_ext, and return whether this succeeded.
+-ac_fn_c_try_cpp ()
+-{
+-  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+-  if { { ac_try="$ac_cpp conftest.$ac_ext"
+-case "(($ac_try" in
+-  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+-  *) ac_try_echo=$ac_try;;
+-esac
+-eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+-$as_echo "$ac_try_echo"; } >&5
+-  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.err
+-  ac_status=$?
+-  if test -s conftest.err; then
+-    grep -v '^ *+' conftest.err >conftest.er1
+-    cat conftest.er1 >&5
+-    mv -f conftest.er1 conftest.err
+-  fi
+-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+-  test $ac_status = 0; } > conftest.i && {
+-	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+-	 test ! -s conftest.err
+-       }; then :
+-  ac_retval=0
+-else
+-  $as_echo "$as_me: failed program was:" >&5
+-sed 's/^/| /' conftest.$ac_ext >&5
+-
+-    ac_retval=1
+-fi
+-  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
+-  as_fn_set_status $ac_retval
+-
+-} # ac_fn_c_try_cpp
+-
+ # ac_fn_cxx_try_compile LINENO
+ # ----------------------------
+ # Try to compile conftest.$ac_ext, and return whether this succeeded.
+@@ -2290,6 +2253,11 @@
+ # Glibc should not depend on any header files
+ 
+ 
++# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
++# here to work around the Autoconf issue discussed in
++# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
++# AC_PROG_CPP
++
+ 
+ 
+ subdirs="$subdirs "
+@@ -3004,142 +2972,13 @@
+ 
+ fi
+ 
+-ac_ext=c
+-ac_cpp='$CPP $CPPFLAGS'
+-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+-ac_compiler_gnu=$ac_cv_c_compiler_gnu
+-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor" >&5
+-$as_echo_n "checking how to run the C preprocessor... " >&6; }
+ # On Suns, sometimes $CPP names a directory.
+ if test -n "$CPP" && test -d "$CPP"; then
+   CPP=
+ fi
+ if test -z "$CPP"; then
+-  if ${ac_cv_prog_CPP+:} false; then :
+-  $as_echo_n "(cached) " >&6
+-else
+-      # Double quotes because CPP needs to be expanded
+-    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
+-    do
+-      ac_preproc_ok=false
+-for ac_c_preproc_warn_flag in '' yes
+-do
+-  # Use a header file that comes with gcc, so configuring glibc
+-  # with a fresh cross-compiler works.
+-  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+-  # <limits.h> exists even on freestanding compilers.
+-  # On the NeXT, cc -E runs the code through the compiler's parser,
+-  # not just through cpp. "Syntax error" is here to catch this case.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#ifdef __STDC__
+-# include <limits.h>
+-#else
+-# include <assert.h>
+-#endif
+-		     Syntax error
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-
+-else
+-  # Broken: fails on valid input.
+-continue
++  CPP="$CC -E"
+ fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-  # OK, works on sane cases.  Now check whether nonexistent headers
+-  # can be detected and how.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#include <ac_nonexistent.h>
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-  # Broken: success on invalid input.
+-continue
+-else
+-  # Passes both tests.
+-ac_preproc_ok=:
+-break
+-fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-done
+-# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+-rm -f conftest.i conftest.err conftest.$ac_ext
+-if $ac_preproc_ok; then :
+-  break
+-fi
+-
+-    done
+-    ac_cv_prog_CPP=$CPP
+-
+-fi
+-  CPP=$ac_cv_prog_CPP
+-else
+-  ac_cv_prog_CPP=$CPP
+-fi
+-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $CPP" >&5
+-$as_echo "$CPP" >&6; }
+-ac_preproc_ok=false
+-for ac_c_preproc_warn_flag in '' yes
+-do
+-  # Use a header file that comes with gcc, so configuring glibc
+-  # with a fresh cross-compiler works.
+-  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+-  # <limits.h> exists even on freestanding compilers.
+-  # On the NeXT, cc -E runs the code through the compiler's parser,
+-  # not just through cpp. "Syntax error" is here to catch this case.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#ifdef __STDC__
+-# include <limits.h>
+-#else
+-# include <assert.h>
+-#endif
+-		     Syntax error
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-
+-else
+-  # Broken: fails on valid input.
+-continue
+-fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-  # OK, works on sane cases.  Now check whether nonexistent headers
+-  # can be detected and how.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#include <ac_nonexistent.h>
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-  # Broken: success on invalid input.
+-continue
+-else
+-  # Passes both tests.
+-ac_preproc_ok=:
+-break
+-fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-done
+-# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+-rm -f conftest.i conftest.err conftest.$ac_ext
+-if $ac_preproc_ok; then :
+-
+-else
+-  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+-$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+-as_fn_error $? "C preprocessor \"$CPP\" fails sanity check
+-See \`config.log' for more details" "$LINENO" 5; }
+-fi
+-
+-ac_ext=c
+-ac_cpp='$CPP $CPPFLAGS'
+-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+-ac_compiler_gnu=$ac_cv_c_compiler_gnu
+ 
+ # We need the C++ compiler only for testing.
+ ac_ext=cpp
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-04-27 01:14:46.544166800 +0100
++++ b/configure.in	2014-04-27 01:13:58.307407800 +0100
+@@ -10,6 +10,23 @@
+   [m4_divert_text([DEFAULTS],
+     [ac_includes_default='/* none */'])])
+ 
++# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
++# here to work around the Autoconf issue discussed in
++# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
++AC_DEFUN([AC_PROG_CPP],
++[AC_REQUIRE([AC_PROG_CC])dnl
++AC_ARG_VAR([CPP],      [C preprocessor])dnl
++_AC_ARG_VAR_CPPFLAGS()dnl
++# On Suns, sometimes $CPP names a directory.
++if test -n "$CPP" && test -d "$CPP"; then
++  CPP=
++fi
++if test -z "$CPP"; then
++  CPP="$CC -E"
++fi
++AC_SUBST(CPP)dnl
++])# AC_PROG_CPP
++
+ dnl This is here so we can set $subdirs directly based on configure fragments.
+ AC_CONFIG_SUBDIRS()
+ 
diff --git a/patches/eglibc/2_16/220-Fix-crossrpc-to-build-on-non-Linux.patch b/patches/eglibc/2_16/220-Fix-crossrpc-to-build-on-non-Linux.patch
new file mode 100644
index 0000000..33768d0
--- /dev/null
+++ b/patches/eglibc/2_16/220-Fix-crossrpc-to-build-on-non-Linux.patch
@@ -0,0 +1,247 @@
+diff -urN a/sunrpc/rpc/types.h b/sunrpc/rpc/types.h
+--- a/sunrpc/rpc/types.h	2014-02-23 13:07:46.538900700 +0000
++++ b/sunrpc/rpc/types.h	2014-02-23 13:08:20.589724600 +0000
+@@ -69,6 +69,7 @@
+ #include <sys/types.h>
+ #endif
+ 
++#ifdef __linux__
+ #ifndef __u_char_defined
+ typedef __u_char u_char;
+ typedef __u_short u_short;
+@@ -84,11 +85,14 @@
+ typedef __caddr_t caddr_t;
+ # define __daddr_t_defined
+ #endif
++#endif
+ 
+ #include <sys/time.h>
+ #include <sys/param.h>
+ 
++#ifndef _WIN32
+ #include <netinet/in.h>
++#endif
+ 
+ #ifndef INADDR_LOOPBACK
+ #define       INADDR_LOOPBACK         (u_long)0x7F000001
+diff -urN a/sunrpc/rpc_main.c b/sunrpc/rpc_main.c
+--- a/sunrpc/rpc_main.c	2014-02-23 13:07:46.547901800 +0000
++++ b/sunrpc/rpc_main.c	2014-02-23 13:08:20.596225400 +0000
+@@ -38,13 +38,19 @@
+ #include <stdio.h>
+ #include <string.h>
+ #include <unistd.h>
++#ifndef IS_IN_build
+ #include <libintl.h>
++#endif
+ #include <ctype.h>
+ #include <sys/types.h>
+ #include <sys/param.h>
+ #include <sys/file.h>
+ #include <sys/stat.h>
++#ifndef _WIN32
+ #include <sys/wait.h>
++#else
++#include <windows.h>
++#endif
+ #include "rpc_parse.h"
+ #include "rpc_util.h"
+ #include "rpc_scan.h"
+@@ -53,6 +59,33 @@
+ #include "../version.h"
+ #define PACKAGE _libc_intl_domainname
+ 
++#ifdef _WIN32
++#define rindex(_dest, _src) strrchr((_dest), (_src))
++
++char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src);
++
++char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src)
++{
++  if (src == NULL)
++      return NULL;
++  return strcpy(dest, src) + strlen(dest);
++}
++#endif /* _WIN32 */
++
++#if defined(_WIN32) || defined(__BSD__)
++
++char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len);
++
++char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len)
++{
++  size_t min_len = strlen(src);
++  if (min_len > len)
++    min_len = len;
++  return strncpy(dest, src, len) + min_len;
++}
++
++#endif /* defined(_WIN32) || defined(__BSD__) */
++
+ #define EXTEND	1		/* alias for TRUE */
+ #define DONT_EXTEND	0	/* alias for FALSE */
+ 
+@@ -83,7 +116,11 @@
+ static const char *CPP = SUNOS_CPP;
+ static const char CPPFLAGS[] = "-C";
+ static char *pathbuf;
++#ifdef _WIN32
++static HANDLE cpp_pid;
++#else
+ static int cpp_pid;
++#endif
+ static const char *allv[] =
+ {
+   "rpcgen", "-s", "udp", "-s", "tcp"
+@@ -327,6 +364,20 @@
+ {
+   struct stat buf;
+ 
++  /* Avoid trying to directly execute a bash script on Windows. */
++#ifdef _WIN32
++  char* CPPENVV = getenv("CPP");
++  if (CPPENVV)
++    {
++      CPP = (char*)malloc(strlen(CPPENVV)+1);
++      strcpy((char*)CPP, CPPENVV);
++      /* Don't bother checking that it exists with stat64 as
++       * we'd have to check in the path, also it usually ends
++       * with a few arguments. */
++      return;
++    }
++#endif
++
+   if (stat (CPP, &buf) < 0)
+     {				/* /lib/cpp or explicit cpp does not exist */
+       if (cppDefined)
+@@ -346,9 +397,122 @@
+     }
+ }
+ 
++#ifdef _WIN32
++/*
++ * Open input file with given define for C-preprocessor
++ */
++static void
++open_input (const char *infile, const char *define)
++{
++  int argi;
++  int argcc = 0;
++  LPSTR argsall;
++  HANDLE StdOutHandle;
++  HANDLE StdErrHandle;
++  HANDLE ReadPipe;
++  HANDLE WritePipe;
++  SECURITY_ATTRIBUTES SecAttr;
++  STARTUPINFO StartupInfo;
++  PROCESS_INFORMATION ProcessInfo;
++  DWORD Status;
++
++  find_cpp ();
++  putarg (0, CPP);
++  putarg (1, CPPFLAGS);
++  addarg (define);
++  if (infile)
++    addarg (infile);
++  addarg ((char *) NULL);
++  for (argi = 0; argi < argcount - 1; ++argi)
++    {
++      argcc += strlen(arglist[argi])+2;
++    }
++  argsall = (LPSTR)alloca(argcc + 1);
++  if (!argsall)
++    {
++      fprintf (stderr, _ ("cannot alloca for argsall\n"));
++      exit (1);
++    }
++  argsall[0] = '\0';
++  for (argi = 0; argi < argcount - 1; ++argi)
++    {
++      strcat((char*)argsall, arglist[argi]);
++      strcat((char*)argsall, " ");
++    }
++
++  memset(&SecAttr,     0, sizeof(SecAttr));
++  memset(&StartupInfo, 0, sizeof(StartupInfo));
++  memset(&ProcessInfo, 0, sizeof(ProcessInfo));
++
++  SecAttr.nLength = sizeof(SecAttr);
++  SecAttr.bInheritHandle = TRUE;
++
++  Status = CreatePipe( &ReadPipe, &WritePipe, &SecAttr, 0 );
++  if (!Status)
++    {
++      fprintf (stderr, _ ("cannot CreatePipe: GetLastError() -> %d\n"), GetLastError());
++      exit (1);
++    }
++
++  SetHandleInformation( ReadPipe, HANDLE_FLAG_INHERIT, 0 );
++
++  /*
++  StdOutHandle = GetStdHandle( STD_OUTPUT_HANDLE );
++  StdErrHandle = GetStdHandle( STD_ERROR_HANDLE );
++  if (StdOutHandle != INVALID_HANDLE_VALUE) {
++      SetHandleInformation( StdOutHandle, HANDLE_FLAG_INHERIT, 0 );
++  }
++  if (StdErrHandle != INVALID_HANDLE_VALUE) {
++      SetHandleInformation( StdErrHandle, HANDLE_FLAG_INHERIT, 0 );
++  }
++  */
++
++  StartupInfo.cb         = sizeof(StartupInfo);
++  StartupInfo.hStdInput  = GetStdHandle( STD_INPUT_HANDLE );
++  StartupInfo.hStdOutput = WritePipe;
++  StartupInfo.hStdError  = GetStdHandle( STD_ERROR_HANDLE );
++  StartupInfo.dwFlags    = STARTF_USESTDHANDLES;
++
++  Status = CreateProcess(
++          NULL,           /* lpApplicationName */
++          argsall,        /* lpCommandLine */
++          NULL,           /* lpProcessAttributes */
++          NULL,           /* lpThreadAttributes */
++          TRUE,           /* bInheritHandles */
++          0,              /* dwCreationFlags */
++          NULL,           /* lpEnvironment */
++          NULL,           /* lpCurrentDirectory */
++          &StartupInfo,   /* lpStartupInfo */
++          &ProcessInfo ); /* lpProcessInformation */
++
++  CloseHandle( WritePipe );
++  if (!Status)
++    {
++      fprintf (stderr, _ ("cannot find C preprocessor: %s, GetLastError() -> %d\n"), CPP, GetLastError());
++      exit (1);
++    }
++  int fd = _open_osfhandle((intptr_t)ReadPipe, _O_APPEND | _O_RDONLY);
++  if(fd != -1)
++    {
++      fin = _fdopen(fd, "a+");
++    }
++  cpp_pid = ProcessInfo.hProcess;
++}
++
++/* Close the connection to the C-preprocessor and check for successfull
++   termination.  */
++static void
++close_input (void)
++{
++  WaitForSingleObject(cpp_pid, INFINITE);
++}
++
++#else
++
+ /*
+  * Open input file with given define for C-preprocessor
+  */
++
+ static void
+ open_input (const char *infile, const char *define)
+ {
+@@ -416,6 +580,7 @@
+       crash ();
+     }
+ }
++#endif
+ 
+ /* valid tirpc nettypes */
+ static const char *valid_ti_nettypes[] =
diff --git a/patches/eglibc/2_16/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch b/patches/eglibc/2_16/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
new file mode 100644
index 0000000..8d8f9ca
--- /dev/null
+++ b/patches/eglibc/2_16/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
@@ -0,0 +1,113 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-02-23 13:08:58.318515600 +0000
++++ b/configure	2014-02-23 13:09:22.363068800 +0000
+@@ -630,6 +630,7 @@
+ libc_cv_gcc_static_libgcc
+ CXX_SYSINCLUDES
+ SYSINCLUDES
++sysheaders
+ AUTOCONF
+ READELF
+ SED
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-23 13:08:58.319015600 +0000
++++ b/configure.in	2014-02-23 13:09:22.369069600 +0000
+@@ -1054,6 +1054,7 @@
+     done
+   fi
+ fi
++AC_SUBST(sysheaders)
+ AC_SUBST(SYSINCLUDES)
+ AC_SUBST(CXX_SYSINCLUDES)
+ 
+diff -urN a/elf/Makefile b/elf/Makefile
+--- a/elf/Makefile	2014-02-23 13:08:58.552045200 +0000
++++ b/elf/Makefile	2014-02-23 13:09:22.373070100 +0000
+@@ -60,6 +60,15 @@
+ ld-map		= $(common-objpfx)ld.map
+ # eglibc: endif
+ 
++# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
++# suffix of w means Windows.
++uname_o := $(shell uname -o)
++ifneq (, $(findstring Msys, $(uname_o)))
++common-objpfxw = $(shell cd $(common-objpfx); pwd -W)/
++else
++common-objpfxw = $(common-objpfx)
++endif
++
+ ifeq (yes,$(build-shared))
+ extra-objs	= $(all-rtld-routines:%=%.os) soinit.os sofini.os interp.os
+ generated	+= librtld.os dl-allobjs.os ld.so ldd
+@@ -303,15 +312,15 @@
+ 
+ $(objpfx)librtld.mk: $(objpfx)librtld.map Makefile
+ 	LC_ALL=C \
+-	sed -n 's@^$(common-objpfx)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
++	sed -n 's@^$(common-objpfxw)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
+ 	    $< | \
+ 	while read lib file; do \
+ 	  case $$lib in \
+ 	  libc_pic.a) \
+ 	    LC_ALL=C fgrep -l /$$file \
+-		  $(common-objpfx)stamp.os $(common-objpfx)*/stamp.os | \
++		  $(common-objpfxw)stamp.os $(common-objpfxw)*/stamp.os | \
+ 	    LC_ALL=C \
+-	    sed 's@^$(common-objpfx)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
++	    sed 's@^$(common-objpfxw)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
+ 	    ;; \
+ 	  */*.a) \
+ 	    echo rtld-$${lib%%/*} += $$file ;; \
+diff -urN a/Makefile.in b/Makefile.in
+--- a/Makefile.in	2014-02-23 13:08:59.586676600 +0000
++++ b/Makefile.in	2014-02-23 13:09:22.377070600 +0000
+@@ -1,11 +1,12 @@
+ srcdir = @srcdir@
++sysheaders = @sysheaders@
+ 
+ # Uncomment the line below if you want to do parallel build.
+ # PARALLELMFLAGS = -j 4
+ 
+ all .DEFAULT:
+-	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` $@
++	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` sysheaders=$(sysheaders) $@
+ 
+ install:
+ 	LANGUAGE=C LC_ALL=C; export LANGUAGE LC_ALL; \
+-	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` $@
++	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` sysheaders=$(sysheaders) $@
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2014-02-23 13:08:59.587176700 +0000
++++ b/Makerules	2014-02-23 13:09:22.380071000 +0000
+@@ -396,11 +396,29 @@
+ mv -f $(@:.d=.T) $@ $(generate-md5)
+ endef
+ 
++# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
++# suffix of w means Windows, and m means MSYS2.
++uname_o := $(shell uname -o)
++sysroot = $(shell echo `$(CC) -print-file-name="include"`)
++ifneq (, $(findstring Msys, $(uname_o)))
++common-objpfxw = $(shell cd $(common-objpfx); pwd -W)/
++sysheadersw = $(shell cd $(sysheaders); pwd -W)
++sysrootm = $(shell cd $(sysroot); pwd)
++else
++common-objpfxw = $(common-objpfx)
++sysheadersw = $(sysheaders)
++sysrootm = $(sysroot)
++endif
++
+ ifneq (,$(objpfx))
+ # Continuation lines here are dangerous because they introduce spaces!
+ define sed-remove-objpfx
+--e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfx)))@ $$(common-objpfx)@g' \
+--e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfx)))@$$(common-objpfx)@g'
++-e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfxw)))@ $$(common-objpfx)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfxw)))@$$(common-objpfx)@g' \
++-e 's@ $(subst .,\.,$(subst @,\@,$(sysheadersw)))@ $(sysheaders)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(sysheadersw)))@$(sysheaders)@g' \
++-e 's@ $(subst .,\.,$(subst @,\@,$(sysroot)))@ $(sysrootm)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(sysroot)))@$(sysrootm)@g'
+ endef
+ endif
+ 
diff --git a/patches/eglibc/2_16/240-Rename-extensions-for-case-insensitive-fs.patch b/patches/eglibc/2_16/240-Rename-extensions-for-case-insensitive-fs.patch
new file mode 100644
index 0000000..0639f2c
--- /dev/null
+++ b/patches/eglibc/2_16/240-Rename-extensions-for-case-insensitive-fs.patch
@@ -0,0 +1,249 @@
+diff -urN a/ChangeLog b/ChangeLog
+--- a/ChangeLog	2014-04-27 01:15:47.515654200 +0100
++++ b/ChangeLog	2014-04-27 01:16:51.834333000 +0100
+@@ -1,3 +1,8 @@
++2014-01-22  Ray Donnelly  <mingw.android@gmail.com>
++
++        * Rename .oS to .oSTATIC so that builds can be done on file
++        systems that are not both case sensitive and case preserving.
++
+ 2013-01-25  Thomas Schwinge  <thomas@codesourcery.com>
+ 
+         * configure.in (AC_PROG_CPP): New definition.
+diff -urN a/extra-lib.mk b/extra-lib.mk
+--- a/extra-lib.mk	2012-05-26 18:46:57.000000000 +0100
++++ b/extra-lib.mk	2014-04-27 01:16:51.848333800 +0100
+@@ -13,7 +13,7 @@
+ 
+ ifneq (,$($(lib)-static-only-routines))
+ ifneq (,$(filter yes%,$(build-shared)$($(lib).so-version)))
+-object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oS)
++object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oSTATIC)
+ endif
+ endif
+ 
+@@ -31,7 +31,7 @@
+ 
+ # Add each flavor of library to the lists of things to build and install.
+ install-lib += $(foreach o,$(object-suffixes-$(lib)),$(lib:lib%=$(libtype$o)))
+-extra-objs += $(foreach o,$(filter-out .os .oS,$(object-suffixes-$(lib))),\
++extra-objs += $(foreach o,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))),\
+ 			$(patsubst %,%$o,$(filter-out \
+ 					   $($(lib)-shared-only-routines),\
+ 					   $(all-$(lib)-routines))))
+@@ -59,7 +59,7 @@
+ 
+ 
+ # Use o-iterator.mk to generate a rule for each flavor of library.
+-ifneq (,$(filter-out .os .oS,$(object-suffixes-$(lib))))
++ifneq (,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))))
+ define o-iterator-doit
+ $(objpfx)$(patsubst %,$(libtype$o),$(lib:lib%=%)): \
+   $(patsubst %,$(objpfx)%$o,\
+@@ -67,7 +67,7 @@
+ 			  $(all-$(lib)-routines))); \
+ 	$$(build-extra-lib)
+ endef
+-object-suffixes-left = $(filter-out .os .oS,$(object-suffixes-$(lib)))
++object-suffixes-left = $(filter-out .os .oSTATIC,$(object-suffixes-$(lib)))
+ include $(patsubst %,$(..)o-iterator.mk,$(object-suffixes-left))
+ endif
+ 
+@@ -79,9 +79,9 @@
+ 	$(build-extra-lib)
+ endif
+ 
+-ifneq (,$(filter .oS,$(object-suffixes-$(lib))))
+-$(objpfx)$(patsubst %,$(libtype.oS),$(lib:lib%=%)): \
+-  $(patsubst %,$(objpfx)%.oS,\
++ifneq (,$(filter .oSTATIC,$(object-suffixes-$(lib))))
++$(objpfx)$(patsubst %,$(libtype.oSTATIC),$(lib:lib%=%)): \
++  $(patsubst %,$(objpfx)%.oSTATIC,\
+ 	     $(filter $($(lib)-static-only-routines),\
+ 		      $(all-$(lib)-routines)))
+ 	$(build-extra-lib)
+diff -urN a/Makeconfig b/Makeconfig
+--- a/Makeconfig	2014-04-27 01:14:41.831897300 +0100
++++ b/Makeconfig	2014-04-27 01:16:51.850333900 +0100
+@@ -485,7 +485,7 @@
+ # run the linked programs.
+ link-libc-before-gnulib = -Wl,-rpath-link=$(rpath-link) \
+ 	    $(common-objpfx)libc.so$(libc.so-version) \
+-	    $(common-objpfx)$(patsubst %,$(libtype.oS),c) \
++	    $(common-objpfx)$(patsubst %,$(libtype.oSTATIC),c) \
+ 	    $(as-needed) $(common-objpfx)elf/ld.so $(no-as-needed)
+ link-libc = $(link-libc-before-gnulib) $(gnulib)
+ link-libc-tests = $(link-libc-before-gnulib) $(gnulib-tests)
+@@ -747,7 +747,7 @@
+ # The compilation rules use $(CPPFLAGS-${SUFFIX}) and $(CFLAGS-${SUFFIX})
+ # to pass different flags for each flavor.
+ libtypes = $(foreach o,$(object-suffixes-for-libc),$(libtype$o))
+-all-object-suffixes := .o .os .op .og .ob .oS
++all-object-suffixes := .o .os .op .og .ob .oSTATIC
+ object-suffixes :=
+ CPPFLAGS-.o = $(pic-default)
+ CFLAGS-.o = $(filter %frame-pointer,$(+cflags))
+@@ -798,14 +798,14 @@
+ 
+ ifeq (yes,$(build-shared))
+ # Build special library that contains the static-only routines for libc.
+-object-suffixes-for-libc += .oS
++object-suffixes-for-libc += .oSTATIC
+ 
+ # Must build the routines as PIC, though, because they can end up in (users')
+ # shared objects.  We don't want to use CFLAGS-os because users may, for
+ # example, make that processor-specific.
+-CFLAGS-.oS = $(CFLAGS-.o) $(PIC-ccflag)
+-CPPFLAGS-.oS = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
+-libtype.oS = lib%_nonshared.a
++CFLAGS-.oSTATIC = $(CFLAGS-.o) $(PIC-ccflag)
++CPPFLAGS-.oSTATIC = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
++libtype.oSTATIC = lib%_nonshared.a
+ endif
+ 
+ # The assembler can generate debug information too.
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2014-04-27 01:16:27.333931700 +0100
++++ b/Makerules	2014-04-27 01:18:18.610296300 +0100
+@@ -162,14 +162,14 @@
+ # We only generate these in the top-level makefile, to avoid any weirdness
+ # from subdir-specific makefile tweaks creeping in on an update.
+ $(common-objpfx)%.make: $(..)%.make.c $(..)Makerules $(common-before-compile)
+-	rm -f $@T $@.dT
++	rm -f $@T $@.dTEMP
+ 	(echo '# Generated from $*.make.c by Makerules.'; \
+ 	 $(CC) $(CFLAGS) $(CPPFLAGS) -E -DASSEMBLER $< \
+-	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dT \
++	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dTEMP \
+ 	 | sed -n '/@@@/{s/@@@[	 ]*\(.*\)@@@/\1/;s/[	 ]*$$//p;}'; \
+ 	 echo 'common-generated += $(@F)'; \
+-	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dT; \
+-	 rm -f $@.dT) > $@T
++	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dTEMP; \
++	 rm -f $@.dTEMP) > $@T
+ 	mv -f $@T $@
+ endif
+ 
+@@ -354,7 +354,7 @@
+ # eglibc: endif # $(versioning) = yes
+ endif # sysd-sorted-done
+ 
+-# Generate .dT files as we compile.
++# Generate .dTEMP files as we compile.
+ compile-mkdep-flags = -MD -MP -MF $@.dt -MT $@
+ compile-command.S = $(compile.S) $(OUTPUT_OPTION) $(compile-mkdep-flags)
+ compile-command.c = $(compile.c) $(OUTPUT_OPTION) $(compile-mkdep-flags)
+@@ -453,7 +453,7 @@
+ # Bounded pointer thunks are only built for *.ob
+ elide-bp-thunks = $(addprefix $(bppfx),$(bp-thunks))
+ 
+-elide-routines.oS += $(filter-out $(static-only-routines),\
++elide-routines.oSTATIC += $(filter-out $(static-only-routines),\
+ 				  $(routines) $(aux) $(sysdep_routines)) \
+ 		     $(elide-bp-thunks)
+ elide-routines.os += $(static-only-routines) $(elide-bp-thunks)
+@@ -687,7 +687,7 @@
+ 
+ +depfiles := $(sources:.c=.d) \
+ 	     $(patsubst %.o,%.d,$(filter %.o,$(extra-objs:.os=.o))) \
+-	     $(patsubst %.oS,%.d,$(filter %.oS,$(extra-objs))) \
++	     $(patsubst %.oSTATIC,%.d,$(filter %.oSTATIC,$(extra-objs))) \
+ 	     $(patsubst %.o,%.d,$(filter %.o,$(extra-test-objs:.os=.o))) \
+ 	     $(addsuffix .d,$(tests) $(xtests) $(test-srcs))
+ ifeq ($(build-programs),yes)
+@@ -995,7 +995,7 @@
+ install: $(inst_libdir)/libc.so
+ $(inst_libdir)/libc.so: $(common-objpfx)format.lds \
+ 			$(common-objpfx)libc.so$(libc.so-version) \
+-			$(inst_libdir)/$(patsubst %,$(libtype.oS),\
++			$(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
+ 						  $(libprefix)$(libc-name)) \
+ 			$(+force)
+ 	(echo '/* GNU ld script';\
+@@ -1003,7 +1003,7 @@
+ 	 echo '   the static library, so try that secondarily.  */';\
+ 	 cat $<; \
+ 	 echo 'GROUP ( $(slibdir)/libc.so$(libc.so-version)' \
+-	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)$(libc-name))'\
++	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)$(libc-name))'\
+ 	      ' AS_NEEDED (' $(slibdir)/$(rtld-installed-name) ') )' \
+ 	) > $@.new
+ 	mv -f $@.new $@
+diff -urN a/nptl/Makefile b/nptl/Makefile
+--- a/nptl/Makefile	2012-06-22 16:11:15.000000000 +0100
++++ b/nptl/Makefile	2014-04-27 01:16:51.855334200 +0100
+@@ -391,7 +391,7 @@
+ 
+ $(inst_libdir)/libpthread.so: $(common-objpfx)format.lds \
+ 			      $(objpfx)libpthread.so$(libpthread.so-version) \
+-			      $(inst_libdir)/$(patsubst %,$(libtype.oS),\
++			      $(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
+ 							$(libprefix)pthread) \
+ 			      $(+force)
+ 	(echo '/* GNU ld script';\
+@@ -399,7 +399,7 @@
+ 	 echo '   the static library, so try that secondarily.  */';\
+ 	 cat $<; \
+ 	 echo 'GROUP ( $(slibdir)/libpthread.so$(libpthread.so-version)' \
+-	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)pthread)'\
++	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)pthread)'\
+ 	      ')' \
+ 	) > $@.new
+ 	mv -f $@.new $@
+diff -urN a/sysdeps/i386/i686/Makefile b/sysdeps/i386/i686/Makefile
+--- a/sysdeps/i386/i686/Makefile	2010-03-13 18:20:12.000000000 +0000
++++ b/sysdeps/i386/i686/Makefile	2014-04-27 01:16:51.857334300 +0100
+@@ -16,12 +16,12 @@
+ CFLAGS-.op += -Wa,-mtune=i686
+ CFLAGS-.og += -Wa,-mtune=i686
+ CFLAGS-.ob += -Wa,-mtune=i686
+-CFLAGS-.oS += -Wa,-mtune=i686
++CFLAGS-.oSTATIC += -Wa,-mtune=i686
+ 
+ ASFLAGS-.o += -Wa,-mtune=i686
+ ASFLAGS-.os += -Wa,-mtune=i686
+ ASFLAGS-.op += -Wa,-mtune=i686
+ ASFLAGS-.og += -Wa,-mtune=i686
+ ASFLAGS-.ob += -Wa,-mtune=i686
+-ASFLAGS-.oS += -Wa,-mtune=i686
++ASFLAGS-.oSTATIC += -Wa,-mtune=i686
+ endif
+diff -urN a/sysdeps/ieee754/ldbl-opt/Makefile b/sysdeps/ieee754/ldbl-opt/Makefile
+--- a/sysdeps/ieee754/ldbl-opt/Makefile	2012-05-26 18:46:57.000000000 +0100
++++ b/sysdeps/ieee754/ldbl-opt/Makefile	2014-04-27 01:17:09.282331000 +0100
+@@ -49,6 +49,6 @@
+ libnldbl-routines = $(libnldbl-calls:%=nldbl-%)
+ libnldbl-inhibit-o = $(object-suffixes)
+ libnldbl-static-only-routines = $(libnldbl-routines)
+-extra-objs += $(addsuffix .oS, $(libnldbl-routines))
++extra-objs += $(addsuffix .oSTATIC, $(libnldbl-routines))
+ 
+ endif
+diff -urN a/sysdeps/sparc/sparc32/sparcv9/Makefile b/sysdeps/sparc/sparc32/sparcv9/Makefile
+--- a/sysdeps/sparc/sparc32/sparcv9/Makefile	2012-03-21 20:25:11.000000000 +0000
++++ b/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-04-27 01:16:51.858334400 +0100
+@@ -11,12 +11,12 @@
+ ASFLAGS-.op += -Wa,-Av9d
+ ASFLAGS-.og += -Wa,-Av9d
+ ASFLAGS-.ob += -Wa,-Av9d
+-ASFLAGS-.oS += -Wa,-Av9d
++ASFLAGS-.oSTATIC += -Wa,-Av9d
+ else
+ ASFLAGS-.o += -Wa,-Av9a
+ ASFLAGS-.os += -Wa,-Av9a
+ ASFLAGS-.op += -Wa,-Av9a
+ ASFLAGS-.og += -Wa,-Av9a
+ ASFLAGS-.ob += -Wa,-Av9a
+-ASFLAGS-.oS += -Wa,-Av9a
++ASFLAGS-.oSTATIC += -Wa,-Av9a
+ endif
+diff -urN a/sysdeps/sparc/sparc64/Makefile b/sysdeps/sparc/sparc64/Makefile
+--- a/sysdeps/sparc/sparc64/Makefile	2012-03-21 20:25:11.000000000 +0000
++++ b/sysdeps/sparc/sparc64/Makefile	2014-04-27 01:17:17.436797400 +0100
+@@ -13,5 +13,5 @@
+ ASFLAGS-.op += -Wa,-Av9d
+ ASFLAGS-.og += -Wa,-Av9d
+ ASFLAGS-.ob += -Wa,-Av9d
+-ASFLAGS-.oS += -Wa,-Av9d
++ASFLAGS-.oSTATIC += -Wa,-Av9d
+ endif
diff --git a/patches/eglibc/2_16/250-MSYS-Hack-force-ln-s.patch b/patches/eglibc/2_16/250-MSYS-Hack-force-ln-s.patch
new file mode 100644
index 0000000..2916f8e
--- /dev/null
+++ b/patches/eglibc/2_16/250-MSYS-Hack-force-ln-s.patch
@@ -0,0 +1,39 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-02-23 13:14:17.289519700 +0000
++++ b/configure	2014-02-23 13:14:38.023152600 +0000
+@@ -4475,6 +4475,16 @@
+ $as_echo "no, using $LN_S" >&6; }
+ fi
+ 
++# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
++# eglibc, whereas cp -r doesn't.
++case "$build_os" in
++*mingw*)
++  as_ln_s='ln -s'
++  LN_S=$as_ln_s
++  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&5
++$as_echo "$as_me: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&2;}
++  ;;
++esac
+ 
+ # Was a --with-binutils option given?
+ if test -n "$path_binutils"; then
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-23 13:14:17.290019800 +0000
++++ b/configure.in	2014-02-23 13:14:38.029153300 +0000
+@@ -966,6 +966,15 @@
+   INSTALL='\$(..)./scripts/install-sh -c'
+ fi
+ AC_PROG_LN_S
++# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
++# eglibc, whereas cp -r doesn't.
++case "$build_os" in
++*mingw*)
++  as_ln_s='ln -s'
++  LN_S=$as_ln_s
++  AC_MSG_WARN(Hacked as_ln_s and LN_S to 'ln -s' for MSYS2)
++  ;;
++esac
+ 
+ LIBC_PROG_BINUTILS
+ AC_SUBST(MIG)dnl Needed by sysdeps/mach/configure.in
diff --git a/patches/eglibc/2_17/200-make-4.patch b/patches/eglibc/2_17/200-make-4.patch
new file mode 100644
index 0000000..726d3bd
--- /dev/null
+++ b/patches/eglibc/2_17/200-make-4.patch
@@ -0,0 +1,24 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-03-20 23:43:35.597798015 +0000
++++ b/configure	2014-03-20 23:44:11.775024190 +0000
+@@ -4995,7 +4995,7 @@
+   ac_prog_version=`$MAKE --version 2>&1 | sed -n 's/^.*GNU Make[^0-9]*\([0-9][0-9.]*\).*$/\1/p'`
+   case $ac_prog_version in
+     '') ac_prog_version="v. ?.??, bad"; ac_verc_fail=yes;;
+-    3.79* | 3.[89]*)
++    3.79* | 3.[89]* | 4.*)
+        ac_prog_version="$ac_prog_version, ok"; ac_verc_fail=no;;
+     *) ac_prog_version="$ac_prog_version, bad"; ac_verc_fail=yes;;
+ 
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-03-20 23:43:35.987804059 +0000
++++ b/configure.in	2014-03-20 23:44:11.775024190 +0000
+@@ -958,7 +958,7 @@
+   critic_missing="$critic_missing gcc")
+ AC_CHECK_PROG_VER(MAKE, gnumake gmake make, --version,
+   [GNU Make[^0-9]*\([0-9][0-9.]*\)],
+-  [3.79* | 3.[89]*], critic_missing="$critic_missing make")
++  [3.79* | 3.[89]* | 4.*], critic_missing="$critic_missing make")
+ 
+ AC_CHECK_PROG_VER(MSGFMT, gnumsgfmt gmsgfmt msgfmt, --version,
+   [GNU gettext.* \([0-9]*\.[0-9.]*\)],
diff --git a/patches/eglibc/2_17/210-configure-Default-to-CPP-CC--E-unless-overridden.patch b/patches/eglibc/2_17/210-configure-Default-to-CPP-CC--E-unless-overridden.patch
new file mode 100644
index 0000000..233aa16
--- /dev/null
+++ b/patches/eglibc/2_17/210-configure-Default-to-CPP-CC--E-unless-overridden.patch
@@ -0,0 +1,242 @@
+diff -urN a/ChangeLog b/ChangeLog
+--- a/ChangeLog	2014-02-07 21:07:28.000000000 +0000
++++ b/ChangeLog	2014-03-20 23:59:16.009007884 +0000
+@@ -1,3 +1,8 @@
++2013-01-25  Thomas Schwinge  <thomas@codesourcery.com>
++
++        * configure.in (AC_PROG_CPP): New definition.
++        * configure: Regenerate.
++
+ 2014-01-29  H.J. Lu  <hongjiu.lu@intel.com>
+ 
+ 	[BZ #16510]
+diff -urN a/configure b/configure
+--- a/configure	2014-03-20 23:58:56.582040603 +0000
++++ b/configure	2014-03-20 23:59:16.009007884 +0000
+@@ -1568,43 +1568,6 @@
+ 
+ } # ac_fn_c_try_compile
+ 
+-# ac_fn_c_try_cpp LINENO
+-# ----------------------
+-# Try to preprocess conftest.$ac_ext, and return whether this succeeded.
+-ac_fn_c_try_cpp ()
+-{
+-  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+-  if { { ac_try="$ac_cpp conftest.$ac_ext"
+-case "(($ac_try" in
+-  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+-  *) ac_try_echo=$ac_try;;
+-esac
+-eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+-$as_echo "$ac_try_echo"; } >&5
+-  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.err
+-  ac_status=$?
+-  if test -s conftest.err; then
+-    grep -v '^ *+' conftest.err >conftest.er1
+-    cat conftest.er1 >&5
+-    mv -f conftest.er1 conftest.err
+-  fi
+-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+-  test $ac_status = 0; } > conftest.i && {
+-	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+-	 test ! -s conftest.err
+-       }; then :
+-  ac_retval=0
+-else
+-  $as_echo "$as_me: failed program was:" >&5
+-sed 's/^/| /' conftest.$ac_ext >&5
+-
+-    ac_retval=1
+-fi
+-  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
+-  as_fn_set_status $ac_retval
+-
+-} # ac_fn_c_try_cpp
+-
+ # ac_fn_cxx_try_compile LINENO
+ # ----------------------------
+ # Try to compile conftest.$ac_ext, and return whether this succeeded.
+@@ -2354,6 +2317,11 @@
+ # Glibc should not depend on any header files
+ 
+ 
++# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
++# here to work around the Autoconf issue discussed in
++# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
++# AC_PROG_CPP
++
+ 
+ 
+ subdirs="$subdirs "
+@@ -3068,142 +3036,13 @@
+ 
+ fi
+ 
+-ac_ext=c
+-ac_cpp='$CPP $CPPFLAGS'
+-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+-ac_compiler_gnu=$ac_cv_c_compiler_gnu
+-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor" >&5
+-$as_echo_n "checking how to run the C preprocessor... " >&6; }
+ # On Suns, sometimes $CPP names a directory.
+ if test -n "$CPP" && test -d "$CPP"; then
+   CPP=
+ fi
+ if test -z "$CPP"; then
+-  if ${ac_cv_prog_CPP+:} false; then :
+-  $as_echo_n "(cached) " >&6
+-else
+-      # Double quotes because CPP needs to be expanded
+-    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
+-    do
+-      ac_preproc_ok=false
+-for ac_c_preproc_warn_flag in '' yes
+-do
+-  # Use a header file that comes with gcc, so configuring glibc
+-  # with a fresh cross-compiler works.
+-  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+-  # <limits.h> exists even on freestanding compilers.
+-  # On the NeXT, cc -E runs the code through the compiler's parser,
+-  # not just through cpp. "Syntax error" is here to catch this case.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#ifdef __STDC__
+-# include <limits.h>
+-#else
+-# include <assert.h>
+-#endif
+-		     Syntax error
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-
+-else
+-  # Broken: fails on valid input.
+-continue
+-fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-  # OK, works on sane cases.  Now check whether nonexistent headers
+-  # can be detected and how.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#include <ac_nonexistent.h>
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-  # Broken: success on invalid input.
+-continue
+-else
+-  # Passes both tests.
+-ac_preproc_ok=:
+-break
+-fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-done
+-# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+-rm -f conftest.i conftest.err conftest.$ac_ext
+-if $ac_preproc_ok; then :
+-  break
+-fi
+-
+-    done
+-    ac_cv_prog_CPP=$CPP
+-
+-fi
+-  CPP=$ac_cv_prog_CPP
+-else
+-  ac_cv_prog_CPP=$CPP
+-fi
+-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $CPP" >&5
+-$as_echo "$CPP" >&6; }
+-ac_preproc_ok=false
+-for ac_c_preproc_warn_flag in '' yes
+-do
+-  # Use a header file that comes with gcc, so configuring glibc
+-  # with a fresh cross-compiler works.
+-  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+-  # <limits.h> exists even on freestanding compilers.
+-  # On the NeXT, cc -E runs the code through the compiler's parser,
+-  # not just through cpp. "Syntax error" is here to catch this case.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#ifdef __STDC__
+-# include <limits.h>
+-#else
+-# include <assert.h>
+-#endif
+-		     Syntax error
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-
+-else
+-  # Broken: fails on valid input.
+-continue
++  CPP="$CC -E"
+ fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-  # OK, works on sane cases.  Now check whether nonexistent headers
+-  # can be detected and how.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#include <ac_nonexistent.h>
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-  # Broken: success on invalid input.
+-continue
+-else
+-  # Passes both tests.
+-ac_preproc_ok=:
+-break
+-fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-done
+-# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+-rm -f conftest.i conftest.err conftest.$ac_ext
+-if $ac_preproc_ok; then :
+-
+-else
+-  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+-$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+-as_fn_error $? "C preprocessor \"$CPP\" fails sanity check
+-See \`config.log' for more details" "$LINENO" 5; }
+-fi
+-
+-ac_ext=c
+-ac_cpp='$CPP $CPPFLAGS'
+-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+-ac_compiler_gnu=$ac_cv_c_compiler_gnu
+ 
+ # We need the C++ compiler only for testing.
+ ac_ext=cpp
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-03-20 23:58:56.582040603 +0000
++++ b/configure.in	2014-03-20 23:59:16.009007884 +0000
+@@ -17,6 +17,23 @@
+   [m4_divert_text([DEFAULTS],
+     [ac_includes_default='/* none */'])])
+ 
++# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
++# here to work around the Autoconf issue discussed in
++# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
++AC_DEFUN([AC_PROG_CPP],
++[AC_REQUIRE([AC_PROG_CC])dnl
++AC_ARG_VAR([CPP],      [C preprocessor])dnl
++_AC_ARG_VAR_CPPFLAGS()dnl
++# On Suns, sometimes $CPP names a directory.
++if test -n "$CPP" && test -d "$CPP"; then
++  CPP=
++fi
++if test -z "$CPP"; then
++  CPP="$CC -E"
++fi
++AC_SUBST(CPP)dnl
++])# AC_PROG_CPP
++
+ dnl This is here so we can set $subdirs directly based on configure fragments.
+ AC_CONFIG_SUBDIRS()
+ 
diff --git a/patches/eglibc/2_17/220-Fix-crossrpc-to-build-on-non-Linux.patch b/patches/eglibc/2_17/220-Fix-crossrpc-to-build-on-non-Linux.patch
new file mode 100644
index 0000000..e95ba20
--- /dev/null
+++ b/patches/eglibc/2_17/220-Fix-crossrpc-to-build-on-non-Linux.patch
@@ -0,0 +1,247 @@
+diff -urN a/sunrpc/rpc/types.h b/sunrpc/rpc/types.h
+--- a/sunrpc/rpc/types.h	2014-03-20 23:45:10.035925105 +0000
++++ b/sunrpc/rpc/types.h	2014-03-20 23:45:49.096529089 +0000
+@@ -69,6 +69,7 @@
+ #include <sys/types.h>
+ #endif
+ 
++#ifdef __linux__
+ #ifndef __u_char_defined
+ typedef __u_char u_char;
+ typedef __u_short u_short;
+@@ -84,11 +85,14 @@
+ typedef __caddr_t caddr_t;
+ # define __daddr_t_defined
+ #endif
++#endif
+ 
+ #include <sys/time.h>
+ #include <sys/param.h>
+ 
++#ifndef _WIN32
+ #include <netinet/in.h>
++#endif
+ 
+ #ifndef INADDR_LOOPBACK
+ #define       INADDR_LOOPBACK         (u_long)0x7F000001
+diff -urN a/sunrpc/rpc_main.c b/sunrpc/rpc_main.c
+--- a/sunrpc/rpc_main.c	2014-03-20 23:45:10.035925105 +0000
++++ b/sunrpc/rpc_main.c	2014-03-20 23:47:47.805031654 +0000
+@@ -38,13 +38,19 @@
+ #include <stdio.h>
+ #include <string.h>
+ #include <unistd.h>
++#ifndef IS_IN_build
+ #include <libintl.h>
++#endif
+ #include <ctype.h>
+ #include <sys/types.h>
+ #include <sys/param.h>
+ #include <sys/file.h>
+ #include <sys/stat.h>
++#ifndef _WIN32
+ #include <sys/wait.h>
++#else
++#include <windows.h>
++#endif
+ #include "rpc_parse.h"
+ #include "rpc_util.h"
+ #include "rpc_scan.h"
+@@ -53,6 +59,33 @@
+ #include "../version.h"
+ #define PACKAGE _libc_intl_domainname
+ 
++#ifdef _WIN32
++#define rindex(_dest, _src) strrchr((_dest), (_src))
++
++char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src);
++
++char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src)
++{
++  if (src == NULL)
++      return NULL;
++  return strcpy(dest, src) + strlen(dest);
++}
++#endif /* _WIN32 */
++
++#if defined(_WIN32) || defined(__BSD__)
++
++char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len);
++
++char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len)
++{
++  size_t min_len = strlen(src);
++  if (min_len > len)
++    min_len = len;
++  return strncpy(dest, src, len) + min_len;
++}
++
++#endif /* defined(_WIN32) || defined(__BSD__) */
++
+ #define EXTEND	1		/* alias for TRUE */
+ #define DONT_EXTEND	0	/* alias for FALSE */
+ 
+@@ -80,7 +113,11 @@
+ static const char *CPP = "/lib/cpp";
+ static const char CPPFLAGS[] = "-C";
+ static char *pathbuf;
++#ifdef _WIN32
++static HANDLE cpp_pid;
++#else
+ static int cpp_pid;
++#endif
+ static const char *allv[] =
+ {
+   "rpcgen", "-s", "udp", "-s", "tcp"
+@@ -324,6 +361,20 @@
+ {
+   struct stat buf;
+ 
++  /* Avoid trying to directly execute a bash script on Windows. */
++#ifdef _WIN32
++  char* CPPENVV = getenv("CPP");
++  if (CPPENVV)
++    {
++      CPP = (char*)malloc(strlen(CPPENVV)+1);
++      strcpy((char*)CPP, CPPENVV);
++      /* Don't bother checking that it exists with stat64 as
++       * we'd have to check in the path, also it usually ends
++       * with a few arguments. */
++      return;
++    }
++#endif
++
+   if (stat (CPP, &buf) == 0)
+     return;
+ 
+@@ -337,9 +388,122 @@
+   CPP = "cpp";
+ }
+ 
++#ifdef _WIN32
++/*
++ * Open input file with given define for C-preprocessor
++ */
++static void
++open_input (const char *infile, const char *define)
++{
++  int argi;
++  int argcc = 0;
++  LPSTR argsall;
++  HANDLE StdOutHandle;
++  HANDLE StdErrHandle;
++  HANDLE ReadPipe;
++  HANDLE WritePipe;
++  SECURITY_ATTRIBUTES SecAttr;
++  STARTUPINFO StartupInfo;
++  PROCESS_INFORMATION ProcessInfo;
++  DWORD Status;
++
++  find_cpp ();
++  putarg (0, CPP);
++  putarg (1, CPPFLAGS);
++  addarg (define);
++  if (infile)
++    addarg (infile);
++  addarg ((char *) NULL);
++  for (argi = 0; argi < argcount - 1; ++argi)
++    {
++      argcc += strlen(arglist[argi])+2;
++    }
++  argsall = (LPSTR)alloca(argcc + 1);
++  if (!argsall)
++    {
++      fprintf (stderr, _ ("cannot alloca for argsall\n"));
++      exit (1);
++    }
++  argsall[0] = '\0';
++  for (argi = 0; argi < argcount - 1; ++argi)
++    {
++      strcat((char*)argsall, arglist[argi]);
++      strcat((char*)argsall, " ");
++    }
++
++  memset(&SecAttr,     0, sizeof(SecAttr));
++  memset(&StartupInfo, 0, sizeof(StartupInfo));
++  memset(&ProcessInfo, 0, sizeof(ProcessInfo));
++
++  SecAttr.nLength = sizeof(SecAttr);
++  SecAttr.bInheritHandle = TRUE;
++
++  Status = CreatePipe( &ReadPipe, &WritePipe, &SecAttr, 0 );
++  if (!Status)
++    {
++      fprintf (stderr, _ ("cannot CreatePipe: GetLastError() -> %d\n"), GetLastError());
++      exit (1);
++    }
++
++  SetHandleInformation( ReadPipe, HANDLE_FLAG_INHERIT, 0 );
++
++  /*
++  StdOutHandle = GetStdHandle( STD_OUTPUT_HANDLE );
++  StdErrHandle = GetStdHandle( STD_ERROR_HANDLE );
++  if (StdOutHandle != INVALID_HANDLE_VALUE) {
++      SetHandleInformation( StdOutHandle, HANDLE_FLAG_INHERIT, 0 );
++  }
++  if (StdErrHandle != INVALID_HANDLE_VALUE) {
++      SetHandleInformation( StdErrHandle, HANDLE_FLAG_INHERIT, 0 );
++  }
++  */
++
++  StartupInfo.cb         = sizeof(StartupInfo);
++  StartupInfo.hStdInput  = GetStdHandle( STD_INPUT_HANDLE );
++  StartupInfo.hStdOutput = WritePipe;
++  StartupInfo.hStdError  = GetStdHandle( STD_ERROR_HANDLE );
++  StartupInfo.dwFlags    = STARTF_USESTDHANDLES;
++
++  Status = CreateProcess(
++          NULL,           /* lpApplicationName */
++          argsall,        /* lpCommandLine */
++          NULL,           /* lpProcessAttributes */
++          NULL,           /* lpThreadAttributes */
++          TRUE,           /* bInheritHandles */
++          0,              /* dwCreationFlags */
++          NULL,           /* lpEnvironment */
++          NULL,           /* lpCurrentDirectory */
++          &StartupInfo,   /* lpStartupInfo */
++          &ProcessInfo ); /* lpProcessInformation */
++
++  CloseHandle( WritePipe );
++  if (!Status)
++    {
++      fprintf (stderr, _ ("cannot find C preprocessor: %s, GetLastError() -> %d\n"), CPP, GetLastError());
++      exit (1);
++    }
++  int fd = _open_osfhandle((intptr_t)ReadPipe, _O_APPEND | _O_RDONLY);
++  if(fd != -1)
++    {
++      fin = _fdopen(fd, "a+");
++    }
++  cpp_pid = ProcessInfo.hProcess;
++}
++
++/* Close the connection to the C-preprocessor and check for successfull
++   termination.  */
++static void
++close_input (void)
++{
++  WaitForSingleObject(cpp_pid, INFINITE);
++}
++
++#else
++
+ /*
+  * Open input file with given define for C-preprocessor
+  */
++
+ static void
+ open_input (const char *infile, const char *define)
+ {
+@@ -412,6 +576,7 @@
+       crash ();
+     }
+ }
++#endif
+ 
+ /* valid tirpc nettypes */
+ static const char *valid_ti_nettypes[] =
diff --git a/patches/eglibc/2_17/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch b/patches/eglibc/2_17/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
new file mode 100644
index 0000000..d445c8f
--- /dev/null
+++ b/patches/eglibc/2_17/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
@@ -0,0 +1,115 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-04-27 01:31:56.021049500 +0100
++++ b/configure	2014-04-27 01:32:13.790065900 +0100
+@@ -629,6 +629,7 @@
+ libc_cv_gcc_static_libgcc
+ CXX_SYSINCLUDES
+ SYSINCLUDES
++sysheaders
+ AUTOCONF
+ NM
+ AWK
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-04-27 01:31:56.021049500 +0100
++++ b/configure.in	2014-04-27 01:32:13.799066400 +0100
+@@ -1042,6 +1042,7 @@
+     done
+   fi
+ fi
++AC_SUBST(sysheaders)
+ AC_SUBST(SYSINCLUDES)
+ AC_SUBST(CXX_SYSINCLUDES)
+ 
+diff -urN a/elf/Makefile b/elf/Makefile
+--- a/elf/Makefile	2014-04-27 01:31:56.124055400 +0100
++++ b/elf/Makefile	2014-04-27 01:32:13.802066600 +0100
+@@ -63,6 +63,15 @@
+ ld-map		= $(common-objpfx)ld.map
+ # eglibc: endif
+ 
++# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
++# suffix of w means Windows.
++uname_o := $(shell uname -o)
++ifneq (, $(findstring Msys, $(uname_o)))
++common-objpfxw = $(shell cd $(common-objpfx); pwd -W)/
++else
++common-objpfxw = $(common-objpfx)
++endif
++
+ ifeq (yes,$(build-shared))
+ extra-objs	= $(all-rtld-routines:%=%.os) soinit.os sofini.os interp.os
+ generated	+= librtld.os dl-allobjs.os ld.so ldd
+@@ -300,15 +309,15 @@
+ 
+ $(objpfx)librtld.mk: $(objpfx)librtld.map Makefile
+ 	LC_ALL=C \
+-	sed -n 's@^$(common-objpfx)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
++	sed -n 's@^$(common-objpfxw)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
+ 	    $< | \
+ 	while read lib file; do \
+ 	  case $$lib in \
+ 	  libc_pic.a) \
+ 	    LC_ALL=C fgrep -l /$$file \
+-		  $(common-objpfx)stamp.os $(common-objpfx)*/stamp.os | \
++		  $(common-objpfxw)stamp.os $(common-objpfxw)*/stamp.os | \
+ 	    LC_ALL=C \
+-	    sed 's@^$(common-objpfx)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
++	    sed 's@^$(common-objpfxw)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
+ 	    ;; \
+ 	  */*.a) \
+ 	    echo rtld-$${lib%%/*} += $$file ;; \
+diff -urN a/Makefile.in b/Makefile.in
+--- a/Makefile.in	2014-04-27 01:31:56.959103200 +0100
++++ b/Makefile.in	2014-04-27 01:32:31.288066700 +0100
+@@ -1,4 +1,5 @@
+ srcdir = @srcdir@
++sysheaders = @sysheaders@
+ 
+ # Uncomment the line below if you want to do parallel build.
+ # PARALLELMFLAGS = -j 4
+@@ -6,8 +7,8 @@
+ .PHONY: all install
+ 
+ all .DEFAULT:
+-	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` $@
++	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` sysheaders=$(sysheaders) $@
+ 
+ install:
+ 	LANGUAGE=C LC_ALL=C; export LANGUAGE LC_ALL; \
+-	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` $@
++	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` sysheaders=$(sysheaders) $@
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2014-04-27 01:31:56.959103200 +0100
++++ b/Makerules	2014-04-27 01:32:13.806066800 +0100
+@@ -396,11 +396,29 @@
+ mv -f $(@:.d=.T) $@ $(generate-md5)
+ endef
+ 
++# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
++# suffix of w means Windows, and m means MSYS2.
++uname_o := $(shell uname -o)
++sysroot = $(shell echo `$(CC) -print-file-name="include"`)
++ifneq (, $(findstring Msys, $(uname_o)))
++common-objpfxw = $(shell cd $(common-objpfx); pwd -W)/
++sysheadersw = $(shell cd $(sysheaders); pwd -W)
++sysrootm = $(shell cd $(sysroot); pwd)
++else
++common-objpfxw = $(common-objpfx)
++sysheadersw = $(sysheaders)
++sysrootm = $(sysroot)
++endif
++
+ ifneq (,$(objpfx))
+ # Continuation lines here are dangerous because they introduce spaces!
+ define sed-remove-objpfx
+--e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfx)))@ $$(common-objpfx)@g' \
+--e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfx)))@$$(common-objpfx)@g'
++-e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfxw)))@ $$(common-objpfx)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfxw)))@$$(common-objpfx)@g' \
++-e 's@ $(subst .,\.,$(subst @,\@,$(sysheadersw)))@ $(sysheaders)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(sysheadersw)))@$(sysheaders)@g' \
++-e 's@ $(subst .,\.,$(subst @,\@,$(sysroot)))@ $(sysrootm)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(sysroot)))@$(sysrootm)@g'
+ endef
+ endif
+ 
diff --git a/patches/eglibc/2_17/240-Rename-extensions-for-case-insensitive-fs.patch b/patches/eglibc/2_17/240-Rename-extensions-for-case-insensitive-fs.patch
new file mode 100644
index 0000000..9b016c4
--- /dev/null
+++ b/patches/eglibc/2_17/240-Rename-extensions-for-case-insensitive-fs.patch
@@ -0,0 +1,250 @@
+diff -urN a/ChangeLog b/ChangeLog
+--- a/ChangeLog	2014-04-27 01:26:45.189271000 +0100
++++ b/ChangeLog	2014-04-27 01:27:00.384140100 +0100
+@@ -1,3 +1,8 @@
++2014-01-22  Ray Donnelly  <mingw.android@gmail.com>
++
++        * Rename .oS to .oSTATIC so that builds can be done on file
++        systems that are not both case sensitive and case preserving.
++
+ 2013-01-25  Thomas Schwinge  <thomas@codesourcery.com>
+ 
+         * configure.in (AC_PROG_CPP): New definition.
+diff -urN a/extra-lib.mk b/extra-lib.mk
+--- a/extra-lib.mk	2014-04-27 01:26:45.738302400 +0100
++++ b/extra-lib.mk	2014-04-27 01:27:00.405141300 +0100
+@@ -13,7 +13,7 @@
+ 
+ ifneq (,$($(lib)-static-only-routines))
+ ifneq (,$(filter yes%,$(build-shared)$($(lib).so-version)))
+-object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oS)
++object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oSTATIC)
+ endif
+ endif
+ 
+@@ -31,7 +31,7 @@
+ 
+ # Add each flavor of library to the lists of things to build and install.
+ install-lib += $(foreach o,$(object-suffixes-$(lib)),$(lib:lib%=$(libtype$o)))
+-extra-objs += $(foreach o,$(filter-out .os .oS,$(object-suffixes-$(lib))),\
++extra-objs += $(foreach o,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))),\
+ 			$(patsubst %,%$o,$(filter-out \
+ 					   $($(lib)-shared-only-routines),\
+ 					   $(all-$(lib)-routines))))
+@@ -59,7 +59,7 @@
+ 
+ 
+ # Use o-iterator.mk to generate a rule for each flavor of library.
+-ifneq (,$(filter-out .os .oS,$(object-suffixes-$(lib))))
++ifneq (,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))))
+ define o-iterator-doit
+ $(objpfx)$(patsubst %,$(libtype$o),$(lib:lib%=%)): \
+   $(patsubst %,$(objpfx)%$o,\
+@@ -67,7 +67,7 @@
+ 			  $(all-$(lib)-routines))); \
+ 	$$(build-extra-lib)
+ endef
+-object-suffixes-left = $(filter-out .os .oS,$(object-suffixes-$(lib)))
++object-suffixes-left = $(filter-out .os .oSTATIC,$(object-suffixes-$(lib)))
+ include $(patsubst %,$(..)o-iterator.mk,$(object-suffixes-left))
+ endif
+ 
+@@ -79,9 +79,9 @@
+ 	$(build-extra-lib)
+ endif
+ 
+-ifneq (,$(filter .oS,$(object-suffixes-$(lib))))
+-$(objpfx)$(patsubst %,$(libtype.oS),$(lib:lib%=%)): \
+-  $(patsubst %,$(objpfx)%.oS,\
++ifneq (,$(filter .oSTATIC,$(object-suffixes-$(lib))))
++$(objpfx)$(patsubst %,$(libtype.oSTATIC),$(lib:lib%=%)): \
++  $(patsubst %,$(objpfx)%.oSTATIC,\
+ 	     $(filter $($(lib)-static-only-routines),\
+ 		      $(all-$(lib)-routines)))
+ 	$(build-extra-lib)
+diff -urN a/Makeconfig b/Makeconfig
+--- a/Makeconfig	2014-04-27 01:26:46.269332800 +0100
++++ b/Makeconfig	2014-04-27 01:27:00.401141000 +0100
+@@ -453,7 +453,7 @@
+ # run the linked programs.
+ link-libc-before-gnulib = -Wl,-rpath-link=$(rpath-link) \
+ 	    $(common-objpfx)libc.so$(libc.so-version) \
+-	    $(common-objpfx)$(patsubst %,$(libtype.oS),c) \
++	    $(common-objpfx)$(patsubst %,$(libtype.oSTATIC),c) \
+ 	    $(as-needed) $(common-objpfx)elf/ld.so $(no-as-needed)
+ link-libc = $(link-libc-before-gnulib) $(gnulib)
+ link-libc-tests = $(link-libc-before-gnulib) $(gnulib-tests)
+@@ -756,7 +756,7 @@
+ # The compilation rules use $(CPPFLAGS-${SUFFIX}) and $(CFLAGS-${SUFFIX})
+ # to pass different flags for each flavor.
+ libtypes = $(foreach o,$(object-suffixes-for-libc),$(libtype$o))
+-all-object-suffixes := .o .os .op .og .ob .oS
++all-object-suffixes := .o .os .op .og .ob .oSTATIC
+ object-suffixes :=
+ CPPFLAGS-.o = $(pic-default)
+ CFLAGS-.o = $(filter %frame-pointer,$(+cflags))
+@@ -807,14 +807,14 @@
+ 
+ ifeq (yes,$(build-shared))
+ # Build special library that contains the static-only routines for libc.
+-object-suffixes-for-libc += .oS
++object-suffixes-for-libc += .oSTATIC
+ 
+ # Must build the routines as PIC, though, because they can end up in (users')
+ # shared objects.  We don't want to use CFLAGS-os because users may, for
+ # example, make that processor-specific.
+-CFLAGS-.oS = $(CFLAGS-.o) $(PIC-ccflag)
+-CPPFLAGS-.oS = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
+-libtype.oS = lib%_nonshared.a
++CFLAGS-.oSTATIC = $(CFLAGS-.o) $(PIC-ccflag)
++CPPFLAGS-.oSTATIC = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
++libtype.oSTATIC = lib%_nonshared.a
+ endif
+ 
+ # The assembler can generate debug information too.
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2014-04-27 01:26:46.269332800 +0100
++++ b/Makerules	2014-04-27 01:27:00.403141200 +0100
+@@ -162,14 +162,14 @@
+ # We only generate these in the top-level makefile, to avoid any weirdness
+ # from subdir-specific makefile tweaks creeping in on an update.
+ $(common-objpfx)%.make: $(..)%.make.c $(..)Makerules $(common-before-compile)
+-	rm -f $@T $@.dT
++	rm -f $@T $@.dTEMP
+ 	(echo '# Generated from $*.make.c by Makerules.'; \
+ 	 $(CC) $(CFLAGS) $(CPPFLAGS) -E -DASSEMBLER $< \
+-	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dT \
++	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dTEMP \
+ 	 | sed -n '/@@@/{s/@@@[	 ]*\(.*\)@@@/\1/;s/[	 ]*$$//p;}'; \
+ 	 echo 'common-generated += $(@F)'; \
+-	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dT; \
+-	 rm -f $@.dT) > $@T
++	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dTEMP; \
++	 rm -f $@.dTEMP) > $@T
+ 	mv -f $@T $@
+ endif
+ 
+@@ -354,7 +354,7 @@
+ # eglibc: endif # $(versioning) = yes
+ endif # sysd-sorted-done
+ 
+-# Generate .dT files as we compile.
++# Generate .dTEMP files as we compile.
+ compile-mkdep-flags = -MD -MP -MF $@.dt -MT $@
+ compile-command.S = $(compile.S) $(OUTPUT_OPTION) $(compile-mkdep-flags)
+ compile-command.c = $(compile.c) $(OUTPUT_OPTION) $(compile-mkdep-flags)
+@@ -453,7 +453,7 @@
+ # Bounded pointer thunks are only built for *.ob
+ elide-bp-thunks = $(addprefix $(bppfx),$(bp-thunks))
+ 
+-elide-routines.oS += $(filter-out $(static-only-routines),\
++elide-routines.oSTATIC += $(filter-out $(static-only-routines),\
+ 				  $(routines) $(aux) $(sysdep_routines)) \
+ 		     $(elide-bp-thunks)
+ elide-routines.os += $(static-only-routines) $(elide-bp-thunks)
+@@ -687,7 +687,7 @@
+ 
+ +depfiles := $(sources:.c=.d) \
+ 	     $(patsubst %.o,%.d,$(filter %.o,$(extra-objs:.os=.o))) \
+-	     $(patsubst %.oS,%.d,$(filter %.oS,$(extra-objs))) \
++	     $(patsubst %.oSTATIC,%.d,$(filter %.oSTATIC,$(extra-objs))) \
+ 	     $(patsubst %.o,%.d,$(filter %.o,$(extra-test-objs:.os=.o))) \
+ 	     $(addsuffix .d,$(tests) $(xtests) $(test-srcs))
+ ifeq ($(build-programs),yes)
+@@ -995,7 +995,7 @@
+ install: $(inst_libdir)/libc.so
+ $(inst_libdir)/libc.so: $(common-objpfx)format.lds \
+ 			$(common-objpfx)libc.so$(libc.so-version) \
+-			$(inst_libdir)/$(patsubst %,$(libtype.oS),\
++			$(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
+ 						  $(libprefix)$(libc-name)) \
+ 			$(+force)
+ 	(echo '/* GNU ld script';\
+@@ -1003,7 +1003,7 @@
+ 	 echo '   the static library, so try that secondarily.  */';\
+ 	 cat $<; \
+ 	 echo 'GROUP ( $(slibdir)/libc.so$(libc.so-version)' \
+-	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)$(libc-name))'\
++	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)$(libc-name))'\
+ 	      ' AS_NEEDED (' $(slibdir)/$(rtld-installed-name) ') )' \
+ 	) > $@.new
+ 	mv -f $@.new $@
+diff -urN a/nptl/Makefile b/nptl/Makefile
+--- a/nptl/Makefile	2014-04-27 01:26:46.407340600 +0100
++++ b/nptl/Makefile	2014-04-27 01:27:00.407141400 +0100
+@@ -397,7 +397,7 @@
+ 
+ $(inst_libdir)/libpthread.so: $(common-objpfx)format.lds \
+ 			      $(objpfx)libpthread.so$(libpthread.so-version) \
+-			      $(inst_libdir)/$(patsubst %,$(libtype.oS),\
++			      $(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
+ 							$(libprefix)pthread) \
+ 			      $(+force)
+ 	(echo '/* GNU ld script';\
+@@ -405,7 +405,7 @@
+ 	 echo '   the static library, so try that secondarily.  */';\
+ 	 cat $<; \
+ 	 echo 'GROUP ( $(slibdir)/libpthread.so$(libpthread.so-version)' \
+-	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)pthread)'\
++	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)pthread)'\
+ 	      ')' \
+ 	) > $@.new
+ 	mv -f $@.new $@
+diff -urN a/sysdeps/i386/i686/Makefile b/sysdeps/i386/i686/Makefile
+--- a/sysdeps/i386/i686/Makefile	2014-04-27 01:26:48.889482600 +0100
++++ b/sysdeps/i386/i686/Makefile	2014-04-27 01:27:00.409141500 +0100
+@@ -16,12 +16,12 @@
+ CFLAGS-.op += -Wa,-mtune=i686
+ CFLAGS-.og += -Wa,-mtune=i686
+ CFLAGS-.ob += -Wa,-mtune=i686
+-CFLAGS-.oS += -Wa,-mtune=i686
++CFLAGS-.oSTATIC += -Wa,-mtune=i686
+ 
+ ASFLAGS-.o += -Wa,-mtune=i686
+ ASFLAGS-.os += -Wa,-mtune=i686
+ ASFLAGS-.op += -Wa,-mtune=i686
+ ASFLAGS-.og += -Wa,-mtune=i686
+ ASFLAGS-.ob += -Wa,-mtune=i686
+-ASFLAGS-.oS += -Wa,-mtune=i686
++ASFLAGS-.oSTATIC += -Wa,-mtune=i686
+ endif
+diff -urN a/sysdeps/ieee754/ldbl-opt/Makefile b/sysdeps/ieee754/ldbl-opt/Makefile
+--- a/sysdeps/ieee754/ldbl-opt/Makefile	2014-04-27 01:26:49.040491300 +0100
++++ b/sysdeps/ieee754/ldbl-opt/Makefile	2014-04-27 01:27:14.901970400 +0100
+@@ -49,7 +49,7 @@
+ libnldbl-routines = $(libnldbl-calls:%=nldbl-%)
+ libnldbl-inhibit-o = $(object-suffixes)
+ libnldbl-static-only-routines = $(libnldbl-routines)
+-extra-objs += $(addsuffix .oS, $(libnldbl-routines))
++extra-objs += $(addsuffix .oSTATIC, $(libnldbl-routines))
+ 
+ CFLAGS-nldbl-acos.c = -fno-builtin-acosl
+ CFLAGS-nldbl-acosh.c = -fno-builtin-acoshl
+diff -urN a/sysdeps/sparc/sparc32/sparcv9/Makefile b/sysdeps/sparc/sparc32/sparcv9/Makefile
+--- a/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-04-27 01:26:49.928542000 +0100
++++ b/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-04-27 01:27:00.414141800 +0100
+@@ -11,12 +11,12 @@
+ ASFLAGS-.op += -Wa,-Av9d
+ ASFLAGS-.og += -Wa,-Av9d
+ ASFLAGS-.ob += -Wa,-Av9d
+-ASFLAGS-.oS += -Wa,-Av9d
++ASFLAGS-.oSTATIC += -Wa,-Av9d
+ else
+ ASFLAGS-.o += -Wa,-Av9a
+ ASFLAGS-.os += -Wa,-Av9a
+ ASFLAGS-.op += -Wa,-Av9a
+ ASFLAGS-.og += -Wa,-Av9a
+ ASFLAGS-.ob += -Wa,-Av9a
+-ASFLAGS-.oS += -Wa,-Av9a
++ASFLAGS-.oSTATIC += -Wa,-Av9a
+ endif
+diff -urN a/sysdeps/sparc/sparc64/Makefile b/sysdeps/sparc/sparc64/Makefile
+--- a/sysdeps/sparc/sparc64/Makefile	2014-04-27 01:26:49.958543800 +0100
++++ b/sysdeps/sparc/sparc64/Makefile	2014-04-27 01:27:00.415141800 +0100
+@@ -13,5 +13,5 @@
+ ASFLAGS-.op += -Wa,-Av9d
+ ASFLAGS-.og += -Wa,-Av9d
+ ASFLAGS-.ob += -Wa,-Av9d
+-ASFLAGS-.oS += -Wa,-Av9d
++ASFLAGS-.oSTATIC += -Wa,-Av9d
+ endif
diff --git a/patches/eglibc/2_17/250-MSYS-Hack-force-ln-s.patch b/patches/eglibc/2_17/250-MSYS-Hack-force-ln-s.patch
new file mode 100644
index 0000000..eba42ec
--- /dev/null
+++ b/patches/eglibc/2_17/250-MSYS-Hack-force-ln-s.patch
@@ -0,0 +1,39 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-03-21 00:07:34.320047461 +0000
++++ b/configure	2014-03-21 00:08:25.170833885 +0000
+@@ -4536,6 +4536,16 @@
+ $as_echo "no, using $LN_S" >&6; }
+ fi
+ 
++# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
++# eglibc, whereas cp -r doesn't.
++case "$build_os" in
++*mingw*)
++  as_ln_s='ln -s'
++  LN_S=$as_ln_s
++  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&5
++$as_echo "$as_me: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&2;}
++  ;;
++esac
+ 
+ # Was a --with-binutils option given?
+ if test -n "$path_binutils"; then
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-03-21 00:07:34.320047461 +0000
++++ b/configure.in	2014-03-21 00:08:25.187500739 +0000
+@@ -956,6 +956,15 @@
+   INSTALL='\$(..)./scripts/install-sh -c'
+ fi
+ AC_PROG_LN_S
++# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
++# eglibc, whereas cp -r doesn't.
++case "$build_os" in
++*mingw*)
++  as_ln_s='ln -s'
++  LN_S=$as_ln_s
++  AC_MSG_WARN(Hacked as_ln_s and LN_S to 'ln -s' for MSYS2)
++  ;;
++esac
+ 
+ LIBC_PROG_BINUTILS
+ AC_SUBST(MIG)dnl Needed by sysdeps/mach/configure.in
diff --git a/patches/eglibc/2_18/100-make-4.patch b/patches/eglibc/2_18/100-make-4.patch
deleted file mode 100644
index 74a9cf7..0000000
--- a/patches/eglibc/2_18/100-make-4.patch
+++ /dev/null
@@ -1,24 +0,0 @@
-diff -urN eglibc-2_18.orig/configure eglibc-2_18/configure
---- eglibc-2_18.orig/configure	2013-12-07 17:39:02.482532200 +0000
-+++ eglibc-2_18/configure	2013-12-07 17:40:10.835441800 +0000
-@@ -4772,7 +4772,7 @@
-   ac_prog_version=`$MAKE --version 2>&1 | sed -n 's/^.*GNU Make[^0-9]*\([0-9][0-9.]*\).*$/\1/p'`
-   case $ac_prog_version in
-     '') ac_prog_version="v. ?.??, bad"; ac_verc_fail=yes;;
--    3.79* | 3.[89]*)
-+    3.79* | 3.[89]* | 4.*)
-        ac_prog_version="$ac_prog_version, ok"; ac_verc_fail=no;;
-     *) ac_prog_version="$ac_prog_version, bad"; ac_verc_fail=yes;;
- 
-diff -urN eglibc-2_18.orig/configure.in eglibc-2_18/configure.in
---- eglibc-2_18.orig/configure.in	2013-12-07 17:39:02.484532400 +0000
-+++ eglibc-2_18/configure.in	2013-12-07 17:40:10.839442000 +0000
-@@ -989,7 +989,7 @@
-   critic_missing="$critic_missing gcc")
- AC_CHECK_PROG_VER(MAKE, gnumake gmake make, --version,
-   [GNU Make[^0-9]*\([0-9][0-9.]*\)],
--  [3.79* | 3.[89]*], critic_missing="$critic_missing make")
-+  [3.79* | 3.[89]* | 4.*], critic_missing="$critic_missing make")
- 
- AC_CHECK_PROG_VER(MSGFMT, gnumsgfmt gmsgfmt msgfmt, --version,
-   [GNU gettext.* \([0-9]*\.[0-9.]*\)],
diff --git a/patches/eglibc/2_18/110-Fix-crossrpc-to-build-on-non-Linux.patch b/patches/eglibc/2_18/110-Fix-crossrpc-to-build-on-non-Linux.patch
deleted file mode 100644
index 9a0440e..0000000
--- a/patches/eglibc/2_18/110-Fix-crossrpc-to-build-on-non-Linux.patch
+++ /dev/null
@@ -1,251 +0,0 @@
-diff -urN a/sunrpc/rpc/types.h b/sunrpc/rpc/types.h
---- a/sunrpc/rpc/types.h	2013-12-15 14:25:49.275123500 +0000
-+++ b/sunrpc/rpc/types.h	2013-12-15 14:26:20.677919600 +0000
-@@ -69,6 +69,7 @@
- #include <sys/types.h>
- #endif
- 
-+#ifdef __linux__
- #ifndef __u_char_defined
- typedef __u_char u_char;
- typedef __u_short u_short;
-@@ -84,11 +85,14 @@
- typedef __caddr_t caddr_t;
- # define __daddr_t_defined
- #endif
-+#endif
- 
- #include <sys/time.h>
- #include <sys/param.h>
- 
-+#ifndef _WIN32
- #include <netinet/in.h>
-+#endif
- 
- #ifndef INADDR_LOOPBACK
- #define       INADDR_LOOPBACK         (u_long)0x7F000001
-diff -urN a/sunrpc/rpc_main.c b/sunrpc/rpc_main.c
---- a/sunrpc/rpc_main.c	2013-12-15 14:25:49.285124000 +0000
-+++ b/sunrpc/rpc_main.c	2013-12-15 14:26:29.327414300 +0000
-@@ -38,14 +38,20 @@
- #include <stdio.h>
- #include <string.h>
- #include <unistd.h>
-+#ifndef IS_IN_build
- #include <libintl.h>
-+#endif
- #include <locale.h>
- #include <ctype.h>
- #include <sys/types.h>
- #include <sys/param.h>
- #include <sys/file.h>
- #include <sys/stat.h>
-+#ifndef _WIN32
- #include <sys/wait.h>
-+#else
-+#include <windows.h>
-+#endif
- #include "rpc_parse.h"
- #include "rpc_util.h"
- #include "rpc_scan.h"
-@@ -54,6 +60,33 @@
- #include "../version.h"
- #define PACKAGE _libc_intl_domainname
- 
-+#ifdef _WIN32
-+#define rindex(_dest, _src) strrchr((_dest), (_src))
-+
-+char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src);
-+
-+char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src)
-+{
-+  if (src == NULL)
-+      return NULL;
-+  return strcpy(dest, src) + strlen(dest);
-+}
-+#endif /* _WIN32 */
-+
-+#if defined(_WIN32) || defined(__BSD__)
-+
-+char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len);
-+
-+char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len)
-+{
-+  size_t min_len = strlen(src);
-+  if (min_len > len)
-+    min_len = len;
-+  return strncpy(dest, src, len) + min_len;
-+}
-+
-+#endif /* defined(_WIN32) || defined(__BSD__) */
-+
- #define EXTEND	1		/* alias for TRUE */
- #define DONT_EXTEND	0	/* alias for FALSE */
- 
-@@ -81,7 +114,11 @@
- static const char *CPP = "/lib/cpp";
- static const char CPPFLAGS[] = "-C";
- static char *pathbuf;
-+#ifdef _WIN32
-+static HANDLE cpp_pid;
-+#else
- static int cpp_pid;
-+#endif
- static const char *allv[] =
- {
-   "rpcgen", "-s", "udp", "-s", "tcp"
-@@ -328,6 +365,20 @@
- {
-   struct stat64 buf;
- 
-+  /* Avoid trying to directly execute a bash script on Windows. */
-+#ifdef _WIN32
-+  char* CPPENVV = getenv("CPP");
-+  if (CPPENVV)
-+    {
-+      CPP = (char*)malloc(strlen(CPPENVV)+1);
-+      strcpy((char*)CPP, CPPENVV);
-+      /* Don't bother checking that it exists with stat64 as
-+       * we'd have to check in the path, also it usually ends
-+       * with a few arguments. */
-+      return;
-+    }
-+#endif
-+
-   if (stat64 (CPP, &buf) == 0)
-     return;
- 
-@@ -341,12 +392,125 @@
-   CPP = "cpp";
- }
- 
-+#ifdef _WIN32
- /*
-  * Open input file with given define for C-preprocessor
-  */
- static void
- open_input (const char *infile, const char *define)
- {
-+  int argi;
-+  int argcc = 0;
-+  LPSTR argsall;
-+  HANDLE StdOutHandle;
-+  HANDLE StdErrHandle;
-+  HANDLE ReadPipe;
-+  HANDLE WritePipe;
-+  SECURITY_ATTRIBUTES SecAttr;
-+  STARTUPINFO StartupInfo;
-+  PROCESS_INFORMATION ProcessInfo;
-+  DWORD Status;
-+
-+  find_cpp ();
-+  putarg (0, CPP);
-+  putarg (1, CPPFLAGS);
-+  addarg (define);
-+  if (infile)
-+    addarg (infile);
-+  addarg ((char *) NULL);
-+  for (argi = 0; argi < argcount - 1; ++argi)
-+    {
-+      argcc += strlen(arglist[argi])+2;
-+    }
-+  argsall = (LPSTR)alloca(argcc + 1);
-+  if (!argsall)
-+    {
-+      fprintf (stderr, _ ("cannot alloca for argsall\n"));
-+      exit (1);
-+    }
-+  argsall[0] = '\0';
-+  for (argi = 0; argi < argcount - 1; ++argi)
-+    {
-+      strcat((char*)argsall, arglist[argi]);
-+      strcat((char*)argsall, " ");
-+    }
-+
-+  memset(&SecAttr,     0, sizeof(SecAttr));
-+  memset(&StartupInfo, 0, sizeof(StartupInfo));
-+  memset(&ProcessInfo, 0, sizeof(ProcessInfo));
-+
-+  SecAttr.nLength = sizeof(SecAttr);
-+  SecAttr.bInheritHandle = TRUE;
-+
-+  Status = CreatePipe( &ReadPipe, &WritePipe, &SecAttr, 0 );
-+  if (!Status)
-+    {
-+      fprintf (stderr, _ ("cannot CreatePipe: GetLastError() -> %d\n"), GetLastError());
-+      exit (1);
-+    }
-+
-+  SetHandleInformation( ReadPipe, HANDLE_FLAG_INHERIT, 0 );
-+
-+  /*
-+  StdOutHandle = GetStdHandle( STD_OUTPUT_HANDLE );
-+  StdErrHandle = GetStdHandle( STD_ERROR_HANDLE );
-+  if (StdOutHandle != INVALID_HANDLE_VALUE) {
-+      SetHandleInformation( StdOutHandle, HANDLE_FLAG_INHERIT, 0 );
-+  }
-+  if (StdErrHandle != INVALID_HANDLE_VALUE) {
-+      SetHandleInformation( StdErrHandle, HANDLE_FLAG_INHERIT, 0 );
-+  }
-+  */
-+
-+  StartupInfo.cb         = sizeof(StartupInfo);
-+  StartupInfo.hStdInput  = GetStdHandle( STD_INPUT_HANDLE );
-+  StartupInfo.hStdOutput = WritePipe;
-+  StartupInfo.hStdError  = GetStdHandle( STD_ERROR_HANDLE );
-+  StartupInfo.dwFlags    = STARTF_USESTDHANDLES;
-+
-+  Status = CreateProcess(
-+          NULL,           /* lpApplicationName */
-+          argsall,        /* lpCommandLine */
-+          NULL,           /* lpProcessAttributes */
-+          NULL,           /* lpThreadAttributes */
-+          TRUE,           /* bInheritHandles */
-+          0,              /* dwCreationFlags */
-+          NULL,           /* lpEnvironment */
-+          NULL,           /* lpCurrentDirectory */
-+          &StartupInfo,   /* lpStartupInfo */
-+          &ProcessInfo ); /* lpProcessInformation */
-+
-+  CloseHandle( WritePipe );
-+  if (!Status)
-+    {
-+      fprintf (stderr, _ ("cannot find C preprocessor: %s, GetLastError() -> %d\n"), CPP, GetLastError());
-+      exit (1);
-+    }
-+  int fd = _open_osfhandle((intptr_t)ReadPipe, _O_APPEND | _O_RDONLY);
-+  if(fd != -1)
-+    {
-+      fin = _fdopen(fd, "a+");
-+    }
-+  cpp_pid = ProcessInfo.hProcess;
-+}
-+
-+/* Close the connection to the C-preprocessor and check for successfull
-+   termination.  */
-+static void
-+close_input (void)
-+{
-+  WaitForSingleObject(cpp_pid, INFINITE);
-+}
-+
-+#else
-+
-+/*
-+ * Open input file with given define for C-preprocessor
-+ */
-+
-+static void
-+open_input (const char *infile, const char *define)
-+{
-   int pd[2];
- 
-   infilename = (infile == NULL) ? "<stdin>" : infile;
-@@ -416,6 +580,7 @@
-       crash ();
-     }
- }
-+#endif
- 
- /* valid tirpc nettypes */
- static const char *valid_ti_nettypes[] =
diff --git a/patches/eglibc/2_18/120-MSYS-Hack-elf-librtld.mk-gen.patch b/patches/eglibc/2_18/120-MSYS-Hack-elf-librtld.mk-gen.patch
deleted file mode 100644
index eb91b6d..0000000
--- a/patches/eglibc/2_18/120-MSYS-Hack-elf-librtld.mk-gen.patch
+++ /dev/null
@@ -1,61 +0,0 @@
---- eglibc-2_18/elf/Makefile.orig	2013-06-15 18:37:04.000000000 +0100
-+++ eglibc-2_18/elf/Makefile	2013-12-27 21:44:06.625816100 +0000
-@@ -63,6 +63,14 @@
- ld-map		= $(common-objpfx)ld.map
- # eglibc: endif
- 
-+# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
-+uname_o := $(shell uname -o)
-+ifneq (, $(findstring Msys, $(uname_o)))
-+common-objpfxh = $(shell cd $(common-objpfx); pwd -W)/
-+else
-+common-objpfxh = $(common-objpfx)
-+endif
-+
- ifeq (yes,$(build-shared))
- extra-objs	= $(all-rtld-routines:%=%.os) soinit.os sofini.os interp.os
- generated	+= librtld.os dl-allobjs.os ld.so ldd
-@@ -287,15 +295,15 @@
- 
- $(objpfx)librtld.mk: $(objpfx)librtld.map Makefile
- 	LC_ALL=C \
--	sed -n 's@^$(common-objpfx)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
-+	sed -n 's@^$(common-objpfxh)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
- 	    $< | \
- 	while read lib file; do \
- 	  case $$lib in \
- 	  libc_pic.a) \
- 	    LC_ALL=C fgrep -l /$$file \
--		  $(common-objpfx)stamp.os $(common-objpfx)*/stamp.os | \
-+		  $(common-objpfxh)stamp.os $(common-objpfxh)*/stamp.os | \
- 	    LC_ALL=C \
--	    sed 's@^$(common-objpfx)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
-+	    sed 's@^$(common-objpfxh)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
- 	    ;; \
- 	  */*.a) \
- 	    echo rtld-$${lib%%/*} += $$file ;; \
-diff -urN a/elf/Makerules b/elf/Makerules
---- a/Makerules	2014-02-21 22:05:14.105893700 +0000
-+++ b/Makerules	2014-02-22 01:05:14.435886700 +0000
-@@ -373,11 +373,19 @@
- mv -f $(@:.d=.T) $@ $(generate-md5)
- endef
- 
-+# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
-+uname_o := $(shell uname -o)
-+ifneq (, $(findstring Msys, $(uname_o)))
-+common-objpfxh = $(shell cd $(common-objpfx); pwd -W)/
-+else
-+common-objpfxh = $(common-objpfx)
-+endif
-+
- ifneq (,$(objpfx))
- # Continuation lines here are dangerous because they introduce spaces!
- define sed-remove-objpfx
---e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfx)))@ $$(common-objpfx)@g' \
---e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfx)))@$$(common-objpfx)@g'
-+-e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfxh)))@ $$(common-objpfxh)@g' \
-+-e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfxh)))@$$(common-objpfxh)@g'
- endef
- endif
- 
diff --git a/patches/eglibc/2_18/130-Rename-oS-to-oSTATIC-for-case-insensitive-fs.patch b/patches/eglibc/2_18/130-Rename-oS-to-oSTATIC-for-case-insensitive-fs.patch
deleted file mode 100644
index 30c17a9..0000000
--- a/patches/eglibc/2_18/130-Rename-oS-to-oSTATIC-for-case-insensitive-fs.patch
+++ /dev/null
@@ -1,238 +0,0 @@
-diff -urN a/extra-lib.mk b/extra-lib.mk
---- a/extra-lib.mk	2014-02-22 01:29:15.086826100 +0000
-+++ b/extra-lib.mk	2014-02-22 01:31:15.413105600 +0000
-@@ -13,7 +13,7 @@
- 
- ifneq (,$($(lib)-static-only-routines))
- ifneq (,$(filter yes%,$(build-shared)$($(lib).so-version)))
--object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oS)
-+object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oSTATIC)
- endif
- endif
- 
-@@ -31,7 +31,7 @@
- 
- # Add each flavor of library to the lists of things to build and install.
- install-lib += $(foreach o,$(object-suffixes-$(lib)),$(lib:lib%=$(libtype$o)))
--extra-objs += $(foreach o,$(filter-out .os .oS,$(object-suffixes-$(lib))),\
-+extra-objs += $(foreach o,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))),\
- 			$(patsubst %,%$o,$(filter-out \
- 					   $($(lib)-shared-only-routines),\
- 					   $(all-$(lib)-routines))))
-@@ -39,8 +39,8 @@
- extra-objs += $(patsubst %,%.os,$(filter-out $($(lib)-static-only-routines),\
- 					     $(all-$(lib)-routines)))
- endif
--ifneq (,$(filter .oS,$(object-suffixes-$(lib))))
--extra-objs += $(patsubst %,%.oS,$(filter $($(lib)-static-only-routines),\
-+ifneq (,$(filter .oSTATIC,$(object-suffixes-$(lib))))
-+extra-objs += $(patsubst %,%.oSTATIC,$(filter $($(lib)-static-only-routines),\
- 					 $(all-$(lib)-routines)))
- endif
- alltypes-$(lib) := $(foreach o,$(object-suffixes-$(lib)),\
-@@ -64,7 +64,7 @@
- 
- 
- # Use o-iterator.mk to generate a rule for each flavor of library.
--ifneq (,$(filter-out .os .oS,$(object-suffixes-$(lib))))
-+ifneq (,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))))
- define o-iterator-doit
- $(objpfx)$(patsubst %,$(libtype$o),$(lib:lib%=%)): \
-   $(patsubst %,$(objpfx)%$o,\
-@@ -72,7 +72,7 @@
- 			  $(all-$(lib)-routines))); \
- 	$$(build-extra-lib)
- endef
--object-suffixes-left = $(filter-out .os .oS,$(object-suffixes-$(lib)))
-+object-suffixes-left = $(filter-out .os .oSTATIC,$(object-suffixes-$(lib)))
- include $(patsubst %,$(..)o-iterator.mk,$(object-suffixes-left))
- endif
- 
-@@ -84,9 +84,9 @@
- 	$(build-extra-lib)
- endif
- 
--ifneq (,$(filter .oS,$(object-suffixes-$(lib))))
--$(objpfx)$(patsubst %,$(libtype.oS),$(lib:lib%=%)): \
--  $(patsubst %,$(objpfx)%.oS,\
-+ifneq (,$(filter .oSTATIC,$(object-suffixes-$(lib))))
-+$(objpfx)$(patsubst %,$(libtype.oSTATIC),$(lib:lib%=%)): \
-+  $(patsubst %,$(objpfx)%.oSTATIC,\
- 	     $(filter $($(lib)-static-only-routines),\
- 		      $(all-$(lib)-routines)))
- 	$(build-extra-lib)
-diff -urN a/Makeconfig b/Makeconfig
---- a/Makeconfig	2014-02-22 01:29:16.036946800 +0000
-+++ b/Makeconfig	2014-02-22 01:31:15.417106100 +0000
-@@ -469,7 +469,7 @@
- link-libc-tests-rpath-link = $(link-libc-rpath-link)
- endif
- link-libc-before-gnulib = $(common-objpfx)libc.so$(libc.so-version) \
--			  $(common-objpfx)$(patsubst %,$(libtype.oS),c) \
-+			  $(common-objpfx)$(patsubst %,$(libtype.oSTATIC),c) \
- 			  $(as-needed) $(common-objpfx)elf/ld.so \
- 			  $(no-as-needed)
- link-libc = $(link-libc-rpath-link) $(link-libc-before-gnulib) $(gnulib)
-@@ -813,7 +813,7 @@
- # The compilation rules use $(CPPFLAGS-${SUFFIX}) and $(CFLAGS-${SUFFIX})
- # to pass different flags for each flavor.
- libtypes = $(foreach o,$(object-suffixes-for-libc),$(libtype$o))
--all-object-suffixes := .o .os .op .og .oS
-+all-object-suffixes := .o .os .op .og .oSTATIC
- object-suffixes :=
- CPPFLAGS-.o = $(pic-default)
- CFLAGS-.o = $(filter %frame-pointer,$(+cflags))
-@@ -852,14 +852,14 @@
- 
- ifeq (yes,$(build-shared))
- # Build special library that contains the static-only routines for libc.
--object-suffixes-for-libc += .oS
-+object-suffixes-for-libc += .oSTATIC
- 
- # Must build the routines as PIC, though, because they can end up in (users')
- # shared objects.  We don't want to use CFLAGS-os because users may, for
- # example, make that processor-specific.
--CFLAGS-.oS = $(CFLAGS-.o) $(PIC-ccflag)
--CPPFLAGS-.oS = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
--libtype.oS = lib%_nonshared.a
-+CFLAGS-.oSTATIC = $(CFLAGS-.o) $(PIC-ccflag)
-+CPPFLAGS-.oSTATIC = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
-+libtype.oSTATIC = lib%_nonshared.a
- endif
- 
- # The assembler can generate debug information too.
-diff -urN a/Makerules b/Makerules
---- a/Makerules	2014-02-22 01:31:53.861988000 +0000
-+++ b/Makerules	2014-02-22 01:31:15.439609000 +0000
-@@ -162,14 +162,14 @@
- # We only generate these in the top-level makefile, to avoid any weirdness
- # from subdir-specific makefile tweaks creeping in on an update.
- $(common-objpfx)%.make: $(..)%.make.c $(..)Makerules $(common-before-compile)
--	rm -f $@T $@.dT
-+	rm -f $@T $@.dTEMP
- 	(echo '# Generated from $*.make.c by Makerules.'; \
- 	 $(CC) $(CFLAGS) $(CPPFLAGS) -E -DASSEMBLER $< \
--	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dT \
-+	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dTEMP \
- 	 | sed -n '/@@@/{s/@@@[	 ]*\(.*\)@@@/\1/;s/[	 ]*$$//p;}'; \
- 	 echo 'common-generated += $(@F)'; \
--	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dT; \
--	 rm -f $@.dT) > $@T
-+	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dTEMP; \
-+	 rm -f $@.dTEMP) > $@T
- 	mv -f $@T $@
- endif
- 
-@@ -417,7 +417,7 @@
- endif
- endif
- 
--elide-routines.oS += $(filter-out $(static-only-routines),\
-+elide-routines.oSTATIC += $(filter-out $(static-only-routines),\
- 				  $(routines) $(aux) $(sysdep_routines))
- elide-routines.os += $(static-only-routines)
- 
-@@ -670,7 +670,7 @@
- 
- +depfiles := $(sources:.c=.d) \
- 	     $(patsubst %.o,%.d,$(filter %.o,$(extra-objs:.os=.o))) \
--	     $(patsubst %.oS,%.d,$(filter %.oS,$(extra-objs))) \
-+	     $(patsubst %.oSTATIC,%.d,$(filter %.oSTATIC,$(extra-objs))) \
- 	     $(patsubst %.o,%.d,$(filter %.o,$(extra-test-objs:.os=.o))) \
- 	     $(addsuffix .d,$(tests) $(xtests) $(test-srcs))
- ifeq ($(build-programs),yes)
-@@ -978,7 +978,7 @@
- install: $(inst_libdir)/libc.so
- $(inst_libdir)/libc.so: $(common-objpfx)format.lds \
- 			$(common-objpfx)libc.so$(libc.so-version) \
--			$(inst_libdir)/$(patsubst %,$(libtype.oS),\
-+			$(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
- 						  $(libprefix)$(libc-name)) \
- 			$(+force)
- 	(echo '/* GNU ld script';\
-@@ -986,7 +986,7 @@
- 	 echo '   the static library, so try that secondarily.  */';\
- 	 cat $<; \
- 	 echo 'GROUP ( $(slibdir)/libc.so$(libc.so-version)' \
--	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)$(libc-name))'\
-+	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)$(libc-name))'\
- 	      ' AS_NEEDED (' $(rtlddir)/$(rtld-installed-name) ') )' \
- 	) > $@.new
- 	mv -f $@.new $@
-diff -urN a/nptl/Makefile b/nptl/Makefile
---- a/nptl/Makefile	2014-02-22 01:29:16.296479700 +0000
-+++ b/nptl/Makefile	2014-02-22 01:31:15.425607200 +0000
-@@ -399,7 +399,7 @@
- 
- $(inst_libdir)/libpthread.so: $(common-objpfx)format.lds \
- 			      $(objpfx)libpthread.so$(libpthread.so-version) \
--			      $(inst_libdir)/$(patsubst %,$(libtype.oS),\
-+			      $(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
- 							$(libprefix)pthread) \
- 			      $(+force)
- 	(echo '/* GNU ld script';\
-@@ -407,7 +407,7 @@
- 	 echo '   the static library, so try that secondarily.  */';\
- 	 cat $<; \
- 	 echo 'GROUP ( $(slibdir)/libpthread.so$(libpthread.so-version)' \
--	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)pthread)'\
-+	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)pthread)'\
- 	      ')' \
- 	) > $@.new
- 	mv -f $@.new $@
-diff -urN a/sysdeps/i386/i686/Makefile b/sysdeps/i386/i686/Makefile
---- a/sysdeps/i386/i686/Makefile	2014-02-22 01:29:19.359368700 +0000
-+++ b/sysdeps/i386/i686/Makefile	2014-02-22 01:31:15.428607600 +0000
-@@ -15,11 +15,11 @@
- CFLAGS-.os += -Wa,-mtune=i686
- CFLAGS-.op += -Wa,-mtune=i686
- CFLAGS-.og += -Wa,-mtune=i686
--CFLAGS-.oS += -Wa,-mtune=i686
-+CFLAGS-.oSTATIC += -Wa,-mtune=i686
- 
- ASFLAGS-.o += -Wa,-mtune=i686
- ASFLAGS-.os += -Wa,-mtune=i686
- ASFLAGS-.op += -Wa,-mtune=i686
- ASFLAGS-.og += -Wa,-mtune=i686
--ASFLAGS-.oS += -Wa,-mtune=i686
-+ASFLAGS-.oSTATIC += -Wa,-mtune=i686
- endif
-diff -urN a/sysdeps/ieee754/ldbl-opt/Makefile b/sysdeps/ieee754/ldbl-opt/Makefile
---- a/sysdeps/ieee754/ldbl-opt/Makefile	2014-02-22 01:29:19.919939800 +0000
-+++ b/sysdeps/ieee754/ldbl-opt/Makefile	2014-02-22 01:31:15.431107900 +0000
-@@ -49,7 +49,7 @@
- libnldbl-routines = $(libnldbl-calls:%=nldbl-%)
- libnldbl-inhibit-o = $(object-suffixes)
- libnldbl-static-only-routines = $(libnldbl-routines)
--extra-objs += $(addsuffix .oS, $(libnldbl-routines))
-+extra-objs += $(addsuffix .oSTATIC, $(libnldbl-routines))
- 
- CFLAGS-nldbl-acos.c = -fno-builtin-acosl
- CFLAGS-nldbl-acosh.c = -fno-builtin-acoshl
-diff -urN a/sysdeps/sparc/sparc32/sparcv9/Makefile b/sysdeps/sparc/sparc32/sparcv9/Makefile
---- a/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-02-22 01:29:21.106090500 +0000
-+++ b/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-02-22 01:31:15.433608200 +0000
-@@ -10,11 +10,11 @@
- ASFLAGS-.os += -Wa,-Av9d
- ASFLAGS-.op += -Wa,-Av9d
- ASFLAGS-.og += -Wa,-Av9d
--ASFLAGS-.oS += -Wa,-Av9d
-+ASFLAGS-.oSTATIC += -Wa,-Av9d
- else
- ASFLAGS-.o += -Wa,-Av9a
- ASFLAGS-.os += -Wa,-Av9a
- ASFLAGS-.op += -Wa,-Av9a
- ASFLAGS-.og += -Wa,-Av9a
--ASFLAGS-.oS += -Wa,-Av9a
-+ASFLAGS-.oSTATIC += -Wa,-Av9a
- endif
-diff -urN a/sysdeps/sparc/sparc64/Makefile b/sysdeps/sparc/sparc64/Makefile
---- a/sysdeps/sparc/sparc64/Makefile	2014-02-22 01:29:21.243107900 +0000
-+++ b/sysdeps/sparc/sparc64/Makefile	2014-02-22 01:31:15.436108500 +0000
-@@ -12,5 +12,5 @@
- ASFLAGS-.os += -Wa,-Av9d
- ASFLAGS-.op += -Wa,-Av9d
- ASFLAGS-.og += -Wa,-Av9d
--ASFLAGS-.oS += -Wa,-Av9d
-+ASFLAGS-.oSTATIC += -Wa,-Av9d
- endif
diff --git a/patches/eglibc/2_18/140-MSYS-Hack-force-ln-s.patch b/patches/eglibc/2_18/140-MSYS-Hack-force-ln-s.patch
deleted file mode 100644
index 162fc96..0000000
--- a/patches/eglibc/2_18/140-MSYS-Hack-force-ln-s.patch
+++ /dev/null
@@ -1,39 +0,0 @@
-diff -urN eglibc-2_18.orig/configure eglibc-2_18/configure
---- eglibc-2_18.orig/configure	2013-12-29 04:41:49.956790250 +0000
-+++ eglibc-2_18/configure	2013-12-29 04:49:01.706800479 +0000
-@@ -4473,6 +4473,16 @@
- $as_echo "no, using $LN_S" >&6; }
- fi
- 
-+# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
-+# eglibc, whereas cp -r doesn't.
-+case "$build_os" in
-+*mingw*)
-+  as_ln_s='ln -s'
-+  LN_S=$as_ln_s
-+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&5
-+$as_echo "$as_me: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&2;}
-+  ;;
-+esac
- 
- # Was a --with-binutils option given?
- if test -n "$path_binutils"; then
-diff -urN eglibc-2_18.orig/configure.in eglibc-2_18/configure.in
---- eglibc-2_18.orig/configure.in	2013-12-29 04:41:49.956790250 +0000
-+++ eglibc-2_18/configure.in	2013-12-29 04:48:51.569977047 +0000
-@@ -971,6 +971,15 @@
-   INSTALL='\$(..)./scripts/install-sh -c'
- fi
- AC_PROG_LN_S
-+# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
-+# eglibc, whereas cp -r doesn't.
-+case "$build_os" in
-+*mingw*)
-+  as_ln_s='ln -s'
-+  LN_S=$as_ln_s
-+  AC_MSG_WARN(Hacked as_ln_s and LN_S to 'ln -s' for MSYS2)
-+  ;;
-+esac
- 
- LIBC_PROG_BINUTILS
- 
diff --git a/patches/eglibc/2_18/200-make-4.patch b/patches/eglibc/2_18/200-make-4.patch
new file mode 100644
index 0000000..d79f59a
--- /dev/null
+++ b/patches/eglibc/2_18/200-make-4.patch
@@ -0,0 +1,24 @@
+diff -urN a/configure b/configure
+--- a/configure	2013-08-20 17:23:48.000000000 +0100
++++ b/configure	2014-02-23 13:43:10.412098300 +0000
+@@ -4772,7 +4772,7 @@
+   ac_prog_version=`$MAKE --version 2>&1 | sed -n 's/^.*GNU Make[^0-9]*\([0-9][0-9.]*\).*$/\1/p'`
+   case $ac_prog_version in
+     '') ac_prog_version="v. ?.??, bad"; ac_verc_fail=yes;;
+-    3.79* | 3.[89]*)
++    3.79* | 3.[89]* | 4.*)
+        ac_prog_version="$ac_prog_version, ok"; ac_verc_fail=no;;
+     *) ac_prog_version="$ac_prog_version, bad"; ac_verc_fail=yes;;
+ 
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2013-08-20 17:23:48.000000000 +0100
++++ b/configure.in	2014-02-23 13:43:10.414598700 +0000
+@@ -989,7 +989,7 @@
+   critic_missing="$critic_missing gcc")
+ AC_CHECK_PROG_VER(MAKE, gnumake gmake make, --version,
+   [GNU Make[^0-9]*\([0-9][0-9.]*\)],
+-  [3.79* | 3.[89]*], critic_missing="$critic_missing make")
++  [3.79* | 3.[89]* | 4.*], critic_missing="$critic_missing make")
+ 
+ AC_CHECK_PROG_VER(MSGFMT, gnumsgfmt gmsgfmt msgfmt, --version,
+   [GNU gettext.* \([0-9]*\.[0-9.]*\)],
diff --git a/patches/eglibc/2_18/220-Fix-crossrpc-to-build-on-non-Linux.patch b/patches/eglibc/2_18/220-Fix-crossrpc-to-build-on-non-Linux.patch
new file mode 100644
index 0000000..c17fd1d
--- /dev/null
+++ b/patches/eglibc/2_18/220-Fix-crossrpc-to-build-on-non-Linux.patch
@@ -0,0 +1,248 @@
+diff -urN a/sunrpc/rpc/types.h b/sunrpc/rpc/types.h
+--- a/sunrpc/rpc/types.h	2014-02-23 13:43:19.424742800 +0000
++++ b/sunrpc/rpc/types.h	2014-02-23 13:43:28.907447000 +0000
+@@ -69,6 +69,7 @@
+ #include <sys/types.h>
+ #endif
+ 
++#ifdef __linux__
+ #ifndef __u_char_defined
+ typedef __u_char u_char;
+ typedef __u_short u_short;
+@@ -84,11 +85,14 @@
+ typedef __caddr_t caddr_t;
+ # define __daddr_t_defined
+ #endif
++#endif
+ 
+ #include <sys/time.h>
+ #include <sys/param.h>
+ 
++#ifndef _WIN32
+ #include <netinet/in.h>
++#endif
+ 
+ #ifndef INADDR_LOOPBACK
+ #define       INADDR_LOOPBACK         (u_long)0x7F000001
+diff -urN a/sunrpc/rpc_main.c b/sunrpc/rpc_main.c
+--- a/sunrpc/rpc_main.c	2014-02-23 13:43:19.433743900 +0000
++++ b/sunrpc/rpc_main.c	2014-02-23 13:43:28.910447300 +0000
+@@ -38,14 +38,20 @@
+ #include <stdio.h>
+ #include <string.h>
+ #include <unistd.h>
++#ifndef IS_IN_build
+ #include <libintl.h>
++#endif
+ #include <locale.h>
+ #include <ctype.h>
+ #include <sys/types.h>
+ #include <sys/param.h>
+ #include <sys/file.h>
+ #include <sys/stat.h>
++#ifndef _WIN32
+ #include <sys/wait.h>
++#else
++#include <windows.h>
++#endif
+ #include "rpc_parse.h"
+ #include "rpc_util.h"
+ #include "rpc_scan.h"
+@@ -54,6 +60,33 @@
+ #include "../version.h"
+ #define PACKAGE _libc_intl_domainname
+ 
++#ifdef _WIN32
++#define rindex(_dest, _src) strrchr((_dest), (_src))
++
++char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src);
++
++char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src)
++{
++  if (src == NULL)
++      return NULL;
++  return strcpy(dest, src) + strlen(dest);
++}
++#endif /* _WIN32 */
++
++#if defined(_WIN32) || defined(__BSD__)
++
++char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len);
++
++char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len)
++{
++  size_t min_len = strlen(src);
++  if (min_len > len)
++    min_len = len;
++  return strncpy(dest, src, len) + min_len;
++}
++
++#endif /* defined(_WIN32) || defined(__BSD__) */
++
+ #define EXTEND	1		/* alias for TRUE */
+ #define DONT_EXTEND	0	/* alias for FALSE */
+ 
+@@ -81,7 +114,11 @@
+ static const char *CPP = "/lib/cpp";
+ static const char CPPFLAGS[] = "-C";
+ static char *pathbuf;
++#ifdef _WIN32
++static HANDLE cpp_pid;
++#else
+ static int cpp_pid;
++#endif
+ static const char *allv[] =
+ {
+   "rpcgen", "-s", "udp", "-s", "tcp"
+@@ -328,6 +365,20 @@
+ {
+   struct stat64 buf;
+ 
++  /* Avoid trying to directly execute a bash script on Windows. */
++#ifdef _WIN32
++  char* CPPENVV = getenv("CPP");
++  if (CPPENVV)
++    {
++      CPP = (char*)malloc(strlen(CPPENVV)+1);
++      strcpy((char*)CPP, CPPENVV);
++      /* Don't bother checking that it exists with stat64 as
++       * we'd have to check in the path, also it usually ends
++       * with a few arguments. */
++      return;
++    }
++#endif
++
+   if (stat64 (CPP, &buf) == 0)
+     return;
+ 
+@@ -341,9 +392,122 @@
+   CPP = "cpp";
+ }
+ 
++#ifdef _WIN32
++/*
++ * Open input file with given define for C-preprocessor
++ */
++static void
++open_input (const char *infile, const char *define)
++{
++  int argi;
++  int argcc = 0;
++  LPSTR argsall;
++  HANDLE StdOutHandle;
++  HANDLE StdErrHandle;
++  HANDLE ReadPipe;
++  HANDLE WritePipe;
++  SECURITY_ATTRIBUTES SecAttr;
++  STARTUPINFO StartupInfo;
++  PROCESS_INFORMATION ProcessInfo;
++  DWORD Status;
++
++  find_cpp ();
++  putarg (0, CPP);
++  putarg (1, CPPFLAGS);
++  addarg (define);
++  if (infile)
++    addarg (infile);
++  addarg ((char *) NULL);
++  for (argi = 0; argi < argcount - 1; ++argi)
++    {
++      argcc += strlen(arglist[argi])+2;
++    }
++  argsall = (LPSTR)alloca(argcc + 1);
++  if (!argsall)
++    {
++      fprintf (stderr, _ ("cannot alloca for argsall\n"));
++      exit (1);
++    }
++  argsall[0] = '\0';
++  for (argi = 0; argi < argcount - 1; ++argi)
++    {
++      strcat((char*)argsall, arglist[argi]);
++      strcat((char*)argsall, " ");
++    }
++
++  memset(&SecAttr,     0, sizeof(SecAttr));
++  memset(&StartupInfo, 0, sizeof(StartupInfo));
++  memset(&ProcessInfo, 0, sizeof(ProcessInfo));
++
++  SecAttr.nLength = sizeof(SecAttr);
++  SecAttr.bInheritHandle = TRUE;
++
++  Status = CreatePipe( &ReadPipe, &WritePipe, &SecAttr, 0 );
++  if (!Status)
++    {
++      fprintf (stderr, _ ("cannot CreatePipe: GetLastError() -> %d\n"), GetLastError());
++      exit (1);
++    }
++
++  SetHandleInformation( ReadPipe, HANDLE_FLAG_INHERIT, 0 );
++
++  /*
++  StdOutHandle = GetStdHandle( STD_OUTPUT_HANDLE );
++  StdErrHandle = GetStdHandle( STD_ERROR_HANDLE );
++  if (StdOutHandle != INVALID_HANDLE_VALUE) {
++      SetHandleInformation( StdOutHandle, HANDLE_FLAG_INHERIT, 0 );
++  }
++  if (StdErrHandle != INVALID_HANDLE_VALUE) {
++      SetHandleInformation( StdErrHandle, HANDLE_FLAG_INHERIT, 0 );
++  }
++  */
++
++  StartupInfo.cb         = sizeof(StartupInfo);
++  StartupInfo.hStdInput  = GetStdHandle( STD_INPUT_HANDLE );
++  StartupInfo.hStdOutput = WritePipe;
++  StartupInfo.hStdError  = GetStdHandle( STD_ERROR_HANDLE );
++  StartupInfo.dwFlags    = STARTF_USESTDHANDLES;
++
++  Status = CreateProcess(
++          NULL,           /* lpApplicationName */
++          argsall,        /* lpCommandLine */
++          NULL,           /* lpProcessAttributes */
++          NULL,           /* lpThreadAttributes */
++          TRUE,           /* bInheritHandles */
++          0,              /* dwCreationFlags */
++          NULL,           /* lpEnvironment */
++          NULL,           /* lpCurrentDirectory */
++          &StartupInfo,   /* lpStartupInfo */
++          &ProcessInfo ); /* lpProcessInformation */
++
++  CloseHandle( WritePipe );
++  if (!Status)
++    {
++      fprintf (stderr, _ ("cannot find C preprocessor: %s, GetLastError() -> %d\n"), CPP, GetLastError());
++      exit (1);
++    }
++  int fd = _open_osfhandle((intptr_t)ReadPipe, _O_APPEND | _O_RDONLY);
++  if(fd != -1)
++    {
++      fin = _fdopen(fd, "a+");
++    }
++  cpp_pid = ProcessInfo.hProcess;
++}
++
++/* Close the connection to the C-preprocessor and check for successfull
++   termination.  */
++static void
++close_input (void)
++{
++  WaitForSingleObject(cpp_pid, INFINITE);
++}
++
++#else
++
+ /*
+  * Open input file with given define for C-preprocessor
+  */
++
+ static void
+ open_input (const char *infile, const char *define)
+ {
+@@ -416,6 +580,7 @@
+       crash ();
+     }
+ }
++#endif
+ 
+ /* valid tirpc nettypes */
+ static const char *valid_ti_nettypes[] =
diff --git a/patches/eglibc/2_18/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch b/patches/eglibc/2_18/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
new file mode 100644
index 0000000..92e9993
--- /dev/null
+++ b/patches/eglibc/2_18/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
@@ -0,0 +1,118 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-02-23 13:43:34.233123200 +0000
++++ b/configure	2014-02-23 13:43:47.621823400 +0000
+@@ -624,6 +624,7 @@
+ libc_cv_gcc_static_libgcc
+ CXX_SYSINCLUDES
+ SYSINCLUDES
++sysheaders
+ AUTOCONF
+ NM
+ AWK
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-23 13:43:34.233623300 +0000
++++ b/configure.in	2014-02-23 13:43:47.624323700 +0000
+@@ -1056,6 +1056,7 @@
+     done
+   fi
+ fi
++AC_SUBST(sysheaders)
+ AC_SUBST(SYSINCLUDES)
+ AC_SUBST(CXX_SYSINCLUDES)
+ 
+diff -urN a/elf/Makefile b/elf/Makefile
+--- a/elf/Makefile	2014-02-23 13:43:34.424147500 +0000
++++ b/elf/Makefile	2014-02-23 13:43:47.626324000 +0000
+@@ -63,6 +63,15 @@
+ ld-map		= $(common-objpfx)ld.map
+ # eglibc: endif
+ 
++# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
++# suffix of w means Windows.
++uname_o := $(shell uname -o)
++ifneq (, $(findstring Msys, $(uname_o)))
++common-objpfxw = $(shell cd $(common-objpfx); pwd -W)/
++else
++common-objpfxw = $(common-objpfx)
++endif
++
+ ifeq (yes,$(build-shared))
+ extra-objs	= $(all-rtld-routines:%=%.os) soinit.os sofini.os interp.os
+ generated	+= librtld.os dl-allobjs.os ld.so ldd
+@@ -287,15 +296,15 @@
+ 
+ $(objpfx)librtld.mk: $(objpfx)librtld.map Makefile
+ 	LC_ALL=C \
+-	sed -n 's@^$(common-objpfx)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
++	sed -n 's@^$(common-objpfxw)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
+ 	    $< | \
+ 	while read lib file; do \
+ 	  case $$lib in \
+ 	  libc_pic.a) \
+ 	    LC_ALL=C fgrep -l /$$file \
+-		  $(common-objpfx)stamp.os $(common-objpfx)*/stamp.os | \
++		  $(common-objpfxw)stamp.os $(common-objpfxw)*/stamp.os | \
+ 	    LC_ALL=C \
+-	    sed 's@^$(common-objpfx)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
++	    sed 's@^$(common-objpfxw)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
+ 	    ;; \
+ 	  */*.a) \
+ 	    echo rtld-$${lib%%/*} += $$file ;; \
+diff -urN a/Makefile.in b/Makefile.in
+--- a/Makefile.in	2014-02-23 13:43:35.540289200 +0000
++++ b/Makefile.in	2014-02-23 13:43:47.627324100 +0000
+@@ -1,4 +1,5 @@
+ srcdir = @srcdir@
++sysheaders = @sysheaders@
+ 
+ # Uncomment the line below if you want to do parallel build.
+ # PARALLELMFLAGS = -j 4
+@@ -6,11 +7,11 @@
+ .PHONY: all install bench
+ 
+ all .DEFAULT:
+-	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` $@
++	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` sysheaders=$(sysheaders) $@
+ 
+ install:
+ 	LANGUAGE=C LC_ALL=C; export LANGUAGE LC_ALL; \
+-	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` $@
++	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` sysheaders=$(sysheaders) $@
+ 
+ bench bench-clean:
+ 	$(MAKE) -C $(srcdir)/benchtests $(PARALLELMFLAGS) objdir=`pwd` $@
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2014-02-23 13:43:35.540789300 +0000
++++ b/Makerules	2014-02-23 13:43:47.629324300 +0000
+@@ -373,11 +373,29 @@
+ mv -f $(@:.d=.T) $@ $(generate-md5)
+ endef
+ 
++# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
++# suffix of w means Windows, and m means MSYS2.
++uname_o := $(shell uname -o)
++sysroot = $(shell echo `$(CC) -print-file-name="include"`)
++ifneq (, $(findstring Msys, $(uname_o)))
++common-objpfxw = $(shell cd $(common-objpfx); pwd -W)/
++sysheadersw = $(shell cd $(sysheaders); pwd -W)
++sysrootm = $(shell cd $(sysroot); pwd)
++else
++common-objpfxw = $(common-objpfx)
++sysheadersw = $(sysheaders)
++sysrootm = $(sysroot)
++endif
++
+ ifneq (,$(objpfx))
+ # Continuation lines here are dangerous because they introduce spaces!
+ define sed-remove-objpfx
+--e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfx)))@ $$(common-objpfx)@g' \
+--e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfx)))@$$(common-objpfx)@g'
++-e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfxw)))@ $$(common-objpfx)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfxw)))@$$(common-objpfx)@g' \
++-e 's@ $(subst .,\.,$(subst @,\@,$(sysheadersw)))@ $(sysheaders)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(sysheadersw)))@$(sysheaders)@g' \
++-e 's@ $(subst .,\.,$(subst @,\@,$(sysroot)))@ $(sysrootm)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(sysroot)))@$(sysrootm)@g'
+ endef
+ endif
+ 
diff --git a/patches/eglibc/2_18/240-Rename-extensions-for-case-insensitive-fs.patch b/patches/eglibc/2_18/240-Rename-extensions-for-case-insensitive-fs.patch
new file mode 100644
index 0000000..0b852b8
--- /dev/null
+++ b/patches/eglibc/2_18/240-Rename-extensions-for-case-insensitive-fs.patch
@@ -0,0 +1,247 @@
+diff -urN a/extra-lib.mk b/extra-lib.mk
+--- a/extra-lib.mk	2014-04-27 01:35:35.609609300 +0100
++++ b/extra-lib.mk	2014-04-27 01:35:52.378568400 +0100
+@@ -13,7 +13,7 @@
+ 
+ ifneq (,$($(lib)-static-only-routines))
+ ifneq (,$(filter yes%,$(build-shared)$($(lib).so-version)))
+-object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oS)
++object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oSTATIC)
+ endif
+ endif
+ 
+@@ -31,7 +31,7 @@
+ 
+ # Add each flavor of library to the lists of things to build and install.
+ install-lib += $(foreach o,$(object-suffixes-$(lib)),$(lib:lib%=$(libtype$o)))
+-extra-objs += $(foreach o,$(filter-out .os .oS,$(object-suffixes-$(lib))),\
++extra-objs += $(foreach o,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))),\
+ 			$(patsubst %,%$o,$(filter-out \
+ 					   $($(lib)-shared-only-routines),\
+ 					   $(all-$(lib)-routines))))
+@@ -39,8 +39,8 @@
+ extra-objs += $(patsubst %,%.os,$(filter-out $($(lib)-static-only-routines),\
+ 					     $(all-$(lib)-routines)))
+ endif
+-ifneq (,$(filter .oS,$(object-suffixes-$(lib))))
+-extra-objs += $(patsubst %,%.oS,$(filter $($(lib)-static-only-routines),\
++ifneq (,$(filter .oSTATIC,$(object-suffixes-$(lib))))
++extra-objs += $(patsubst %,%.oSTATIC,$(filter $($(lib)-static-only-routines),\
+ 					 $(all-$(lib)-routines)))
+ endif
+ alltypes-$(lib) := $(foreach o,$(object-suffixes-$(lib)),\
+@@ -64,7 +64,7 @@
+ 
+ 
+ # Use o-iterator.mk to generate a rule for each flavor of library.
+-ifneq (,$(filter-out .os .oS,$(object-suffixes-$(lib))))
++ifneq (,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))))
+ define o-iterator-doit
+ $(objpfx)$(patsubst %,$(libtype$o),$(lib:lib%=%)): \
+   $(patsubst %,$(objpfx)%$o,\
+@@ -72,7 +72,7 @@
+ 			  $(all-$(lib)-routines))); \
+ 	$$(build-extra-lib)
+ endef
+-object-suffixes-left = $(filter-out .os .oS,$(object-suffixes-$(lib)))
++object-suffixes-left = $(filter-out .os .oSTATIC,$(object-suffixes-$(lib)))
+ include $(patsubst %,$(..)o-iterator.mk,$(object-suffixes-left))
+ endif
+ 
+@@ -84,9 +84,9 @@
+ 	$(build-extra-lib)
+ endif
+ 
+-ifneq (,$(filter .oS,$(object-suffixes-$(lib))))
+-$(objpfx)$(patsubst %,$(libtype.oS),$(lib:lib%=%)): \
+-  $(patsubst %,$(objpfx)%.oS,\
++ifneq (,$(filter .oSTATIC,$(object-suffixes-$(lib))))
++$(objpfx)$(patsubst %,$(libtype.oSTATIC),$(lib:lib%=%)): \
++  $(patsubst %,$(objpfx)%.oSTATIC,\
+ 	     $(filter $($(lib)-static-only-routines),\
+ 		      $(all-$(lib)-routines)))
+ 	$(build-extra-lib)
+diff -urN a/Makeconfig b/Makeconfig
+--- a/Makeconfig	2014-04-27 01:35:36.166641100 +0100
++++ b/Makeconfig	2014-04-27 01:35:52.402569800 +0100
+@@ -469,7 +469,7 @@
+ link-libc-tests-rpath-link = $(link-libc-rpath-link)
+ endif
+ link-libc-before-gnulib = $(common-objpfx)libc.so$(libc.so-version) \
+-			  $(common-objpfx)$(patsubst %,$(libtype.oS),c) \
++			  $(common-objpfx)$(patsubst %,$(libtype.oSTATIC),c) \
+ 			  $(as-needed) $(common-objpfx)elf/ld.so \
+ 			  $(no-as-needed)
+ link-libc = $(link-libc-rpath-link) $(link-libc-before-gnulib) $(gnulib)
+@@ -813,7 +813,7 @@
+ # The compilation rules use $(CPPFLAGS-${SUFFIX}) and $(CFLAGS-${SUFFIX})
+ # to pass different flags for each flavor.
+ libtypes = $(foreach o,$(object-suffixes-for-libc),$(libtype$o))
+-all-object-suffixes := .o .os .op .og .oS
++all-object-suffixes := .o .os .op .og .oSTATIC
+ object-suffixes :=
+ CPPFLAGS-.o = $(pic-default)
+ CFLAGS-.o = $(filter %frame-pointer,$(+cflags))
+@@ -852,14 +852,14 @@
+ 
+ ifeq (yes,$(build-shared))
+ # Build special library that contains the static-only routines for libc.
+-object-suffixes-for-libc += .oS
++object-suffixes-for-libc += .oSTATIC
+ 
+ # Must build the routines as PIC, though, because they can end up in (users')
+ # shared objects.  We don't want to use CFLAGS-os because users may, for
+ # example, make that processor-specific.
+-CFLAGS-.oS = $(CFLAGS-.o) $(PIC-ccflag)
+-CPPFLAGS-.oS = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
+-libtype.oS = lib%_nonshared.a
++CFLAGS-.oSTATIC = $(CFLAGS-.o) $(PIC-ccflag)
++CPPFLAGS-.oSTATIC = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
++libtype.oSTATIC = lib%_nonshared.a
+ endif
+ 
+ # The assembler can generate debug information too.
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2014-04-27 01:35:36.166641100 +0100
++++ b/Makerules	2014-04-27 01:36:20.014149100 +0100
+@@ -162,14 +162,14 @@
+ # We only generate these in the top-level makefile, to avoid any weirdness
+ # from subdir-specific makefile tweaks creeping in on an update.
+ $(common-objpfx)%.make: $(..)%.make.c $(..)Makerules $(common-before-compile)
+-	rm -f $@T $@.dT
++	rm -f $@T $@.dTEMP
+ 	(echo '# Generated from $*.make.c by Makerules.'; \
+ 	 $(CC) $(CFLAGS) $(CPPFLAGS) -E -DASSEMBLER $< \
+-	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dT \
++	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dTEMP \
+ 	 | sed -n '/@@@/{s/@@@[	 ]*\(.*\)@@@/\1/;s/[	 ]*$$//p;}'; \
+ 	 echo 'common-generated += $(@F)'; \
+-	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dT; \
+-	 rm -f $@.dT) > $@T
++	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dTEMP; \
++	 rm -f $@.dTEMP) > $@T
+ 	mv -f $@T $@
+ endif
+ 
+@@ -331,7 +331,7 @@
+ # eglibc: endif # $(versioning) = yes
+ endif # sysd-sorted-done
+ 
+-# Generate .dT files as we compile.
++# Generate .dTEMP files as we compile.
+ compile-mkdep-flags = -MD -MP -MF $@.dt -MT $@
+ compile-command.S = $(compile.S) $(OUTPUT_OPTION) $(compile-mkdep-flags)
+ compile-command.c = $(compile.c) $(OUTPUT_OPTION) $(compile-mkdep-flags)
+@@ -427,7 +427,7 @@
+ endif
+ endif
+ 
+-elide-routines.oS += $(filter-out $(static-only-routines),\
++elide-routines.oSTATIC += $(filter-out $(static-only-routines),\
+ 				  $(routines) $(aux) $(sysdep_routines))
+ elide-routines.os += $(static-only-routines)
+ 
+@@ -680,7 +680,7 @@
+ 
+ +depfiles := $(sources:.c=.d) \
+ 	     $(patsubst %.o,%.d,$(filter %.o,$(extra-objs:.os=.o))) \
+-	     $(patsubst %.oS,%.d,$(filter %.oS,$(extra-objs))) \
++	     $(patsubst %.oSTATIC,%.d,$(filter %.oSTATIC,$(extra-objs))) \
+ 	     $(patsubst %.o,%.d,$(filter %.o,$(extra-test-objs:.os=.o))) \
+ 	     $(addsuffix .d,$(tests) $(xtests) $(test-srcs))
+ ifeq ($(build-programs),yes)
+@@ -988,7 +988,7 @@
+ install: $(inst_libdir)/libc.so
+ $(inst_libdir)/libc.so: $(common-objpfx)format.lds \
+ 			$(common-objpfx)libc.so$(libc.so-version) \
+-			$(inst_libdir)/$(patsubst %,$(libtype.oS),\
++			$(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
+ 						  $(libprefix)$(libc-name)) \
+ 			$(+force)
+ 	(echo '/* GNU ld script';\
+@@ -996,7 +996,7 @@
+ 	 echo '   the static library, so try that secondarily.  */';\
+ 	 cat $<; \
+ 	 echo 'GROUP ( $(slibdir)/libc.so$(libc.so-version)' \
+-	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)$(libc-name))'\
++	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)$(libc-name))'\
+ 	      ' AS_NEEDED (' $(rtlddir)/$(rtld-installed-name) ') )' \
+ 	) > $@.new
+ 	mv -f $@.new $@
+diff -urN a/nptl/Makefile b/nptl/Makefile
+--- a/nptl/Makefile	2014-04-27 01:35:36.317649800 +0100
++++ b/nptl/Makefile	2014-04-27 01:35:52.406570000 +0100
+@@ -399,7 +399,7 @@
+ 
+ $(inst_libdir)/libpthread.so: $(common-objpfx)format.lds \
+ 			      $(objpfx)libpthread.so$(libpthread.so-version) \
+-			      $(inst_libdir)/$(patsubst %,$(libtype.oS),\
++			      $(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
+ 							$(libprefix)pthread) \
+ 			      $(+force)
+ 	(echo '/* GNU ld script';\
+@@ -407,7 +407,7 @@
+ 	 echo '   the static library, so try that secondarily.  */';\
+ 	 cat $<; \
+ 	 echo 'GROUP ( $(slibdir)/libpthread.so$(libpthread.so-version)' \
+-	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)pthread)'\
++	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)pthread)'\
+ 	      ')' \
+ 	) > $@.new
+ 	mv -f $@.new $@
+diff -urN a/sysdeps/i386/i686/Makefile b/sysdeps/i386/i686/Makefile
+--- a/sysdeps/i386/i686/Makefile	2014-04-27 01:35:42.426999200 +0100
++++ b/sysdeps/i386/i686/Makefile	2014-04-27 01:35:52.407570100 +0100
+@@ -15,11 +15,11 @@
+ CFLAGS-.os += -Wa,-mtune=i686
+ CFLAGS-.op += -Wa,-mtune=i686
+ CFLAGS-.og += -Wa,-mtune=i686
+-CFLAGS-.oS += -Wa,-mtune=i686
++CFLAGS-.oSTATIC += -Wa,-mtune=i686
+ 
+ ASFLAGS-.o += -Wa,-mtune=i686
+ ASFLAGS-.os += -Wa,-mtune=i686
+ ASFLAGS-.op += -Wa,-mtune=i686
+ ASFLAGS-.og += -Wa,-mtune=i686
+-ASFLAGS-.oS += -Wa,-mtune=i686
++ASFLAGS-.oSTATIC += -Wa,-mtune=i686
+ endif
+diff -urN a/sysdeps/ieee754/ldbl-opt/Makefile b/sysdeps/ieee754/ldbl-opt/Makefile
+--- a/sysdeps/ieee754/ldbl-opt/Makefile	2014-04-27 01:35:42.612009800 +0100
++++ b/sysdeps/ieee754/ldbl-opt/Makefile	2014-04-27 01:35:52.408570100 +0100
+@@ -49,7 +49,7 @@
+ libnldbl-routines = $(libnldbl-calls:%=nldbl-%)
+ libnldbl-inhibit-o = $(object-suffixes)
+ libnldbl-static-only-routines = $(libnldbl-routines)
+-extra-objs += $(addsuffix .oS, $(libnldbl-routines))
++extra-objs += $(addsuffix .oSTATIC, $(libnldbl-routines))
+ 
+ CFLAGS-nldbl-acos.c = -fno-builtin-acosl
+ CFLAGS-nldbl-acosh.c = -fno-builtin-acoshl
+diff -urN a/sysdeps/sparc/sparc32/sparcv9/Makefile b/sysdeps/sparc/sparc32/sparcv9/Makefile
+--- a/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-04-27 01:35:42.956029500 +0100
++++ b/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-04-27 01:35:52.409570200 +0100
+@@ -10,11 +10,11 @@
+ ASFLAGS-.os += -Wa,-Av9d
+ ASFLAGS-.op += -Wa,-Av9d
+ ASFLAGS-.og += -Wa,-Av9d
+-ASFLAGS-.oS += -Wa,-Av9d
++ASFLAGS-.oSTATIC += -Wa,-Av9d
+ else
+ ASFLAGS-.o += -Wa,-Av9a
+ ASFLAGS-.os += -Wa,-Av9a
+ ASFLAGS-.op += -Wa,-Av9a
+ ASFLAGS-.og += -Wa,-Av9a
+-ASFLAGS-.oS += -Wa,-Av9a
++ASFLAGS-.oSTATIC += -Wa,-Av9a
+ endif
+diff -urN a/sysdeps/sparc/sparc64/Makefile b/sysdeps/sparc/sparc64/Makefile
+--- a/sysdeps/sparc/sparc64/Makefile	2014-04-27 01:35:42.993031600 +0100
++++ b/sysdeps/sparc/sparc64/Makefile	2014-04-27 01:35:52.410570200 +0100
+@@ -12,5 +12,5 @@
+ ASFLAGS-.os += -Wa,-Av9d
+ ASFLAGS-.op += -Wa,-Av9d
+ ASFLAGS-.og += -Wa,-Av9d
+-ASFLAGS-.oS += -Wa,-Av9d
++ASFLAGS-.oSTATIC += -Wa,-Av9d
+ endif
diff --git a/patches/eglibc/2_18/250-MSYS-Hack-force-ln-s.patch b/patches/eglibc/2_18/250-MSYS-Hack-force-ln-s.patch
new file mode 100644
index 0000000..d130e35
--- /dev/null
+++ b/patches/eglibc/2_18/250-MSYS-Hack-force-ln-s.patch
@@ -0,0 +1,39 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-02-23 13:44:11.481353200 +0000
++++ b/configure	2014-02-23 13:44:24.722534600 +0000
+@@ -4474,6 +4474,16 @@
+ $as_echo "no, using $LN_S" >&6; }
+ fi
+ 
++# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
++# eglibc, whereas cp -r doesn't.
++case "$build_os" in
++*mingw*)
++  as_ln_s='ln -s'
++  LN_S=$as_ln_s
++  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&5
++$as_echo "$as_me: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&2;}
++  ;;
++esac
+ 
+ # Was a --with-binutils option given?
+ if test -n "$path_binutils"; then
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-23 13:44:11.481853200 +0000
++++ b/configure.in	2014-02-23 13:44:24.726035000 +0000
+@@ -971,6 +971,15 @@
+   INSTALL='\$(..)./scripts/install-sh -c'
+ fi
+ AC_PROG_LN_S
++# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
++# eglibc, whereas cp -r doesn't.
++case "$build_os" in
++*mingw*)
++  as_ln_s='ln -s'
++  LN_S=$as_ln_s
++  AC_MSG_WARN(Hacked as_ln_s and LN_S to 'ln -s' for MSYS2)
++  ;;
++esac
+ 
+ LIBC_PROG_BINUTILS
+ 
diff --git a/patches/eglibc/2_19/220-Fix-crossrpc-to-build-on-non-Linux.patch b/patches/eglibc/2_19/220-Fix-crossrpc-to-build-on-non-Linux.patch
new file mode 100644
index 0000000..5ff2b16
--- /dev/null
+++ b/patches/eglibc/2_19/220-Fix-crossrpc-to-build-on-non-Linux.patch
@@ -0,0 +1,248 @@
+diff -urN a/sunrpc/rpc/types.h b/sunrpc/rpc/types.h
+--- a/sunrpc/rpc/types.h	2013-10-18 22:33:25.000000000 +0100
++++ b/sunrpc/rpc/types.h	2014-04-27 01:42:33.526512800 +0100
+@@ -74,6 +74,7 @@
+ # define __daddr_t_defined
+ #endif
+ 
++#ifdef __linux__
+ #ifndef __u_char_defined
+ typedef __u_char u_char;
+ typedef __u_short u_short;
+@@ -89,11 +90,14 @@
+ typedef __caddr_t caddr_t;
+ # define __daddr_t_defined
+ #endif
++#endif
+ 
+ #include <sys/time.h>
+ #include <sys/param.h>
+ 
++#ifndef _WIN32
+ #include <netinet/in.h>
++#endif
+ 
+ #ifndef INADDR_LOOPBACK
+ #define       INADDR_LOOPBACK         (u_long)0x7F000001
+diff -urN a/sunrpc/rpc_main.c b/sunrpc/rpc_main.c
+--- a/sunrpc/rpc_main.c	2013-11-06 23:03:08.000000000 +0000
++++ b/sunrpc/rpc_main.c	2014-04-27 01:42:33.534513200 +0100
+@@ -38,14 +38,20 @@
+ #include <stdio.h>
+ #include <string.h>
+ #include <unistd.h>
++#ifndef IS_IN_build
+ #include <libintl.h>
++#endif
+ #include <locale.h>
+ #include <ctype.h>
+ #include <sys/types.h>
+ #include <sys/param.h>
+ #include <sys/file.h>
+ #include <sys/stat.h>
++#ifndef _WIN32
+ #include <sys/wait.h>
++#else
++#include <windows.h>
++#endif
+ #include "rpc_parse.h"
+ #include "rpc_util.h"
+ #include "rpc_scan.h"
+@@ -54,6 +60,33 @@
+ #include "../version.h"
+ #define PACKAGE _libc_intl_domainname
+ 
++#ifdef _WIN32
++#define rindex(_dest, _src) strrchr((_dest), (_src))
++
++char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src);
++
++char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src)
++{
++  if (src == NULL)
++      return NULL;
++  return strcpy(dest, src) + strlen(dest);
++}
++#endif /* _WIN32 */
++
++#if defined(_WIN32) || defined(__BSD__)
++
++char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len);
++
++char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len)
++{
++  size_t min_len = strlen(src);
++  if (min_len > len)
++    min_len = len;
++  return strncpy(dest, src, len) + min_len;
++}
++
++#endif /* defined(_WIN32) || defined(__BSD__) */
++
+ #define EXTEND	1		/* alias for TRUE */
+ #define DONT_EXTEND	0	/* alias for FALSE */
+ 
+@@ -81,7 +114,11 @@
+ static const char *CPP = "/lib/cpp";
+ static const char CPPFLAGS[] = "-C";
+ static char *pathbuf;
++#ifdef _WIN32
++static HANDLE cpp_pid;
++#else
+ static int cpp_pid;
++#endif
+ static const char *allv[] =
+ {
+   "rpcgen", "-s", "udp", "-s", "tcp"
+@@ -328,6 +365,20 @@
+ {
+   struct stat64 buf;
+ 
++  /* Avoid trying to directly execute a bash script on Windows. */
++#ifdef _WIN32
++  char* CPPENVV = getenv("CPP");
++  if (CPPENVV)
++    {
++      CPP = (char*)malloc(strlen(CPPENVV)+1);
++      strcpy((char*)CPP, CPPENVV);
++      /* Don't bother checking that it exists with stat64 as
++       * we'd have to check in the path, also it usually ends
++       * with a few arguments. */
++      return;
++    }
++#endif
++
+   if (stat64 (CPP, &buf) == 0)
+     return;
+ 
+@@ -341,9 +392,122 @@
+   CPP = "cpp";
+ }
+ 
++#ifdef _WIN32
++/*
++ * Open input file with given define for C-preprocessor
++ */
++static void
++open_input (const char *infile, const char *define)
++{
++  int argi;
++  int argcc = 0;
++  LPSTR argsall;
++  HANDLE StdOutHandle;
++  HANDLE StdErrHandle;
++  HANDLE ReadPipe;
++  HANDLE WritePipe;
++  SECURITY_ATTRIBUTES SecAttr;
++  STARTUPINFO StartupInfo;
++  PROCESS_INFORMATION ProcessInfo;
++  DWORD Status;
++
++  find_cpp ();
++  putarg (0, CPP);
++  putarg (1, CPPFLAGS);
++  addarg (define);
++  if (infile)
++    addarg (infile);
++  addarg ((char *) NULL);
++  for (argi = 0; argi < argcount - 1; ++argi)
++    {
++      argcc += strlen(arglist[argi])+2;
++    }
++  argsall = (LPSTR)alloca(argcc + 1);
++  if (!argsall)
++    {
++      fprintf (stderr, _ ("cannot alloca for argsall\n"));
++      exit (1);
++    }
++  argsall[0] = '\0';
++  for (argi = 0; argi < argcount - 1; ++argi)
++    {
++      strcat((char*)argsall, arglist[argi]);
++      strcat((char*)argsall, " ");
++    }
++
++  memset(&SecAttr,     0, sizeof(SecAttr));
++  memset(&StartupInfo, 0, sizeof(StartupInfo));
++  memset(&ProcessInfo, 0, sizeof(ProcessInfo));
++
++  SecAttr.nLength = sizeof(SecAttr);
++  SecAttr.bInheritHandle = TRUE;
++
++  Status = CreatePipe( &ReadPipe, &WritePipe, &SecAttr, 0 );
++  if (!Status)
++    {
++      fprintf (stderr, _ ("cannot CreatePipe: GetLastError() -> %d\n"), GetLastError());
++      exit (1);
++    }
++
++  SetHandleInformation( ReadPipe, HANDLE_FLAG_INHERIT, 0 );
++
++  /*
++  StdOutHandle = GetStdHandle( STD_OUTPUT_HANDLE );
++  StdErrHandle = GetStdHandle( STD_ERROR_HANDLE );
++  if (StdOutHandle != INVALID_HANDLE_VALUE) {
++      SetHandleInformation( StdOutHandle, HANDLE_FLAG_INHERIT, 0 );
++  }
++  if (StdErrHandle != INVALID_HANDLE_VALUE) {
++      SetHandleInformation( StdErrHandle, HANDLE_FLAG_INHERIT, 0 );
++  }
++  */
++
++  StartupInfo.cb         = sizeof(StartupInfo);
++  StartupInfo.hStdInput  = GetStdHandle( STD_INPUT_HANDLE );
++  StartupInfo.hStdOutput = WritePipe;
++  StartupInfo.hStdError  = GetStdHandle( STD_ERROR_HANDLE );
++  StartupInfo.dwFlags    = STARTF_USESTDHANDLES;
++
++  Status = CreateProcess(
++          NULL,           /* lpApplicationName */
++          argsall,        /* lpCommandLine */
++          NULL,           /* lpProcessAttributes */
++          NULL,           /* lpThreadAttributes */
++          TRUE,           /* bInheritHandles */
++          0,              /* dwCreationFlags */
++          NULL,           /* lpEnvironment */
++          NULL,           /* lpCurrentDirectory */
++          &StartupInfo,   /* lpStartupInfo */
++          &ProcessInfo ); /* lpProcessInformation */
++
++  CloseHandle( WritePipe );
++  if (!Status)
++    {
++      fprintf (stderr, _ ("cannot find C preprocessor: %s, GetLastError() -> %d\n"), CPP, GetLastError());
++      exit (1);
++    }
++  int fd = _open_osfhandle((intptr_t)ReadPipe, _O_APPEND | _O_RDONLY);
++  if(fd != -1)
++    {
++      fin = _fdopen(fd, "a+");
++    }
++  cpp_pid = ProcessInfo.hProcess;
++}
++
++/* Close the connection to the C-preprocessor and check for successfull
++   termination.  */
++static void
++close_input (void)
++{
++  WaitForSingleObject(cpp_pid, INFINITE);
++}
++
++#else
++
+ /*
+  * Open input file with given define for C-preprocessor
+  */
++
+ static void
+ open_input (const char *infile, const char *define)
+ {
+@@ -416,6 +580,7 @@
+       crash ();
+     }
+ }
++#endif
+ 
+ /* valid tirpc nettypes */
+ static const char *valid_ti_nettypes[] =
diff --git a/patches/eglibc/2_19/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch b/patches/eglibc/2_19/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
new file mode 100644
index 0000000..1bd383e
--- /dev/null
+++ b/patches/eglibc/2_19/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
@@ -0,0 +1,118 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-01-03 17:51:28.000000000 +0000
++++ b/configure	2014-04-27 01:44:19.856594500 +0100
+@@ -623,6 +623,7 @@
+ libc_cv_gcc_static_libgcc
+ CXX_SYSINCLUDES
+ SYSINCLUDES
++sysheaders
+ AUTOCONF
+ NM
+ AWK
+diff -urN a/configure.ac b/configure.ac
+--- a/configure.ac	2014-01-03 17:51:28.000000000 +0000
++++ b/configure.ac	2014-04-27 01:47:04.064986700 +0100
+@@ -1061,6 +1061,7 @@
+     done
+   fi
+ fi
++AC_SUBST(sysheaders)
+ AC_SUBST(SYSINCLUDES)
+ AC_SUBST(CXX_SYSINCLUDES)
+ 
+diff -urN a/elf/Makefile b/elf/Makefile
+--- a/elf/Makefile	2014-01-03 17:51:28.000000000 +0000
++++ b/elf/Makefile	2014-04-27 01:47:04.073987200 +0100
+@@ -63,6 +63,15 @@
+ ld-map		= $(common-objpfx)ld.map
+ endif
+ 
++# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
++# suffix of w means Windows.
++uname_o := $(shell uname -o)
++ifneq (, $(findstring Msys, $(uname_o)))
++common-objpfxw = $(shell cd $(common-objpfx); pwd -W)/
++else
++common-objpfxw = $(common-objpfx)
++endif
++
+ ifeq (yes,$(build-shared))
+ extra-objs	= $(all-rtld-routines:%=%.os) soinit.os sofini.os interp.os
+ generated	+= librtld.os dl-allobjs.os ld.so ldd
+@@ -290,15 +299,15 @@
+ 
+ $(objpfx)librtld.mk: $(objpfx)librtld.map Makefile
+ 	LC_ALL=C \
+-	sed -n 's@^$(common-objpfx)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
++	sed -n 's@^$(common-objpfxw)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
+ 	    $< | \
+ 	while read lib file; do \
+ 	  case $$lib in \
+ 	  libc_pic.a) \
+ 	    LC_ALL=C fgrep -l /$$file \
+-		  $(common-objpfx)stamp.os $(common-objpfx)*/stamp.os | \
++		  $(common-objpfxw)stamp.os $(common-objpfxw)*/stamp.os | \
+ 	    LC_ALL=C \
+-	    sed 's@^$(common-objpfx)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
++	    sed 's@^$(common-objpfxw)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
+ 	    ;; \
+ 	  */*.a) \
+ 	    echo rtld-$${lib%%/*} += $$file ;; \
+diff -urN a/Makefile.in b/Makefile.in
+--- a/Makefile.in	2013-04-28 16:21:50.000000000 +0100
++++ b/Makefile.in	2014-04-27 01:47:04.209995000 +0100
+@@ -1,4 +1,5 @@
+ srcdir = @srcdir@
++sysheaders = @sysheaders@
+ 
+ # Uncomment the line below if you want to do parallel build.
+ # PARALLELMFLAGS = -j 4
+@@ -6,11 +7,11 @@
+ .PHONY: all install bench
+ 
+ all .DEFAULT:
+-	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` $@
++	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` sysheaders=$(sysheaders) $@
+ 
+ install:
+ 	LANGUAGE=C LC_ALL=C; export LANGUAGE LC_ALL; \
+-	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` $@
++	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` sysheaders=$(sysheaders) $@
+ 
+ bench bench-clean:
+ 	$(MAKE) -C $(srcdir)/benchtests $(PARALLELMFLAGS) objdir=`pwd` $@
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2014-02-07 21:04:10.000000000 +0000
++++ b/Makerules	2014-04-27 01:47:04.215995300 +0100
+@@ -369,11 +369,29 @@
+ mv -f $(@:.d=.T) $@ $(generate-md5)
+ endef
+ 
++# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
++# suffix of w means Windows, and m means MSYS2.
++uname_o := $(shell uname -o)
++sysroot = $(shell echo `$(CC) -print-file-name="include"`)
++ifneq (, $(findstring Msys, $(uname_o)))
++common-objpfxw = $(shell cd $(common-objpfx); pwd -W)/
++sysheadersw = $(shell cd $(sysheaders); pwd -W)
++sysrootm = $(shell cd $(sysroot); pwd)
++else
++common-objpfxw = $(common-objpfx)
++sysheadersw = $(sysheaders)
++sysrootm = $(sysroot)
++endif
++
+ ifneq (,$(objpfx))
+ # Continuation lines here are dangerous because they introduce spaces!
+ define sed-remove-objpfx
+--e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfx)))@ $$(common-objpfx)@g' \
+--e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfx)))@$$(common-objpfx)@g'
++-e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfxw)))@ $$(common-objpfx)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfxw)))@$$(common-objpfx)@g' \
++-e 's@ $(subst .,\.,$(subst @,\@,$(sysheadersw)))@ $(sysheaders)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(sysheadersw)))@$(sysheaders)@g' \
++-e 's@ $(subst .,\.,$(subst @,\@,$(sysroot)))@ $(sysrootm)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(sysroot)))@$(sysrootm)@g'
+ endef
+ endif
+ 
diff --git a/patches/eglibc/2_19/240-Rename-extensions-for-case-insensitive-fs.patch b/patches/eglibc/2_19/240-Rename-extensions-for-case-insensitive-fs.patch
new file mode 100644
index 0000000..23c9527
--- /dev/null
+++ b/patches/eglibc/2_19/240-Rename-extensions-for-case-insensitive-fs.patch
@@ -0,0 +1,247 @@
+diff -urN a/extra-lib.mk b/extra-lib.mk
+--- a/extra-lib.mk	2014-04-27 01:49:50.160486800 +0100
++++ b/extra-lib.mk	2014-04-27 01:50:07.308467600 +0100
+@@ -13,7 +13,7 @@
+ 
+ ifneq (,$($(lib)-static-only-routines))
+ ifneq (,$(filter yes%,$(build-shared)$($(lib).so-version)))
+-object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oS)
++object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oSTATIC)
+ endif
+ endif
+ 
+@@ -31,7 +31,7 @@
+ 
+ # Add each flavor of library to the lists of things to build and install.
+ install-lib += $(foreach o,$(object-suffixes-$(lib)),$(lib:lib%=$(libtype$o)))
+-extra-objs += $(foreach o,$(filter-out .os .oS,$(object-suffixes-$(lib))),\
++extra-objs += $(foreach o,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))),\
+ 			$(patsubst %,%$o,$(filter-out \
+ 					   $($(lib)-shared-only-routines),\
+ 					   $(all-$(lib)-routines))))
+@@ -39,8 +39,8 @@
+ extra-objs += $(patsubst %,%.os,$(filter-out $($(lib)-static-only-routines),\
+ 					     $(all-$(lib)-routines)))
+ endif
+-ifneq (,$(filter .oS,$(object-suffixes-$(lib))))
+-extra-objs += $(patsubst %,%.oS,$(filter $($(lib)-static-only-routines),\
++ifneq (,$(filter .oSTATIC,$(object-suffixes-$(lib))))
++extra-objs += $(patsubst %,%.oSTATIC,$(filter $($(lib)-static-only-routines),\
+ 					 $(all-$(lib)-routines)))
+ endif
+ alltypes-$(lib) := $(foreach o,$(object-suffixes-$(lib)),\
+@@ -64,7 +64,7 @@
+ 
+ 
+ # Use o-iterator.mk to generate a rule for each flavor of library.
+-ifneq (,$(filter-out .os .oS,$(object-suffixes-$(lib))))
++ifneq (,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))))
+ define o-iterator-doit
+ $(objpfx)$(patsubst %,$(libtype$o),$(lib:lib%=%)): \
+   $(patsubst %,$(objpfx)%$o,\
+@@ -72,7 +72,7 @@
+ 			  $(all-$(lib)-routines))); \
+ 	$$(build-extra-lib)
+ endef
+-object-suffixes-left = $(filter-out .os .oS,$(object-suffixes-$(lib)))
++object-suffixes-left = $(filter-out .os .oSTATIC,$(object-suffixes-$(lib)))
+ include $(patsubst %,$(..)o-iterator.mk,$(object-suffixes-left))
+ endif
+ 
+@@ -84,9 +84,9 @@
+ 	$(build-extra-lib)
+ endif
+ 
+-ifneq (,$(filter .oS,$(object-suffixes-$(lib))))
+-$(objpfx)$(patsubst %,$(libtype.oS),$(lib:lib%=%)): \
+-  $(patsubst %,$(objpfx)%.oS,\
++ifneq (,$(filter .oSTATIC,$(object-suffixes-$(lib))))
++$(objpfx)$(patsubst %,$(libtype.oSTATIC),$(lib:lib%=%)): \
++  $(patsubst %,$(objpfx)%.oSTATIC,\
+ 	     $(filter $($(lib)-static-only-routines),\
+ 		      $(all-$(lib)-routines)))
+ 	$(build-extra-lib)
+diff -urN a/Makeconfig b/Makeconfig
+--- a/Makeconfig	2014-04-27 01:49:51.128542200 +0100
++++ b/Makeconfig	2014-04-27 01:50:07.343469600 +0100
+@@ -469,7 +469,7 @@
+ link-libc-tests-rpath-link = $(link-libc-rpath-link)
+ endif
+ link-libc-before-gnulib = $(common-objpfx)libc.so$(libc.so-version) \
+-			  $(common-objpfx)$(patsubst %,$(libtype.oS),c) \
++			  $(common-objpfx)$(patsubst %,$(libtype.oSTATIC),c) \
+ 			  $(as-needed) $(common-objpfx)elf/ld.so \
+ 			  $(no-as-needed)
+ link-libc = $(link-libc-rpath-link) $(link-libc-before-gnulib) $(gnulib)
+@@ -813,7 +813,7 @@
+ # The compilation rules use $(CPPFLAGS-${SUFFIX}) and $(CFLAGS-${SUFFIX})
+ # to pass different flags for each flavor.
+ libtypes = $(foreach o,$(object-suffixes-for-libc),$(libtype$o))
+-all-object-suffixes := .o .os .op .og .oS
++all-object-suffixes := .o .os .op .og .oSTATIC
+ object-suffixes :=
+ CPPFLAGS-.o = $(pic-default)
+ CFLAGS-.o = $(filter %frame-pointer,$(+cflags))
+@@ -852,14 +852,14 @@
+ 
+ ifeq (yes,$(build-shared))
+ # Build special library that contains the static-only routines for libc.
+-object-suffixes-for-libc += .oS
++object-suffixes-for-libc += .oSTATIC
+ 
+ # Must build the routines as PIC, though, because they can end up in (users')
+ # shared objects.  We don't want to use CFLAGS-os because users may, for
+ # example, make that processor-specific.
+-CFLAGS-.oS = $(CFLAGS-.o) $(PIC-ccflag)
+-CPPFLAGS-.oS = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
+-libtype.oS = lib%_nonshared.a
++CFLAGS-.oSTATIC = $(CFLAGS-.o) $(PIC-ccflag)
++CPPFLAGS-.oSTATIC = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
++libtype.oSTATIC = lib%_nonshared.a
+ endif
+ 
+ # The assembler can generate debug information too.
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2014-04-27 01:49:51.129542200 +0100
++++ b/Makerules	2014-04-27 01:50:07.347469800 +0100
+@@ -161,14 +161,14 @@
+ # We only generate these in the top-level makefile, to avoid any weirdness
+ # from subdir-specific makefile tweaks creeping in on an update.
+ $(common-objpfx)%.make: $(..)%.make.c $(..)Makerules $(common-before-compile)
+-	rm -f $@T $@.dT
++	rm -f $@T $@.dTEMP
+ 	(echo '# Generated from $*.make.c by Makerules.'; \
+ 	 $(CC) $(CFLAGS) $(CPPFLAGS) -E -DASSEMBLER $< \
+-	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dT \
++	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dTEMP \
+ 	 | sed -n '/@@@/{s/@@@[	 ]*\(.*\)@@@/\1/;s/[	 ]*$$//p;}'; \
+ 	 echo 'common-generated += $(@F)'; \
+-	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dT; \
+-	 rm -f $@.dT) > $@T
++	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dTEMP; \
++	 rm -f $@.dTEMP) > $@T
+ 	mv -f $@T $@
+ endif
+ 
+@@ -327,7 +327,7 @@
+ endif # $(build-shared) = yes
+ endif # sysd-sorted-done
+ 
+-# Generate .dT files as we compile.
++# Generate .dTEMP files as we compile.
+ compile-mkdep-flags = -MD -MP -MF $@.dt -MT $@
+ compile-command.S = $(compile.S) $(OUTPUT_OPTION) $(compile-mkdep-flags)
+ compile-command.c = $(compile.c) $(OUTPUT_OPTION) $(compile-mkdep-flags)
+@@ -423,7 +423,7 @@
+ endif
+ endif
+ 
+-elide-routines.oS += $(filter-out $(static-only-routines),\
++elide-routines.oSTATIC += $(filter-out $(static-only-routines),\
+ 				  $(routines) $(aux) $(sysdep_routines))
+ elide-routines.os += $(static-only-routines)
+ 
+@@ -700,7 +700,7 @@
+ 
+ +depfiles := $(sources:.c=.d) \
+ 	     $(patsubst %.o,%.d,$(filter %.o,$(extra-objs:.os=.o))) \
+-	     $(patsubst %.oS,%.d,$(filter %.oS,$(extra-objs))) \
++	     $(patsubst %.oSTATIC,%.d,$(filter %.oSTATIC,$(extra-objs))) \
+ 	     $(patsubst %.o,%.d,$(filter %.o,$(extra-test-objs:.os=.o))) \
+ 	     $(addsuffix .d,$(tests) $(xtests) $(test-srcs))
+ ifeq ($(build-programs),yes)
+@@ -1008,7 +1008,7 @@
+ install: $(inst_libdir)/libc.so
+ $(inst_libdir)/libc.so: $(common-objpfx)format.lds \
+ 			$(common-objpfx)libc.so$(libc.so-version) \
+-			$(inst_libdir)/$(patsubst %,$(libtype.oS),\
++			$(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
+ 						  $(libprefix)$(libc-name)) \
+ 			$(+force)
+ 	(echo '/* GNU ld script';\
+@@ -1016,7 +1016,7 @@
+ 	 echo '   the static library, so try that secondarily.  */';\
+ 	 cat $<; \
+ 	 echo 'GROUP ( $(slibdir)/libc.so$(libc.so-version)' \
+-	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)$(libc-name))'\
++	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)$(libc-name))'\
+ 	      ' AS_NEEDED (' $(rtlddir)/$(rtld-installed-name) ') )' \
+ 	) > $@.new
+ 	mv -f $@.new $@
+diff -urN a/nptl/Makefile b/nptl/Makefile
+--- a/nptl/Makefile	2014-04-27 01:49:51.305552300 +0100
++++ b/nptl/Makefile	2014-04-27 01:50:07.350470000 +0100
+@@ -398,7 +398,7 @@
+ 
+ $(inst_libdir)/libpthread.so: $(common-objpfx)format.lds \
+ 			      $(objpfx)libpthread.so$(libpthread.so-version) \
+-			      $(inst_libdir)/$(patsubst %,$(libtype.oS),\
++			      $(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
+ 							$(libprefix)pthread) \
+ 			      $(+force)
+ 	(echo '/* GNU ld script';\
+@@ -406,7 +406,7 @@
+ 	 echo '   the static library, so try that secondarily.  */';\
+ 	 cat $<; \
+ 	 echo 'GROUP ( $(slibdir)/libpthread.so$(libpthread.so-version)' \
+-	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)pthread)'\
++	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)pthread)'\
+ 	      ')' \
+ 	) > $@.new
+ 	mv -f $@.new $@
+diff -urN a/sysdeps/i386/i686/Makefile b/sysdeps/i386/i686/Makefile
+--- a/sysdeps/i386/i686/Makefile	2014-04-27 01:49:53.760692700 +0100
++++ b/sysdeps/i386/i686/Makefile	2014-04-27 01:50:07.353470200 +0100
+@@ -15,11 +15,11 @@
+ CFLAGS-.os += -Wa,-mtune=i686
+ CFLAGS-.op += -Wa,-mtune=i686
+ CFLAGS-.og += -Wa,-mtune=i686
+-CFLAGS-.oS += -Wa,-mtune=i686
++CFLAGS-.oSTATIC += -Wa,-mtune=i686
+ 
+ ASFLAGS-.o += -Wa,-mtune=i686
+ ASFLAGS-.os += -Wa,-mtune=i686
+ ASFLAGS-.op += -Wa,-mtune=i686
+ ASFLAGS-.og += -Wa,-mtune=i686
+-ASFLAGS-.oS += -Wa,-mtune=i686
++ASFLAGS-.oSTATIC += -Wa,-mtune=i686
+ endif
+diff -urN a/sysdeps/ieee754/ldbl-opt/Makefile b/sysdeps/ieee754/ldbl-opt/Makefile
+--- a/sysdeps/ieee754/ldbl-opt/Makefile	2014-04-27 01:49:53.919701800 +0100
++++ b/sysdeps/ieee754/ldbl-opt/Makefile	2014-04-27 01:50:07.355470300 +0100
+@@ -49,7 +49,7 @@
+ libnldbl-routines = $(libnldbl-calls:%=nldbl-%)
+ libnldbl-inhibit-o = $(object-suffixes)
+ libnldbl-static-only-routines = $(libnldbl-routines)
+-extra-objs += $(addsuffix .oS, $(libnldbl-routines))
++extra-objs += $(addsuffix .oSTATIC, $(libnldbl-routines))
+ 
+ CFLAGS-nldbl-acos.c = -fno-builtin-acosl
+ CFLAGS-nldbl-acosh.c = -fno-builtin-acoshl
+diff -urN a/sysdeps/sparc/sparc32/sparcv9/Makefile b/sysdeps/sparc/sparc32/sparcv9/Makefile
+--- a/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-04-27 01:49:55.197774900 +0100
++++ b/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-04-27 01:50:07.357470400 +0100
+@@ -10,11 +10,11 @@
+ ASFLAGS-.os += -Wa,-Av9d
+ ASFLAGS-.op += -Wa,-Av9d
+ ASFLAGS-.og += -Wa,-Av9d
+-ASFLAGS-.oS += -Wa,-Av9d
++ASFLAGS-.oSTATIC += -Wa,-Av9d
+ else
+ ASFLAGS-.o += -Wa,-Av9a
+ ASFLAGS-.os += -Wa,-Av9a
+ ASFLAGS-.op += -Wa,-Av9a
+ ASFLAGS-.og += -Wa,-Av9a
+-ASFLAGS-.oS += -Wa,-Av9a
++ASFLAGS-.oSTATIC += -Wa,-Av9a
+ endif
+diff -urN a/sysdeps/sparc/sparc64/Makefile b/sysdeps/sparc/sparc64/Makefile
+--- a/sysdeps/sparc/sparc64/Makefile	2014-04-27 01:49:55.236777100 +0100
++++ b/sysdeps/sparc/sparc64/Makefile	2014-04-27 01:50:07.359470500 +0100
+@@ -12,5 +12,5 @@
+ ASFLAGS-.os += -Wa,-Av9d
+ ASFLAGS-.op += -Wa,-Av9d
+ ASFLAGS-.og += -Wa,-Av9d
+-ASFLAGS-.oS += -Wa,-Av9d
++ASFLAGS-.oSTATIC += -Wa,-Av9d
+ endif
diff --git a/patches/eglibc/2_19/250-MSYS-Hack-force-ln-s.patch b/patches/eglibc/2_19/250-MSYS-Hack-force-ln-s.patch
new file mode 100644
index 0000000..552fbbc
--- /dev/null
+++ b/patches/eglibc/2_19/250-MSYS-Hack-force-ln-s.patch
@@ -0,0 +1,39 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-04-27 01:49:49.993477200 +0100
++++ b/configure	2014-04-27 01:52:26.115406900 +0100
+@@ -4475,6 +4475,16 @@
+ $as_echo "no, using $LN_S" >&6; }
+ fi
+ 
++# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
++# eglibc, whereas cp -r doesn't.
++case "$build_os" in
++*mingw*)
++  as_ln_s='ln -s'
++  LN_S=$as_ln_s
++  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&5
++$as_echo "$as_me: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&2;}
++  ;;
++esac
+ 
+ # Was a --with-binutils option given?
+ if test -n "$path_binutils"; then
+diff -urN a/configure.ac b/configure.ac
+--- a/configure.ac	2014-04-27 01:49:49.993477200 +0100
++++ b/configure.ac	2014-04-27 01:52:26.122407300 +0100
+@@ -972,6 +972,15 @@
+   INSTALL='\$(..)./scripts/install-sh -c'
+ fi
+ AC_PROG_LN_S
++# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
++# eglibc, whereas cp -r doesn't.
++case "$build_os" in
++*mingw*)
++  as_ln_s='ln -s'
++  LN_S=$as_ln_s
++  AC_MSG_WARN(Hacked as_ln_s and LN_S to 'ln -s' for MSYS2)
++  ;;
++esac
+ 
+ LIBC_PROG_BINUTILS
+ 
diff --git a/patches/glibc/2.15/100-make-4.patch b/patches/glibc/2.15/100-make-4.patch
deleted file mode 100644
index ce3d287..0000000
--- a/patches/glibc/2.15/100-make-4.patch
+++ /dev/null
@@ -1,24 +0,0 @@
-diff -urN a/configure b/configure
---- a/configure	2014-01-21 23:50:44.016421900 +0000
-+++ b/configure	2014-01-21 23:51:02.548775200 +0000
-@@ -4985,7 +4985,7 @@
-   ac_prog_version=`$MAKE --version 2>&1 | sed -n 's/^.*GNU Make[^0-9]*\([0-9][0-9.]*\).*$/\1/p'`
-   case $ac_prog_version in
-     '') ac_prog_version="v. ?.??, bad"; ac_verc_fail=yes;;
--    3.79* | 3.[89]*)
-+    3.79* | 3.[89]* | 4.*)
-        ac_prog_version="$ac_prog_version, ok"; ac_verc_fail=no;;
-     *) ac_prog_version="$ac_prog_version, bad"; ac_verc_fail=yes;;
- 
-diff -urN a/configure.in b/configure.in
---- a/configure.in	2014-01-21 23:50:44.016922000 +0000
-+++ b/configure.in	2014-01-21 23:51:02.554776000 +0000
-@@ -1004,7 +1004,7 @@
-   critic_missing="$critic_missing gcc")
- AC_CHECK_PROG_VER(MAKE, gnumake gmake make, --version,
-   [GNU Make[^0-9]*\([0-9][0-9.]*\)],
--  [3.79* | 3.[89]*], critic_missing="$critic_missing make")
-+  [3.79* | 3.[89]* | 4.*], critic_missing="$critic_missing make")
- 
- AC_CHECK_PROG_VER(MSGFMT, gnumsgfmt gmsgfmt msgfmt, --version,
-   [GNU gettext.* \([0-9]*\.[0-9.]*\)],
diff --git a/patches/glibc/2.15/105-configure-Default-to-CPP-CC--E-unless-overridden.patch b/patches/glibc/2.15/105-configure-Default-to-CPP-CC--E-unless-overridden.patch
deleted file mode 100644
index a94e8c5..0000000
--- a/patches/glibc/2.15/105-configure-Default-to-CPP-CC--E-unless-overridden.patch
+++ /dev/null
@@ -1,253 +0,0 @@
-From bb931195fe780bb63e3d57d0742abad1d2128424 Mon Sep 17 00:00:00 2001
-From: Thomas Schwinge <thomas@codesourcery.com>
-Date: Fri, 25 Jan 2013 12:33:19 +0100
-Subject: [PATCH] configure: Default to CPP="$CC -E" unless overridden.
-
----
- ChangeLog    |    5 ++
- configure    |  173 ++--------------------------------------------------------
- configure.in |   17 ++++++
- 3 files changed, 28 insertions(+), 167 deletions(-)
-
-diff -urN a/ChangeLog b/ChangeLog
---- a/ChangeLog	2014-01-29 18:29:26.273330934 +0000
-+++ b/ChangeLog	2014-01-29 18:30:28.456663480 +0000
-@@ -1,3 +1,8 @@
-+2013-01-25  Thomas Schwinge  <thomas@codesourcery.com>
-+
-+        * configure.in (AC_PROG_CPP): New definition.
-+        * configure: Regenerate.
-+
- 2012-01-01  Ulrich Drepper  <drepper@gmail.com>
- 
- 	* posix/getconf.c: Update copyright year.
-diff -urN a/configure b/configure
---- a/configure	2014-01-29 18:29:26.329997600 +0000
-+++ b/configure	2014-01-29 18:29:40.449997483 +0000
-@@ -1599,43 +1599,6 @@
- 
- } # ac_fn_c_try_compile
- 
--# ac_fn_c_try_cpp LINENO
--# ----------------------
--# Try to preprocess conftest.$ac_ext, and return whether this succeeded.
--ac_fn_c_try_cpp ()
--{
--  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
--  if { { ac_try="$ac_cpp conftest.$ac_ext"
--case "(($ac_try" in
--  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
--  *) ac_try_echo=$ac_try;;
--esac
--eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
--$as_echo "$ac_try_echo"; } >&5
--  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.err
--  ac_status=$?
--  if test -s conftest.err; then
--    grep -v '^ *+' conftest.err >conftest.er1
--    cat conftest.er1 >&5
--    mv -f conftest.er1 conftest.err
--  fi
--  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
--  test $ac_status = 0; } > conftest.i && {
--	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
--	 test ! -s conftest.err
--       }; then :
--  ac_retval=0
--else
--  $as_echo "$as_me: failed program was:" >&5
--sed 's/^/| /' conftest.$ac_ext >&5
--
--    ac_retval=1
--fi
--  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
--  as_fn_set_status $ac_retval
--
--} # ac_fn_c_try_cpp
--
- # ac_fn_cxx_try_compile LINENO
- # ----------------------------
- # Try to compile conftest.$ac_ext, and return whether this succeeded.
-@@ -2355,6 +2318,11 @@
- 
- 
- 
-+# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
-+# here to work around the Autoconf issue discussed in
-+# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
-+# AC_PROG_CPP
-+
- 
- 
- subdirs="$subdirs "
-@@ -3069,142 +3037,13 @@
- 
- fi
- 
--ac_ext=c
--ac_cpp='$CPP $CPPFLAGS'
--ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
--ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
--ac_compiler_gnu=$ac_cv_c_compiler_gnu
--{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor" >&5
--$as_echo_n "checking how to run the C preprocessor... " >&6; }
- # On Suns, sometimes $CPP names a directory.
- if test -n "$CPP" && test -d "$CPP"; then
-   CPP=
- fi
- if test -z "$CPP"; then
--  if ${ac_cv_prog_CPP+:} false; then :
--  $as_echo_n "(cached) " >&6
--else
--      # Double quotes because CPP needs to be expanded
--    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
--    do
--      ac_preproc_ok=false
--for ac_c_preproc_warn_flag in '' yes
--do
--  # Use a header file that comes with gcc, so configuring glibc
--  # with a fresh cross-compiler works.
--  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
--  # <limits.h> exists even on freestanding compilers.
--  # On the NeXT, cc -E runs the code through the compiler's parser,
--  # not just through cpp. "Syntax error" is here to catch this case.
--  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
--/* end confdefs.h.  */
--#ifdef __STDC__
--# include <limits.h>
--#else
--# include <assert.h>
--#endif
--		     Syntax error
--_ACEOF
--if ac_fn_c_try_cpp "$LINENO"; then :
--
--else
--  # Broken: fails on valid input.
--continue
--fi
--rm -f conftest.err conftest.i conftest.$ac_ext
--
--  # OK, works on sane cases.  Now check whether nonexistent headers
--  # can be detected and how.
--  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
--/* end confdefs.h.  */
--#include <ac_nonexistent.h>
--_ACEOF
--if ac_fn_c_try_cpp "$LINENO"; then :
--  # Broken: success on invalid input.
--continue
--else
--  # Passes both tests.
--ac_preproc_ok=:
--break
--fi
--rm -f conftest.err conftest.i conftest.$ac_ext
--
--done
--# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
--rm -f conftest.i conftest.err conftest.$ac_ext
--if $ac_preproc_ok; then :
--  break
--fi
--
--    done
--    ac_cv_prog_CPP=$CPP
--
--fi
--  CPP=$ac_cv_prog_CPP
--else
--  ac_cv_prog_CPP=$CPP
--fi
--{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $CPP" >&5
--$as_echo "$CPP" >&6; }
--ac_preproc_ok=false
--for ac_c_preproc_warn_flag in '' yes
--do
--  # Use a header file that comes with gcc, so configuring glibc
--  # with a fresh cross-compiler works.
--  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
--  # <limits.h> exists even on freestanding compilers.
--  # On the NeXT, cc -E runs the code through the compiler's parser,
--  # not just through cpp. "Syntax error" is here to catch this case.
--  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
--/* end confdefs.h.  */
--#ifdef __STDC__
--# include <limits.h>
--#else
--# include <assert.h>
--#endif
--		     Syntax error
--_ACEOF
--if ac_fn_c_try_cpp "$LINENO"; then :
--
--else
--  # Broken: fails on valid input.
--continue
-+  CPP="$CC -E"
- fi
--rm -f conftest.err conftest.i conftest.$ac_ext
--
--  # OK, works on sane cases.  Now check whether nonexistent headers
--  # can be detected and how.
--  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
--/* end confdefs.h.  */
--#include <ac_nonexistent.h>
--_ACEOF
--if ac_fn_c_try_cpp "$LINENO"; then :
--  # Broken: success on invalid input.
--continue
--else
--  # Passes both tests.
--ac_preproc_ok=:
--break
--fi
--rm -f conftest.err conftest.i conftest.$ac_ext
--
--done
--# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
--rm -f conftest.i conftest.err conftest.$ac_ext
--if $ac_preproc_ok; then :
--
--else
--  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
--$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
--as_fn_error $? "C preprocessor \"$CPP\" fails sanity check
--See \`config.log' for more details" "$LINENO" 5; }
--fi
--
--ac_ext=c
--ac_cpp='$CPP $CPPFLAGS'
--ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
--ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
--ac_compiler_gnu=$ac_cv_c_compiler_gnu
- 
- # We need the C++ compiler only for testing.
- ac_ext=cpp
-diff -urN a/configure.in b/configure.in
---- a/configure.in	2014-01-29 18:29:26.333330932 +0000
-+++ b/configure.in	2014-01-29 18:29:40.453330831 +0000
-@@ -5,6 +5,23 @@
- AC_CONFIG_HEADERS([config.h])
- AC_CONFIG_AUX_DIR([scripts])
- 
-+# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
-+# here to work around the Autoconf issue discussed in
-+# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
-+AC_DEFUN([AC_PROG_CPP],
-+[AC_REQUIRE([AC_PROG_CC])dnl
-+AC_ARG_VAR([CPP],      [C preprocessor])dnl
-+_AC_ARG_VAR_CPPFLAGS()dnl
-+# On Suns, sometimes $CPP names a directory.
-+if test -n "$CPP" && test -d "$CPP"; then
-+  CPP=
-+fi
-+if test -z "$CPP"; then
-+  CPP="$CC -E"
-+fi
-+AC_SUBST(CPP)dnl
-+])# AC_PROG_CPP
-+
- dnl This is here so we can set $subdirs directly based on configure fragments.
- AC_CONFIG_SUBDIRS()
- 
diff --git a/patches/glibc/2.15/110-Fix-crossrpc-to-build-on-non-Linux.patch b/patches/glibc/2.15/110-Fix-crossrpc-to-build-on-non-Linux.patch
deleted file mode 100644
index 4e73cfd..0000000
--- a/patches/glibc/2.15/110-Fix-crossrpc-to-build-on-non-Linux.patch
+++ /dev/null
@@ -1,247 +0,0 @@
-diff -urN a/sunrpc/rpc/types.h b/sunrpc/rpc/types.h
---- a/sunrpc/rpc/types.h	2014-01-21 23:51:42.464843900 +0000
-+++ b/sunrpc/rpc/types.h	2014-01-21 23:52:04.934197200 +0000
-@@ -69,6 +69,7 @@
- #include <sys/types.h>
- #endif
- 
-+#ifdef __linux__
- #ifndef __u_char_defined
- typedef __u_char u_char;
- typedef __u_short u_short;
-@@ -84,11 +85,14 @@
- typedef __caddr_t caddr_t;
- # define __daddr_t_defined
- #endif
-+#endif
- 
- #include <sys/time.h>
- #include <sys/param.h>
- 
-+#ifndef _WIN32
- #include <netinet/in.h>
-+#endif
- 
- #ifndef INADDR_LOOPBACK
- #define       INADDR_LOOPBACK         (u_long)0x7F000001
-diff -urN a/sunrpc/rpc_main.c b/sunrpc/rpc_main.c
---- a/sunrpc/rpc_main.c	2014-01-21 23:51:42.473845100 +0000
-+++ b/sunrpc/rpc_main.c	2014-01-21 23:55:41.416186900 +0000
-@@ -38,13 +38,19 @@
- #include <stdio.h>
- #include <string.h>
- #include <unistd.h>
-+#ifndef IS_IN_build
- #include <libintl.h>
-+#endif
- #include <ctype.h>
- #include <sys/types.h>
- #include <sys/param.h>
- #include <sys/file.h>
- #include <sys/stat.h>
-+#ifndef _WIN32
- #include <sys/wait.h>
-+#else
-+#include <windows.h>
-+#endif
- #include "rpc_parse.h"
- #include "rpc_util.h"
- #include "rpc_scan.h"
-@@ -53,6 +59,33 @@
- #include "../version.h"
- #define PACKAGE _libc_intl_domainname
- 
-+#ifdef _WIN32
-+#define rindex(_dest, _src) strrchr((_dest), (_src))
-+
-+char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src);
-+
-+char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src)
-+{
-+  if (src == NULL)
-+      return NULL;
-+  return strcpy(dest, src) + strlen(dest);
-+}
-+#endif /* _WIN32 */
-+
-+#if defined(_WIN32) || defined(__BSD__)
-+
-+char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len);
-+
-+char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len)
-+{
-+  size_t min_len = strlen(src);
-+  if (min_len > len)
-+    min_len = len;
-+  return strncpy(dest, src, len) + min_len;
-+}
-+
-+#endif /* defined(_WIN32) || defined(__BSD__) */
-+
- #define EXTEND	1		/* alias for TRUE */
- #define DONT_EXTEND	0	/* alias for FALSE */
- 
-@@ -83,7 +116,11 @@
- static const char *CPP = SUNOS_CPP;
- static const char CPPFLAGS[] = "-C";
- static char *pathbuf;
-+#ifdef _WIN32
-+static HANDLE cpp_pid;
-+#else
- static int cpp_pid;
-+#endif
- static const char *allv[] =
- {
-   "rpcgen", "-s", "udp", "-s", "tcp"
-@@ -335,6 +372,20 @@
- {
-   struct stat buf;
- 
-+  /* Avoid trying to directly execute a bash script on Windows. */
-+#ifdef _WIN32
-+  char* CPPENVV = getenv("CPP");
-+  if (CPPENVV)
-+    {
-+      CPP = (char*)malloc(strlen(CPPENVV)+1);
-+      strcpy((char*)CPP, CPPENVV);
-+      /* Don't bother checking that it exists with stat64 as
-+       * we'd have to check in the path, also it usually ends
-+       * with a few arguments. */
-+      return;
-+    }
-+#endif
-+
-   if (stat (CPP, &buf) < 0)
-     {				/* /lib/cpp or explicit cpp does not exist */
-       if (cppDefined)
-@@ -354,9 +405,122 @@
-     }
- }
- 
-+#ifdef _WIN32
-+/*
-+ * Open input file with given define for C-preprocessor
-+ */
-+static void
-+open_input (const char *infile, const char *define)
-+{
-+  int argi;
-+  int argcc = 0;
-+  LPSTR argsall;
-+  HANDLE StdOutHandle;
-+  HANDLE StdErrHandle;
-+  HANDLE ReadPipe;
-+  HANDLE WritePipe;
-+  SECURITY_ATTRIBUTES SecAttr;
-+  STARTUPINFO StartupInfo;
-+  PROCESS_INFORMATION ProcessInfo;
-+  DWORD Status;
-+
-+  find_cpp ();
-+  putarg (0, CPP);
-+  putarg (1, CPPFLAGS);
-+  addarg (define);
-+  if (infile)
-+    addarg (infile);
-+  addarg ((char *) NULL);
-+  for (argi = 0; argi < argcount - 1; ++argi)
-+    {
-+      argcc += strlen(arglist[argi])+2;
-+    }
-+  argsall = (LPSTR)alloca(argcc + 1);
-+  if (!argsall)
-+    {
-+      fprintf (stderr, _ ("cannot alloca for argsall\n"));
-+      exit (1);
-+    }
-+  argsall[0] = '\0';
-+  for (argi = 0; argi < argcount - 1; ++argi)
-+    {
-+      strcat((char*)argsall, arglist[argi]);
-+      strcat((char*)argsall, " ");
-+    }
-+
-+  memset(&SecAttr,     0, sizeof(SecAttr));
-+  memset(&StartupInfo, 0, sizeof(StartupInfo));
-+  memset(&ProcessInfo, 0, sizeof(ProcessInfo));
-+
-+  SecAttr.nLength = sizeof(SecAttr);
-+  SecAttr.bInheritHandle = TRUE;
-+
-+  Status = CreatePipe( &ReadPipe, &WritePipe, &SecAttr, 0 );
-+  if (!Status)
-+    {
-+      fprintf (stderr, _ ("cannot CreatePipe: GetLastError() -> %d\n"), GetLastError());
-+      exit (1);
-+    }
-+
-+  SetHandleInformation( ReadPipe, HANDLE_FLAG_INHERIT, 0 );
-+
-+  /*
-+  StdOutHandle = GetStdHandle( STD_OUTPUT_HANDLE );
-+  StdErrHandle = GetStdHandle( STD_ERROR_HANDLE );
-+  if (StdOutHandle != INVALID_HANDLE_VALUE) {
-+      SetHandleInformation( StdOutHandle, HANDLE_FLAG_INHERIT, 0 );
-+  }
-+  if (StdErrHandle != INVALID_HANDLE_VALUE) {
-+      SetHandleInformation( StdErrHandle, HANDLE_FLAG_INHERIT, 0 );
-+  }
-+  */
-+
-+  StartupInfo.cb         = sizeof(StartupInfo);
-+  StartupInfo.hStdInput  = GetStdHandle( STD_INPUT_HANDLE );
-+  StartupInfo.hStdOutput = WritePipe;
-+  StartupInfo.hStdError  = GetStdHandle( STD_ERROR_HANDLE );
-+  StartupInfo.dwFlags    = STARTF_USESTDHANDLES;
-+
-+  Status = CreateProcess(
-+          NULL,           /* lpApplicationName */
-+          argsall,        /* lpCommandLine */
-+          NULL,           /* lpProcessAttributes */
-+          NULL,           /* lpThreadAttributes */
-+          TRUE,           /* bInheritHandles */
-+          0,              /* dwCreationFlags */
-+          NULL,           /* lpEnvironment */
-+          NULL,           /* lpCurrentDirectory */
-+          &StartupInfo,   /* lpStartupInfo */
-+          &ProcessInfo ); /* lpProcessInformation */
-+
-+  CloseHandle( WritePipe );
-+  if (!Status)
-+    {
-+      fprintf (stderr, _ ("cannot find C preprocessor: %s, GetLastError() -> %d\n"), CPP, GetLastError());
-+      exit (1);
-+    }
-+  int fd = _open_osfhandle((intptr_t)ReadPipe, _O_APPEND | _O_RDONLY);
-+  if(fd != -1)
-+    {
-+      fin = _fdopen(fd, "a+");
-+    }
-+  cpp_pid = ProcessInfo.hProcess;
-+}
-+
-+/* Close the connection to the C-preprocessor and check for successfull
-+   termination.  */
-+static void
-+close_input (void)
-+{
-+  WaitForSingleObject(cpp_pid, INFINITE);
-+}
-+
-+#else
-+
- /*
-  * Open input file with given define for C-preprocessor
-  */
-+
- static void
- open_input (const char *infile, const char *define)
- {
-@@ -424,6 +588,7 @@
-       crash ();
-     }
- }
-+#endif
- 
- /* valid tirpc nettypes */
- static const char *valid_ti_nettypes[] =
diff --git a/patches/glibc/2.15/120-MSYS-Hack-elf-librtld.mk-gen.patch b/patches/glibc/2.15/120-MSYS-Hack-elf-librtld.mk-gen.patch
deleted file mode 100644
index 1870ea1..0000000
--- a/patches/glibc/2.15/120-MSYS-Hack-elf-librtld.mk-gen.patch
+++ /dev/null
@@ -1,62 +0,0 @@
-diff -urN a/elf/Makefile b/elf/Makefile
---- a/elf/Makefile	2014-01-21 23:56:27.630555400 +0000
-+++ b/elf/Makefile	2014-01-21 23:56:49.628848800 +0000
-@@ -145,6 +145,14 @@
- ld-map		= $(common-objpfx)ld.map
- endif
- 
-+# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
-+uname_o := $(shell uname -o)
-+ifneq (, $(findstring Msys, $(uname_o)))
-+common-objpfxh = $(shell cd $(common-objpfx); pwd -W)/
-+else
-+common-objpfxh = $(common-objpfx)
-+endif
-+
- ifeq (yes,$(build-shared))
- extra-objs	= $(all-rtld-routines:%=%.os) soinit.os sofini.os interp.os
- generated	+= librtld.os dl-allobjs.os ld.so ldd
-@@ -381,15 +389,15 @@
- 
- $(objpfx)librtld.mk: $(objpfx)librtld.map Makefile
- 	LC_ALL=C \
--	sed -n 's@^$(common-objpfx)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
-+	sed -n 's@^$(common-objpfxh)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
- 	    $< | \
- 	while read lib file; do \
- 	  case $$lib in \
- 	  libc_pic.a) \
- 	    LC_ALL=C fgrep -l /$$file \
--		  $(common-objpfx)stamp.os $(common-objpfx)*/stamp.os | \
-+		  $(common-objpfxh)stamp.os $(common-objpfxh)*/stamp.os | \
- 	    LC_ALL=C \
--	    sed 's@^$(common-objpfx)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
-+	    sed 's@^$(common-objpfxh)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
- 	    ;; \
- 	  */*.a) \
- 	    echo rtld-$${lib%%/*} += $$file ;; \
-diff -urN a/elf/Makerules b/elf/Makerules
---- a/Makerules	2014-02-21 22:05:14.105893700 +0000
-+++ b/Makerules	2014-02-22 01:05:14.435886700 +0000
-@@ -398,11 +398,19 @@
- mv -f $(@:.d=.T) $@ $(generate-md5)
- endef
- 
-+# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
-+uname_o := $(shell uname -o)
-+ifneq (, $(findstring Msys, $(uname_o)))
-+common-objpfxh = $(shell cd $(common-objpfx); pwd -W)/
-+else
-+common-objpfxh = $(common-objpfx)
-+endif
-+
- ifneq (,$(objpfx))
- # Continuation lines here are dangerous because they introduce spaces!
- define sed-remove-objpfx
---e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfx)))@ $$(common-objpfx)@g' \
---e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfx)))@$$(common-objpfx)@g'
-+-e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfxh)))@ $$(common-objpfxh)@g' \
-+-e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfxh)))@$$(common-objpfxh)@g'
- endef
- endif
- 
diff --git a/patches/glibc/2.15/130-Rename-oS-to-oSTATIC-for-case-insensitive-fs.patch b/patches/glibc/2.15/130-Rename-oS-to-oSTATIC-for-case-insensitive-fs.patch
deleted file mode 100644
index 0cc0307..0000000
--- a/patches/glibc/2.15/130-Rename-oS-to-oSTATIC-for-case-insensitive-fs.patch
+++ /dev/null
@@ -1,201 +0,0 @@
-diff -urN a/ChangeLog b/ChangeLog
---- a/ChangeLog	2014-02-22 01:19:33.566482400 +0000
-+++ b/ChangeLog	2014-02-22 01:20:23.628339500 +0000
-@@ -1,3 +1,8 @@
-+2014-01-22  Ray Donnelly  <mingw.android@gmail.com>
-+
-+        * Rename .oS to .oSTATIC so that builds can be done on file
-+        systems that are not both case sensitive and case preserving.
-+
- 2013-01-25  Thomas Schwinge  <thomas@codesourcery.com>
- 
-         * configure.in (AC_PROG_CPP): New definition.
-diff -urN a/extra-lib.mk b/extra-lib.mk
---- a/extra-lib.mk	2014-02-22 01:19:33.837016800 +0000
-+++ b/extra-lib.mk	2014-02-22 01:20:23.630839800 +0000
-@@ -13,7 +13,7 @@
- 
- ifneq (,$($(lib)-static-only-routines))
- ifneq (,$(filter yesyes%,$(build-shared)$(elf)$($(lib).so-version)))
--object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oS)
-+object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oSTATIC)
- endif
- endif
- 
-@@ -29,7 +29,7 @@
- 
- # Add each flavor of library to the lists of things to build and install.
- install-lib += $(foreach o,$(object-suffixes-$(lib)),$(lib:lib%=$(libtype$o)))
--extra-objs += $(foreach o,$(filter-out .os .oS,$(object-suffixes-$(lib))),\
-+extra-objs += $(foreach o,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))),\
- 			$(patsubst %,%$o,$(filter-out \
- 					   $($(lib)-shared-only-routines),\
- 					   $(all-$(lib)-routines))))
-@@ -57,7 +57,7 @@
- 
- 
- # Use o-iterator.mk to generate a rule for each flavor of library.
--ifneq (,$(filter-out .os .oS,$(object-suffixes-$(lib))))
-+ifneq (,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))))
- define o-iterator-doit
- $(objpfx)$(patsubst %,$(libtype$o),$(lib:lib%=%)): \
-   $(patsubst %,$(objpfx)%$o,\
-@@ -65,7 +65,7 @@
- 			  $(all-$(lib)-routines))); \
- 	$$(build-extra-lib)
- endef
--object-suffixes-left = $(filter-out .os .oS,$(object-suffixes-$(lib)))
-+object-suffixes-left = $(filter-out .os .oSTATIC,$(object-suffixes-$(lib)))
- include $(patsubst %,$(..)o-iterator.mk,$(object-suffixes-left))
- endif
- 
-@@ -77,9 +77,9 @@
- 	$(build-extra-lib)
- endif
- 
--ifneq (,$(filter .oS,$(object-suffixes-$(lib))))
--$(objpfx)$(patsubst %,$(libtype.oS),$(lib:lib%=%)): \
--  $(patsubst %,$(objpfx)%.oS,\
-+ifneq (,$(filter .oSTATIC,$(object-suffixes-$(lib))))
-+$(objpfx)$(patsubst %,$(libtype.oSTATIC),$(lib:lib%=%)): \
-+  $(patsubst %,$(objpfx)%.oSTATIC,\
- 	     $(filter $($(lib)-static-only-routines),\
- 		      $(all-$(lib)-routines)))
- 	$(build-extra-lib)
-diff -urN a/Makeconfig b/Makeconfig
---- a/Makeconfig	2014-02-22 01:19:34.899651700 +0000
-+++ b/Makeconfig	2014-02-22 01:20:23.633340100 +0000
-@@ -508,7 +508,7 @@
- # run the linked programs.
- link-libc = -Wl,-rpath-link=$(rpath-link) \
- 	    $(common-objpfx)libc.so$(libc.so-version) \
--	    $(common-objpfx)$(patsubst %,$(libtype.oS),c) \
-+	    $(common-objpfx)$(patsubst %,$(libtype.oSTATIC),c) \
- 	    $(as-needed) $(common-objpfx)elf/ld.so $(no-as-needed) $(gnulib)
- # This is how to find at build-time things that will be installed there.
- rpath-dirs = math elf dlfcn nss nis rt resolv crypt
-@@ -730,7 +730,7 @@
- # The compilation rules use $(CPPFLAGS-${SUFFIX}) and $(CFLAGS-${SUFFIX})
- # to pass different flags for each flavor.
- libtypes = $(foreach o,$(object-suffixes-for-libc),$(libtype$o))
--all-object-suffixes := .o .os .op .og .ob .oS
-+all-object-suffixes := .o .os .op .og .ob .oSTATIC
- object-suffixes :=
- CPPFLAGS-.o = $(pic-default)
- CFLAGS-.o = $(filter %frame-pointer,$(+cflags))
-@@ -790,14 +790,14 @@
- 
- ifeq (yes,$(build-shared))
- # Build special library that contains the static-only routines for libc.
--object-suffixes-for-libc += .oS
-+object-suffixes-for-libc += .oSTATIC
- 
- # Must build the routines as PIC, though, because they can end up in (users')
- # shared objects.  We don't want to use CFLAGS-os because users may, for
- # example, make that processor-specific.
--CFLAGS-.oS = $(CFLAGS-.o) $(PIC-ccflag)
--CPPFLAGS-.oS = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
--libtype.oS = lib%_nonshared.a
-+CFLAGS-.oSTATIC = $(CFLAGS-.o) $(PIC-ccflag)
-+CPPFLAGS-.oSTATIC = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
-+libtype.oSTATIC = lib%_nonshared.a
- endif
- 
- # The assembler can generate debug information too.
-diff -urN a/Makerules b/Makerules
---- a/Makerules	2014-02-22 01:19:34.901151900 +0000
-+++ b/Makerules	2014-02-22 01:20:23.643841400 +0000
-@@ -162,14 +162,14 @@
- # We only generate these in the top-level makefile, to avoid any weirdness
- # from subdir-specific makefile tweaks creeping in on an update.
- $(common-objpfx)%.make: $(..)%.make.c $(..)Makerules $(common-before-compile)
--	rm -f $@T $@.dT
-+	rm -f $@T $@.dTEMP
- 	(echo '# Generated from $*.make.c by Makerules.'; \
- 	 $(CC) $(CFLAGS) $(CPPFLAGS) -E -DASSEMBLER $< \
--	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dT \
-+	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dTEMP \
- 	 | sed -n '/@@@/{s/@@@[	 ]*\(.*\)@@@/\1/;s/[	 ]*$$//p;}'; \
- 	 echo 'common-generated += $(@F)'; \
--	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dT; \
--	 rm -f $@.dT) > $@T
-+	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dTEMP; \
-+	 rm -f $@.dTEMP) > $@T
- 	mv -f $@T $@
- endif
- 
-@@ -426,7 +426,7 @@
- # Bounded pointer thunks are only built for *.ob
- elide-bp-thunks = $(addprefix $(bppfx),$(bp-thunks))
- 
--elide-routines.oS += $(filter-out $(static-only-routines),\
-+elide-routines.oSTATIC += $(filter-out $(static-only-routines),\
- 				  $(routines) $(aux) $(sysdep_routines)) \
- 		     $(elide-bp-thunks)
- elide-routines.os += $(static-only-routines) $(elide-bp-thunks)
-@@ -1019,7 +1019,7 @@
- install: $(inst_libdir)/libc.so
- $(inst_libdir)/libc.so: $(common-objpfx)format.lds \
- 			$(common-objpfx)libc.so$(libc.so-version) \
--			$(inst_libdir)/$(patsubst %,$(libtype.oS),\
-+			$(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
- 						  $(libprefix)$(libc-name)) \
- 			$(+force)
- 	(echo '/* GNU ld script';\
-@@ -1027,7 +1027,7 @@
- 	 echo '   the static library, so try that secondarily.  */';\
- 	 cat $<; \
- 	 echo 'GROUP ( $(slibdir)/libc.so$(libc.so-version)' \
--	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)$(libc-name))'\
-+	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)$(libc-name))'\
- 	      ' AS_NEEDED (' $(slibdir)/$(rtld-installed-name) ') )' \
- 	) > $@.new
- 	mv -f $@.new $@
-diff -urN a/nptl/Makefile b/nptl/Makefile
---- a/nptl/Makefile	2014-02-22 01:19:35.178687100 +0000
-+++ b/nptl/Makefile	2014-02-22 01:20:23.638340700 +0000
-@@ -377,7 +377,7 @@
- 
- $(inst_libdir)/libpthread.so: $(common-objpfx)format.lds \
- 			      $(objpfx)libpthread.so$(libpthread.so-version) \
--			      $(inst_libdir)/$(patsubst %,$(libtype.oS),\
-+			      $(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
- 							$(libprefix)pthread) \
- 			      $(+force)
- 	(echo '/* GNU ld script';\
-@@ -385,7 +385,7 @@
- 	 echo '   the static library, so try that secondarily.  */';\
- 	 cat $<; \
- 	 echo 'GROUP ( $(slibdir)/libpthread.so$(libpthread.so-version)' \
--	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)pthread)'\
-+	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)pthread)'\
- 	      ')' \
- 	) > $@.new
- 	mv -f $@.new $@
-diff -urN a/sysdeps/i386/i686/Makefile b/sysdeps/i386/i686/Makefile
---- a/sysdeps/i386/i686/Makefile	2014-02-22 01:19:36.177313900 +0000
-+++ b/sysdeps/i386/i686/Makefile	2014-02-22 01:20:23.639840900 +0000
-@@ -16,12 +16,12 @@
- CFLAGS-.op += -Wa,-mtune=i686
- CFLAGS-.og += -Wa,-mtune=i686
- CFLAGS-.ob += -Wa,-mtune=i686
--CFLAGS-.oS += -Wa,-mtune=i686
-+CFLAGS-.oSTATIC += -Wa,-mtune=i686
- 
- ASFLAGS-.o += -Wa,-mtune=i686
- ASFLAGS-.os += -Wa,-mtune=i686
- ASFLAGS-.op += -Wa,-mtune=i686
- ASFLAGS-.og += -Wa,-mtune=i686
- ASFLAGS-.ob += -Wa,-mtune=i686
--ASFLAGS-.oS += -Wa,-mtune=i686
-+ASFLAGS-.oSTATIC += -Wa,-mtune=i686
- endif
-diff -urN a/sysdeps/sparc/sparc32/sparcv9/Makefile b/sysdeps/sparc/sparc32/sparcv9/Makefile
---- a/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-02-22 01:19:37.093930300 +0000
-+++ b/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-02-22 01:20:23.641341100 +0000
-@@ -10,4 +10,4 @@
- ASFLAGS-.op += -Wa,-Av9a
- ASFLAGS-.og += -Wa,-Av9a
- ASFLAGS-.ob += -Wa,-Av9a
--ASFLAGS-.oS += -Wa,-Av9a
-+ASFLAGS-.oSTATIC += -Wa,-Av9a
diff --git a/patches/glibc/2.15/140-MSYS-Hack-force-ln-s.patch b/patches/glibc/2.15/140-MSYS-Hack-force-ln-s.patch
deleted file mode 100644
index de7d34e..0000000
--- a/patches/glibc/2.15/140-MSYS-Hack-force-ln-s.patch
+++ /dev/null
@@ -1,39 +0,0 @@
-diff -urN a/configure b/configure
---- a/configure	2014-02-22 01:19:33.578483900 +0000
-+++ b/configure	2014-02-22 01:22:45.415844200 +0000
-@@ -4475,6 +4475,16 @@
- $as_echo "no, using $LN_S" >&6; }
- fi
- 
-+# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
-+# eglibc, whereas cp -r doesn't.
-+case "$build_os" in
-+*mingw*)
-+  as_ln_s='ln -s'
-+  LN_S=$as_ln_s
-+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&5
-+$as_echo "$as_me: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&2;}
-+  ;;
-+esac
- 
- # Was a --with-binutils option given?
- if test -n "$path_binutils"; then
-diff -urN a/configure.in b/configure.in
---- a/configure.in	2014-02-22 01:19:33.578984000 +0000
-+++ b/configure.in	2014-02-22 01:22:45.421845000 +0000
-@@ -992,6 +992,15 @@
-   INSTALL='\$(..)./scripts/install-sh -c'
- fi
- AC_PROG_LN_S
-+# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
-+# eglibc, whereas cp -r doesn't.
-+case "$build_os" in
-+*mingw*)
-+  as_ln_s='ln -s'
-+  LN_S=$as_ln_s
-+  AC_MSG_WARN(Hacked as_ln_s and LN_S to 'ln -s' for MSYS2)
-+  ;;
-+esac
- 
- LIBC_PROG_BINUTILS
- AC_SUBST(MIG)dnl Needed by sysdeps/mach/configure.in
diff --git a/patches/glibc/2.15/150-0095_all_glibc-2.15-ctors-dtors-test.patch b/patches/glibc/2.15/150-0095_all_glibc-2.15-ctors-dtors-test.patch
deleted file mode 100644
index 0d00a83..0000000
--- a/patches/glibc/2.15/150-0095_all_glibc-2.15-ctors-dtors-test.patch
+++ /dev/null
@@ -1,50 +0,0 @@
-this is a stripped down version of the upstream commit to work with glibc-2.15
-
-https://bugs.gentoo.org/413561
-
-From 07037eeb43ca1e0ac2802e3a1492cecf869c63c6 Mon Sep 17 00:00:00 2001
-From: Joseph Myers <joseph@codesourcery.com>
-Date: Thu, 8 Mar 2012 00:17:27 +0000
-Subject: [PATCH] Fix .ctors/.dtors header configure test for bootstrapping.
-
-2012-03-08  Joseph Myers  <joseph@codesourcery.com>
-
-	* aclocal.m4 (LIBC_TRY_LINK_STATIC): New macro.
-	* configure.in (libc_cv_preinit_array): Use LIBC_TRY_LINK_STATIC.
-	(libc_cv_ctors_header): Likewise.  Use asm ("") instead of calling
-	puts.
-	* configure: Regenerated.
-
---- a/configure	2014-01-23 21:45:19.176281900 +0000
-+++ b/configure	2014-01-23 21:44:36.812858900 +0000
-@@ -6035,18 +6035,21 @@
-     cat confdefs.h - <<_ACEOF >conftest.$ac_ext
- /* end confdefs.h.  */
- 
--int
--main ()
--{
-+int _start (void) { return 0; }
-+int __start (void) { return 0; }
- 
--__attribute__ ((constructor)) void ctor (void) { puts("ctor"); }
--__attribute__ ((destructor))  void dtor (void) { puts("dtor"); }
-+__attribute__ ((constructor)) void ctor (void) { asm(""); }
-+__attribute__ ((destructor))  void dtor (void) { asm(""); }
- 
--  ;
--  return 0;
--}
- _ACEOF
--if ac_fn_c_try_link "$LINENO"; then :
-+if { ac_try='${CC-cc} $CFLAGS $CPPFLAGS $LDFLAGS -o conftest
-+		       conftest.c -static -nostartfiles -nostdlib
-+		       1>&5'
-+  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
-+  (eval $ac_try) 2>&5
-+  ac_status=$?
-+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
-+  test $ac_status = 0; }; }; then :
-         if $READELF -WS conftest$ac_exeext | $AWK '
- 	{ gsub(/\[ */, "[") }
- 	$2 == ".ctors" || $2 == ".dtors" {
diff --git a/patches/glibc/2.15/160-Remove-test-for-__builtin_expect.patch b/patches/glibc/2.15/160-Remove-test-for-__builtin_expect.patch
deleted file mode 100644
index 852b97a..0000000
--- a/patches/glibc/2.15/160-Remove-test-for-__builtin_expect.patch
+++ /dev/null
@@ -1,74 +0,0 @@
-diff -urN a/configure b/configure
---- a/configure	2014-01-23 21:57:24.243753400 +0000
-+++ b/configure	2014-01-24 00:48:02.470346500 +0000
-@@ -7034,38 +7034,6 @@
- fi
- fi
- 
--{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for __builtin_expect" >&5
--$as_echo_n "checking for __builtin_expect... " >&6; }
--if ${libc_cv_gcc_builtin_expect+:} false; then :
--  $as_echo_n "(cached) " >&6
--else
--  cat > conftest.c <<EOF
--#line $LINENO "configure"
--int foo (int a)
--{
--  a = __builtin_expect (a, 10);
--  return a == 10 ? 0 : 1;
--}
--EOF
--if { ac_try='${CC-cc} $CFLAGS $CPPFLAGS $LDFLAGS -nostdlib -nostartfiles
--			    -o conftest conftest.c -lgcc >&5'
--  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
--  (eval $ac_try) 2>&5
--  ac_status=$?
--  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
--  test $ac_status = 0; }; }; then
--  libc_cv_gcc_builtin_expect=yes
--else
--  libc_cv_gcc_builtin_expect=no
--fi
--rm -f conftest*
--fi
--{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $libc_cv_gcc_builtin_expect" >&5
--$as_echo "$libc_cv_gcc_builtin_expect" >&6; }
--if test "$libc_cv_gcc_builtin_expect" = no; then
--  as_fn_error $? "support for __builtin_expect needed" "$LINENO" 5
--fi
--
- { $as_echo "$as_me:${as_lineno-$LINENO}: checking for __builtin_memset" >&5
- $as_echo_n "checking for __builtin_memset... " >&6; }
- if ${libc_cv_gcc_builtin_memset+:} false; then :
-diff -urN a/configure.in b/configure.in
---- a/configure.in	2014-01-23 21:57:23.321700700 +0000
-+++ b/configure.in	2014-01-24 00:47:37.690929200 +0000
-@@ -2131,28 +2131,6 @@
- fi
- fi
- 
--dnl Check whether compiler understands __builtin_expect.
--AC_CACHE_CHECK(for __builtin_expect, libc_cv_gcc_builtin_expect,
--[cat > conftest.c <<EOF
--#line $LINENO "configure"
--int foo (int a)
--{
--  a = __builtin_expect (a, 10);
--  return a == 10 ? 0 : 1;
--}
--EOF
--dnl No \ in command here because it ends up inside ''.
--if AC_TRY_COMMAND([${CC-cc} $CFLAGS $CPPFLAGS $LDFLAGS -nostdlib -nostartfiles
--			    -o conftest conftest.c -lgcc >&AS_MESSAGE_LOG_FD]); then
--  libc_cv_gcc_builtin_expect=yes
--else
--  libc_cv_gcc_builtin_expect=no
--fi
--rm -f conftest*])
--if test "$libc_cv_gcc_builtin_expect" = no; then
--  AC_MSG_ERROR([support for __builtin_expect needed])
--fi
--
- AC_CACHE_CHECK(for __builtin_memset, libc_cv_gcc_builtin_memset, [dnl
- cat > conftest.c <<\EOF
- void zero (void *x)
diff --git a/patches/glibc/2.15/170-100-fix_cpuid_h_check-from-OpenWrt.patch b/patches/glibc/2.15/170-100-fix_cpuid_h_check-from-OpenWrt.patch
deleted file mode 100644
index 255c87f..0000000
--- a/patches/glibc/2.15/170-100-fix_cpuid_h_check-from-OpenWrt.patch
+++ /dev/null
@@ -1,22 +0,0 @@
---- a/sysdeps/i386/configure.in
-+++ b/sysdeps/i386/configure.in
-@@ -2,7 +2,7 @@
- # Local configure fragment for sysdeps/i386.
- 
- AC_HEADER_CHECK([cpuid.h], ,
--  [AC_MSG_ERROR([gcc must provide the <cpuid.h> header])])
-+  [AC_MSG_ERROR([gcc must provide the <cpuid.h> header])], [])
- 
- AC_CACHE_CHECK(if -g produces usable source locations for assembler-with-cpp,
- 	       libc_cv_cpp_asm_debuginfo, [dnl
---- a/sysdeps/i386/configure.orig	2014-01-24 09:13:37.232015700 +0000
-+++ b/sysdeps/i386/configure	2014-01-24 09:14:32.788193300 +0000
-@@ -632,7 +632,7 @@
- done
- 
- 
--ac_fn_c_check_header_mongrel "$LINENO" "cpuid.h" "ac_cv_header_cpuid_h" "$ac_includes_default"
-+ac_fn_c_check_header_mongrel "$LINENO" "cpuid.h" "ac_cv_header_cpuid_h" ""
- if test "x$ac_cv_header_cpuid_h" = xyes; then :
- 
- else
diff --git a/patches/glibc/2.15/180-Fix-confstr-use-of-local-buffer-outside-its-extent.patch b/patches/glibc/2.15/180-Fix-confstr-use-of-local-buffer-outside-its-extent.patch
deleted file mode 100644
index 04e2a0b..0000000
--- a/patches/glibc/2.15/180-Fix-confstr-use-of-local-buffer-outside-its-extent.patch
+++ /dev/null
@@ -1,35 +0,0 @@
-diff -urN a/posix/confstr.c b/posix/confstr.c
---- a/posix/confstr.c	2012-01-01 12:16:32.000000000 +0000
-+++ b/posix/confstr.c	2014-02-18 23:35:58.722876213 +0000
-@@ -35,6 +35,7 @@
- {
-   const char *string = "";
-   size_t string_len = 1;
-+  char restenvs[4 * sizeof "POSIX_V7_LPBIG_OFFBIG"];
- 
-   switch (name)
-     {
-@@ -55,7 +56,6 @@
- 
- 	 Currently this means all environment which the system allows.  */
-       {
--	char restenvs[4 * sizeof "POSIX_V7_LPBIG_OFFBIG"];
- 
- 	string_len = 0;
- #ifndef _POSIX_V7_ILP32_OFF32
-@@ -118,7 +118,6 @@
- 
- 	 Currently this means all environment which the system allows.  */
-       {
--	char restenvs[4 * sizeof "POSIX_V6_LPBIG_OFFBIG"];
- 
- 	string_len = 0;
- #ifndef _POSIX_V6_ILP32_OFF32
-@@ -181,7 +180,6 @@
- 
- 	 Currently this means all environment which the system allows.  */
-       {
--	char restenvs[4 * sizeof "XBS5_LPBIG_OFFBIG"];
- 
- 	string_len = 0;
- #ifndef _XBS5_ILP32_OFF32
diff --git a/patches/glibc/2.15/200-make-4.patch b/patches/glibc/2.15/200-make-4.patch
new file mode 100644
index 0000000..416c9fc
--- /dev/null
+++ b/patches/glibc/2.15/200-make-4.patch
@@ -0,0 +1,24 @@
+diff -urN a/configure b/configure
+--- a/configure	2012-03-19 14:56:58.000000000 +0000
++++ b/configure	2014-02-23 13:57:13.779692400 +0000
+@@ -4985,7 +4985,7 @@
+   ac_prog_version=`$MAKE --version 2>&1 | sed -n 's/^.*GNU Make[^0-9]*\([0-9][0-9.]*\).*$/\1/p'`
+   case $ac_prog_version in
+     '') ac_prog_version="v. ?.??, bad"; ac_verc_fail=yes;;
+-    3.79* | 3.[89]*)
++    3.79* | 3.[89]* | 4.*)
+        ac_prog_version="$ac_prog_version, ok"; ac_verc_fail=no;;
+     *) ac_prog_version="$ac_prog_version, bad"; ac_verc_fail=yes;;
+ 
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2012-01-01 12:16:32.000000000 +0000
++++ b/configure.in	2014-02-23 13:57:13.782192700 +0000
+@@ -1004,7 +1004,7 @@
+   critic_missing="$critic_missing gcc")
+ AC_CHECK_PROG_VER(MAKE, gnumake gmake make, --version,
+   [GNU Make[^0-9]*\([0-9][0-9.]*\)],
+-  [3.79* | 3.[89]*], critic_missing="$critic_missing make")
++  [3.79* | 3.[89]* | 4.*], critic_missing="$critic_missing make")
+ 
+ AC_CHECK_PROG_VER(MSGFMT, gnumsgfmt gmsgfmt msgfmt, --version,
+   [GNU gettext.* \([0-9]*\.[0-9.]*\)],
diff --git a/patches/glibc/2.15/210-configure-Default-to-CPP-CC--E-unless-overridden.patch b/patches/glibc/2.15/210-configure-Default-to-CPP-CC--E-unless-overridden.patch
new file mode 100644
index 0000000..8f476e9
--- /dev/null
+++ b/patches/glibc/2.15/210-configure-Default-to-CPP-CC--E-unless-overridden.patch
@@ -0,0 +1,253 @@
+From bb931195fe780bb63e3d57d0742abad1d2128424 Mon Sep 17 00:00:00 2001
+From: Thomas Schwinge <thomas@codesourcery.com>
+Date: Fri, 25 Jan 2013 12:33:19 +0100
+Subject: [PATCH] configure: Default to CPP="$CC -E" unless overridden.
+
+---
+ ChangeLog    |    5 ++
+ configure    |  173 ++--------------------------------------------------------
+ configure.in |   17 ++++++
+ 3 files changed, 28 insertions(+), 167 deletions(-)
+
+diff -urN a/ChangeLog b/ChangeLog
+--- a/ChangeLog	2014-02-23 13:57:17.775699900 +0000
++++ b/ChangeLog	2014-02-23 13:57:28.400049000 +0000
+@@ -1,3 +1,8 @@
++2013-01-25  Thomas Schwinge  <thomas@codesourcery.com>
++
++        * configure.in (AC_PROG_CPP): New definition.
++        * configure: Regenerate.
++
+ 2012-01-01  Ulrich Drepper  <drepper@gmail.com>
+ 
+ 	* posix/getconf.c: Update copyright year.
+diff -urN a/configure b/configure
+--- a/configure	2014-02-23 13:57:17.787201300 +0000
++++ b/configure	2014-02-23 13:57:28.405549700 +0000
+@@ -1599,43 +1599,6 @@
+ 
+ } # ac_fn_c_try_compile
+ 
+-# ac_fn_c_try_cpp LINENO
+-# ----------------------
+-# Try to preprocess conftest.$ac_ext, and return whether this succeeded.
+-ac_fn_c_try_cpp ()
+-{
+-  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+-  if { { ac_try="$ac_cpp conftest.$ac_ext"
+-case "(($ac_try" in
+-  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+-  *) ac_try_echo=$ac_try;;
+-esac
+-eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+-$as_echo "$ac_try_echo"; } >&5
+-  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.err
+-  ac_status=$?
+-  if test -s conftest.err; then
+-    grep -v '^ *+' conftest.err >conftest.er1
+-    cat conftest.er1 >&5
+-    mv -f conftest.er1 conftest.err
+-  fi
+-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+-  test $ac_status = 0; } > conftest.i && {
+-	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+-	 test ! -s conftest.err
+-       }; then :
+-  ac_retval=0
+-else
+-  $as_echo "$as_me: failed program was:" >&5
+-sed 's/^/| /' conftest.$ac_ext >&5
+-
+-    ac_retval=1
+-fi
+-  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
+-  as_fn_set_status $ac_retval
+-
+-} # ac_fn_c_try_cpp
+-
+ # ac_fn_cxx_try_compile LINENO
+ # ----------------------------
+ # Try to compile conftest.$ac_ext, and return whether this succeeded.
+@@ -2355,6 +2318,11 @@
+ 
+ 
+ 
++# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
++# here to work around the Autoconf issue discussed in
++# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
++# AC_PROG_CPP
++
+ 
+ 
+ subdirs="$subdirs "
+@@ -3069,142 +3037,13 @@
+ 
+ fi
+ 
+-ac_ext=c
+-ac_cpp='$CPP $CPPFLAGS'
+-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+-ac_compiler_gnu=$ac_cv_c_compiler_gnu
+-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor" >&5
+-$as_echo_n "checking how to run the C preprocessor... " >&6; }
+ # On Suns, sometimes $CPP names a directory.
+ if test -n "$CPP" && test -d "$CPP"; then
+   CPP=
+ fi
+ if test -z "$CPP"; then
+-  if ${ac_cv_prog_CPP+:} false; then :
+-  $as_echo_n "(cached) " >&6
+-else
+-      # Double quotes because CPP needs to be expanded
+-    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
+-    do
+-      ac_preproc_ok=false
+-for ac_c_preproc_warn_flag in '' yes
+-do
+-  # Use a header file that comes with gcc, so configuring glibc
+-  # with a fresh cross-compiler works.
+-  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+-  # <limits.h> exists even on freestanding compilers.
+-  # On the NeXT, cc -E runs the code through the compiler's parser,
+-  # not just through cpp. "Syntax error" is here to catch this case.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#ifdef __STDC__
+-# include <limits.h>
+-#else
+-# include <assert.h>
+-#endif
+-		     Syntax error
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-
+-else
+-  # Broken: fails on valid input.
+-continue
+-fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-  # OK, works on sane cases.  Now check whether nonexistent headers
+-  # can be detected and how.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#include <ac_nonexistent.h>
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-  # Broken: success on invalid input.
+-continue
+-else
+-  # Passes both tests.
+-ac_preproc_ok=:
+-break
+-fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-done
+-# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+-rm -f conftest.i conftest.err conftest.$ac_ext
+-if $ac_preproc_ok; then :
+-  break
+-fi
+-
+-    done
+-    ac_cv_prog_CPP=$CPP
+-
+-fi
+-  CPP=$ac_cv_prog_CPP
+-else
+-  ac_cv_prog_CPP=$CPP
+-fi
+-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $CPP" >&5
+-$as_echo "$CPP" >&6; }
+-ac_preproc_ok=false
+-for ac_c_preproc_warn_flag in '' yes
+-do
+-  # Use a header file that comes with gcc, so configuring glibc
+-  # with a fresh cross-compiler works.
+-  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+-  # <limits.h> exists even on freestanding compilers.
+-  # On the NeXT, cc -E runs the code through the compiler's parser,
+-  # not just through cpp. "Syntax error" is here to catch this case.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#ifdef __STDC__
+-# include <limits.h>
+-#else
+-# include <assert.h>
+-#endif
+-		     Syntax error
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-
+-else
+-  # Broken: fails on valid input.
+-continue
++  CPP="$CC -E"
+ fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-  # OK, works on sane cases.  Now check whether nonexistent headers
+-  # can be detected and how.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#include <ac_nonexistent.h>
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-  # Broken: success on invalid input.
+-continue
+-else
+-  # Passes both tests.
+-ac_preproc_ok=:
+-break
+-fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-done
+-# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+-rm -f conftest.i conftest.err conftest.$ac_ext
+-if $ac_preproc_ok; then :
+-
+-else
+-  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+-$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+-as_fn_error $? "C preprocessor \"$CPP\" fails sanity check
+-See \`config.log' for more details" "$LINENO" 5; }
+-fi
+-
+-ac_ext=c
+-ac_cpp='$CPP $CPPFLAGS'
+-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+-ac_compiler_gnu=$ac_cv_c_compiler_gnu
+ 
+ # We need the C++ compiler only for testing.
+ ac_ext=cpp
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-23 13:57:17.787701400 +0000
++++ b/configure.in	2014-02-23 13:57:28.408050000 +0000
+@@ -5,6 +5,23 @@
+ AC_CONFIG_HEADERS([config.h])
+ AC_CONFIG_AUX_DIR([scripts])
+ 
++# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
++# here to work around the Autoconf issue discussed in
++# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
++AC_DEFUN([AC_PROG_CPP],
++[AC_REQUIRE([AC_PROG_CC])dnl
++AC_ARG_VAR([CPP],      [C preprocessor])dnl
++_AC_ARG_VAR_CPPFLAGS()dnl
++# On Suns, sometimes $CPP names a directory.
++if test -n "$CPP" && test -d "$CPP"; then
++  CPP=
++fi
++if test -z "$CPP"; then
++  CPP="$CC -E"
++fi
++AC_SUBST(CPP)dnl
++])# AC_PROG_CPP
++
+ dnl This is here so we can set $subdirs directly based on configure fragments.
+ AC_CONFIG_SUBDIRS()
+ 
diff --git a/patches/glibc/2.15/220-Fix-crossrpc-to-build-on-non-Linux.patch b/patches/glibc/2.15/220-Fix-crossrpc-to-build-on-non-Linux.patch
new file mode 100644
index 0000000..b303ea3
--- /dev/null
+++ b/patches/glibc/2.15/220-Fix-crossrpc-to-build-on-non-Linux.patch
@@ -0,0 +1,247 @@
+diff -urN a/sunrpc/rpc/types.h b/sunrpc/rpc/types.h
+--- a/sunrpc/rpc/types.h	2014-02-23 13:57:34.871370700 +0000
++++ b/sunrpc/rpc/types.h	2014-02-23 13:57:43.139920700 +0000
+@@ -69,6 +69,7 @@
+ #include <sys/types.h>
+ #endif
+ 
++#ifdef __linux__
+ #ifndef __u_char_defined
+ typedef __u_char u_char;
+ typedef __u_short u_short;
+@@ -84,11 +85,14 @@
+ typedef __caddr_t caddr_t;
+ # define __daddr_t_defined
+ #endif
++#endif
+ 
+ #include <sys/time.h>
+ #include <sys/param.h>
+ 
++#ifndef _WIN32
+ #include <netinet/in.h>
++#endif
+ 
+ #ifndef INADDR_LOOPBACK
+ #define       INADDR_LOOPBACK         (u_long)0x7F000001
+diff -urN a/sunrpc/rpc_main.c b/sunrpc/rpc_main.c
+--- a/sunrpc/rpc_main.c	2014-02-23 13:57:34.880371900 +0000
++++ b/sunrpc/rpc_main.c	2014-02-23 13:57:43.142421000 +0000
+@@ -38,13 +38,19 @@
+ #include <stdio.h>
+ #include <string.h>
+ #include <unistd.h>
++#ifndef IS_IN_build
+ #include <libintl.h>
++#endif
+ #include <ctype.h>
+ #include <sys/types.h>
+ #include <sys/param.h>
+ #include <sys/file.h>
+ #include <sys/stat.h>
++#ifndef _WIN32
+ #include <sys/wait.h>
++#else
++#include <windows.h>
++#endif
+ #include "rpc_parse.h"
+ #include "rpc_util.h"
+ #include "rpc_scan.h"
+@@ -53,6 +59,33 @@
+ #include "../version.h"
+ #define PACKAGE _libc_intl_domainname
+ 
++#ifdef _WIN32
++#define rindex(_dest, _src) strrchr((_dest), (_src))
++
++char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src);
++
++char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src)
++{
++  if (src == NULL)
++      return NULL;
++  return strcpy(dest, src) + strlen(dest);
++}
++#endif /* _WIN32 */
++
++#if defined(_WIN32) || defined(__BSD__)
++
++char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len);
++
++char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len)
++{
++  size_t min_len = strlen(src);
++  if (min_len > len)
++    min_len = len;
++  return strncpy(dest, src, len) + min_len;
++}
++
++#endif /* defined(_WIN32) || defined(__BSD__) */
++
+ #define EXTEND	1		/* alias for TRUE */
+ #define DONT_EXTEND	0	/* alias for FALSE */
+ 
+@@ -83,7 +116,11 @@
+ static const char *CPP = SUNOS_CPP;
+ static const char CPPFLAGS[] = "-C";
+ static char *pathbuf;
++#ifdef _WIN32
++static HANDLE cpp_pid;
++#else
+ static int cpp_pid;
++#endif
+ static const char *allv[] =
+ {
+   "rpcgen", "-s", "udp", "-s", "tcp"
+@@ -335,6 +372,20 @@
+ {
+   struct stat buf;
+ 
++  /* Avoid trying to directly execute a bash script on Windows. */
++#ifdef _WIN32
++  char* CPPENVV = getenv("CPP");
++  if (CPPENVV)
++    {
++      CPP = (char*)malloc(strlen(CPPENVV)+1);
++      strcpy((char*)CPP, CPPENVV);
++      /* Don't bother checking that it exists with stat64 as
++       * we'd have to check in the path, also it usually ends
++       * with a few arguments. */
++      return;
++    }
++#endif
++
+   if (stat (CPP, &buf) < 0)
+     {				/* /lib/cpp or explicit cpp does not exist */
+       if (cppDefined)
+@@ -354,9 +405,122 @@
+     }
+ }
+ 
++#ifdef _WIN32
++/*
++ * Open input file with given define for C-preprocessor
++ */
++static void
++open_input (const char *infile, const char *define)
++{
++  int argi;
++  int argcc = 0;
++  LPSTR argsall;
++  HANDLE StdOutHandle;
++  HANDLE StdErrHandle;
++  HANDLE ReadPipe;
++  HANDLE WritePipe;
++  SECURITY_ATTRIBUTES SecAttr;
++  STARTUPINFO StartupInfo;
++  PROCESS_INFORMATION ProcessInfo;
++  DWORD Status;
++
++  find_cpp ();
++  putarg (0, CPP);
++  putarg (1, CPPFLAGS);
++  addarg (define);
++  if (infile)
++    addarg (infile);
++  addarg ((char *) NULL);
++  for (argi = 0; argi < argcount - 1; ++argi)
++    {
++      argcc += strlen(arglist[argi])+2;
++    }
++  argsall = (LPSTR)alloca(argcc + 1);
++  if (!argsall)
++    {
++      fprintf (stderr, _ ("cannot alloca for argsall\n"));
++      exit (1);
++    }
++  argsall[0] = '\0';
++  for (argi = 0; argi < argcount - 1; ++argi)
++    {
++      strcat((char*)argsall, arglist[argi]);
++      strcat((char*)argsall, " ");
++    }
++
++  memset(&SecAttr,     0, sizeof(SecAttr));
++  memset(&StartupInfo, 0, sizeof(StartupInfo));
++  memset(&ProcessInfo, 0, sizeof(ProcessInfo));
++
++  SecAttr.nLength = sizeof(SecAttr);
++  SecAttr.bInheritHandle = TRUE;
++
++  Status = CreatePipe( &ReadPipe, &WritePipe, &SecAttr, 0 );
++  if (!Status)
++    {
++      fprintf (stderr, _ ("cannot CreatePipe: GetLastError() -> %d\n"), GetLastError());
++      exit (1);
++    }
++
++  SetHandleInformation( ReadPipe, HANDLE_FLAG_INHERIT, 0 );
++
++  /*
++  StdOutHandle = GetStdHandle( STD_OUTPUT_HANDLE );
++  StdErrHandle = GetStdHandle( STD_ERROR_HANDLE );
++  if (StdOutHandle != INVALID_HANDLE_VALUE) {
++      SetHandleInformation( StdOutHandle, HANDLE_FLAG_INHERIT, 0 );
++  }
++  if (StdErrHandle != INVALID_HANDLE_VALUE) {
++      SetHandleInformation( StdErrHandle, HANDLE_FLAG_INHERIT, 0 );
++  }
++  */
++
++  StartupInfo.cb         = sizeof(StartupInfo);
++  StartupInfo.hStdInput  = GetStdHandle( STD_INPUT_HANDLE );
++  StartupInfo.hStdOutput = WritePipe;
++  StartupInfo.hStdError  = GetStdHandle( STD_ERROR_HANDLE );
++  StartupInfo.dwFlags    = STARTF_USESTDHANDLES;
++
++  Status = CreateProcess(
++          NULL,           /* lpApplicationName */
++          argsall,        /* lpCommandLine */
++          NULL,           /* lpProcessAttributes */
++          NULL,           /* lpThreadAttributes */
++          TRUE,           /* bInheritHandles */
++          0,              /* dwCreationFlags */
++          NULL,           /* lpEnvironment */
++          NULL,           /* lpCurrentDirectory */
++          &StartupInfo,   /* lpStartupInfo */
++          &ProcessInfo ); /* lpProcessInformation */
++
++  CloseHandle( WritePipe );
++  if (!Status)
++    {
++      fprintf (stderr, _ ("cannot find C preprocessor: %s, GetLastError() -> %d\n"), CPP, GetLastError());
++      exit (1);
++    }
++  int fd = _open_osfhandle((intptr_t)ReadPipe, _O_APPEND | _O_RDONLY);
++  if(fd != -1)
++    {
++      fin = _fdopen(fd, "a+");
++    }
++  cpp_pid = ProcessInfo.hProcess;
++}
++
++/* Close the connection to the C-preprocessor and check for successfull
++   termination.  */
++static void
++close_input (void)
++{
++  WaitForSingleObject(cpp_pid, INFINITE);
++}
++
++#else
++
+ /*
+  * Open input file with given define for C-preprocessor
+  */
++
+ static void
+ open_input (const char *infile, const char *define)
+ {
+@@ -424,6 +588,7 @@
+       crash ();
+     }
+ }
++#endif
+ 
+ /* valid tirpc nettypes */
+ static const char *valid_ti_nettypes[] =
diff --git a/patches/glibc/2.15/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch b/patches/glibc/2.15/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
new file mode 100644
index 0000000..a03798a
--- /dev/null
+++ b/patches/glibc/2.15/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
@@ -0,0 +1,113 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-04-26 17:52:36.457732700 +0100
++++ b/configure	2014-04-26 17:53:09.399616800 +0100
+@@ -669,6 +669,7 @@
+ libc_cv_gcc_static_libgcc
+ CXX_SYSINCLUDES
+ SYSINCLUDES
++sysheaders
+ AUTOCONF
+ READELF
+ SED
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-04-26 17:52:36.457732700 +0100
++++ b/configure.in	2014-04-26 17:53:09.452619900 +0100
+@@ -1089,6 +1089,7 @@
+     done
+   fi
+ fi
++AC_SUBST(sysheaders)
+ AC_SUBST(SYSINCLUDES)
+ AC_SUBST(CXX_SYSINCLUDES)
+ 
+diff -urN a/elf/Makefile b/elf/Makefile
+--- a/elf/Makefile	2014-04-26 17:52:36.551738100 +0100
++++ b/elf/Makefile	2014-04-26 17:53:09.455620100 +0100
+@@ -145,6 +145,15 @@
+ ld-map		= $(common-objpfx)ld.map
+ endif
+ 
++# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
++# suffix of w means Windows.
++uname_o := $(shell uname -o)
++ifneq (, $(findstring Msys, $(uname_o)))
++common-objpfxw = $(shell cd $(common-objpfx); pwd -W)/
++else
++common-objpfxw = $(common-objpfx)
++endif
++
+ ifeq (yes,$(build-shared))
+ extra-objs	= $(all-rtld-routines:%=%.os) soinit.os sofini.os interp.os
+ generated	+= librtld.os dl-allobjs.os ld.so ldd
+@@ -381,15 +390,15 @@
+ 
+ $(objpfx)librtld.mk: $(objpfx)librtld.map Makefile
+ 	LC_ALL=C \
+-	sed -n 's@^$(common-objpfx)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
++	sed -n 's@^$(common-objpfxw)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
+ 	    $< | \
+ 	while read lib file; do \
+ 	  case $$lib in \
+ 	  libc_pic.a) \
+ 	    LC_ALL=C fgrep -l /$$file \
+-		  $(common-objpfx)stamp.os $(common-objpfx)*/stamp.os | \
++		  $(common-objpfxw)stamp.os $(common-objpfxw)*/stamp.os | \
+ 	    LC_ALL=C \
+-	    sed 's@^$(common-objpfx)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
++	    sed 's@^$(common-objpfxw)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
+ 	    ;; \
+ 	  */*.a) \
+ 	    echo rtld-$${lib%%/*} += $$file ;; \
+diff -urN a/Makefile.in b/Makefile.in
+--- a/Makefile.in	2014-04-26 17:52:37.109770000 +0100
++++ b/Makefile.in	2014-04-26 17:53:54.577200900 +0100
+@@ -1,11 +1,12 @@
+ srcdir = @srcdir@
++sysheaders = @sysheaders@
+ 
+ # Uncomment the line below if you want to do parallel build.
+ # PARALLELMFLAGS = -j 4
+ 
+ all .DEFAULT:
+-	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` $@
++	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` sysheaders=$(sysheaders) $@
+ 
+ install:
+ 	LANGUAGE=C LC_ALL=C; export LANGUAGE LC_ALL; \
+-	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` $@
++	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` sysheaders=$(sysheaders) $@
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2014-04-26 17:52:37.109770000 +0100
++++ b/Makerules	2014-04-26 17:53:09.460620300 +0100
+@@ -398,11 +398,29 @@
+ mv -f $(@:.d=.T) $@ $(generate-md5)
+ endef
+ 
++# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
++# suffix of w means Windows, and m means MSYS2.
++uname_o := $(shell uname -o)
++sysroot = $(shell echo `$(CC) -print-file-name="include"`)
++ifneq (, $(findstring Msys, $(uname_o)))
++common-objpfxw = $(shell cd $(common-objpfx); pwd -W)/
++sysheadersw = $(shell cd $(sysheaders); pwd -W)
++sysrootm = $(shell cd $(sysroot); pwd)
++else
++common-objpfxw = $(common-objpfx)
++sysheadersw = $(sysheaders)
++sysrootm = $(sysroot)
++endif
++
+ ifneq (,$(objpfx))
+ # Continuation lines here are dangerous because they introduce spaces!
+ define sed-remove-objpfx
+--e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfx)))@ $$(common-objpfx)@g' \
+--e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfx)))@$$(common-objpfx)@g'
++-e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfxw)))@ $$(common-objpfx)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfxw)))@$$(common-objpfx)@g' \
++-e 's@ $(subst .,\.,$(subst @,\@,$(sysheadersw)))@ $(sysheaders)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(sysheadersw)))@$(sysheaders)@g' \
++-e 's@ $(subst .,\.,$(subst @,\@,$(sysroot)))@ $(sysrootm)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(sysroot)))@$(sysrootm)@g'
+ endef
+ endif
+ 
diff --git a/patches/glibc/2.15/240-Rename-extensions-for-case-insensitive-fs.patch b/patches/glibc/2.15/240-Rename-extensions-for-case-insensitive-fs.patch
new file mode 100644
index 0000000..960297c
--- /dev/null
+++ b/patches/glibc/2.15/240-Rename-extensions-for-case-insensitive-fs.patch
@@ -0,0 +1,210 @@
+diff -urN a/ChangeLog b/ChangeLog
+--- a/ChangeLog	2014-04-26 20:28:20.762196300 +0100
++++ b/ChangeLog	2014-04-26 20:29:01.669536100 +0100
+@@ -1,3 +1,8 @@
++2014-01-22  Ray Donnelly  <mingw.android@gmail.com>
++
++        * Rename .oS to .oSTATIC so that builds can be done on file
++        systems that are not both case sensitive and case preserving.
++
+ 2013-01-25  Thomas Schwinge  <thomas@codesourcery.com>
+ 
+         * configure.in (AC_PROG_CPP): New definition.
+diff -urN a/extra-lib.mk b/extra-lib.mk
+--- a/extra-lib.mk	2014-04-26 20:28:20.911204800 +0100
++++ b/extra-lib.mk	2014-04-26 20:29:01.686537100 +0100
+@@ -13,7 +13,7 @@
+ 
+ ifneq (,$($(lib)-static-only-routines))
+ ifneq (,$(filter yesyes%,$(build-shared)$(elf)$($(lib).so-version)))
+-object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oS)
++object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oSTATIC)
+ endif
+ endif
+ 
+@@ -29,7 +29,7 @@
+ 
+ # Add each flavor of library to the lists of things to build and install.
+ install-lib += $(foreach o,$(object-suffixes-$(lib)),$(lib:lib%=$(libtype$o)))
+-extra-objs += $(foreach o,$(filter-out .os .oS,$(object-suffixes-$(lib))),\
++extra-objs += $(foreach o,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))),\
+ 			$(patsubst %,%$o,$(filter-out \
+ 					   $($(lib)-shared-only-routines),\
+ 					   $(all-$(lib)-routines))))
+@@ -57,7 +57,7 @@
+ 
+ 
+ # Use o-iterator.mk to generate a rule for each flavor of library.
+-ifneq (,$(filter-out .os .oS,$(object-suffixes-$(lib))))
++ifneq (,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))))
+ define o-iterator-doit
+ $(objpfx)$(patsubst %,$(libtype$o),$(lib:lib%=%)): \
+   $(patsubst %,$(objpfx)%$o,\
+@@ -65,7 +65,7 @@
+ 			  $(all-$(lib)-routines))); \
+ 	$$(build-extra-lib)
+ endef
+-object-suffixes-left = $(filter-out .os .oS,$(object-suffixes-$(lib)))
++object-suffixes-left = $(filter-out .os .oSTATIC,$(object-suffixes-$(lib)))
+ include $(patsubst %,$(..)o-iterator.mk,$(object-suffixes-left))
+ endif
+ 
+@@ -77,9 +77,9 @@
+ 	$(build-extra-lib)
+ endif
+ 
+-ifneq (,$(filter .oS,$(object-suffixes-$(lib))))
+-$(objpfx)$(patsubst %,$(libtype.oS),$(lib:lib%=%)): \
+-  $(patsubst %,$(objpfx)%.oS,\
++ifneq (,$(filter .oSTATIC,$(object-suffixes-$(lib))))
++$(objpfx)$(patsubst %,$(libtype.oSTATIC),$(lib:lib%=%)): \
++  $(patsubst %,$(objpfx)%.oSTATIC,\
+ 	     $(filter $($(lib)-static-only-routines),\
+ 		      $(all-$(lib)-routines)))
+ 	$(build-extra-lib)
+diff -urN a/Makeconfig b/Makeconfig
+--- a/Makeconfig	2014-04-26 20:28:21.711250600 +0100
++++ b/Makeconfig	2014-04-26 20:29:01.688537200 +0100
+@@ -508,7 +508,7 @@
+ # run the linked programs.
+ link-libc = -Wl,-rpath-link=$(rpath-link) \
+ 	    $(common-objpfx)libc.so$(libc.so-version) \
+-	    $(common-objpfx)$(patsubst %,$(libtype.oS),c) \
++	    $(common-objpfx)$(patsubst %,$(libtype.oSTATIC),c) \
+ 	    $(as-needed) $(common-objpfx)elf/ld.so $(no-as-needed) $(gnulib)
+ # This is how to find at build-time things that will be installed there.
+ rpath-dirs = math elf dlfcn nss nis rt resolv crypt
+@@ -730,7 +730,7 @@
+ # The compilation rules use $(CPPFLAGS-${SUFFIX}) and $(CFLAGS-${SUFFIX})
+ # to pass different flags for each flavor.
+ libtypes = $(foreach o,$(object-suffixes-for-libc),$(libtype$o))
+-all-object-suffixes := .o .os .op .og .ob .oS
++all-object-suffixes := .o .os .op .og .ob .oSTATIC
+ object-suffixes :=
+ CPPFLAGS-.o = $(pic-default)
+ CFLAGS-.o = $(filter %frame-pointer,$(+cflags))
+@@ -790,14 +790,14 @@
+ 
+ ifeq (yes,$(build-shared))
+ # Build special library that contains the static-only routines for libc.
+-object-suffixes-for-libc += .oS
++object-suffixes-for-libc += .oSTATIC
+ 
+ # Must build the routines as PIC, though, because they can end up in (users')
+ # shared objects.  We don't want to use CFLAGS-os because users may, for
+ # example, make that processor-specific.
+-CFLAGS-.oS = $(CFLAGS-.o) $(PIC-ccflag)
+-CPPFLAGS-.oS = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
+-libtype.oS = lib%_nonshared.a
++CFLAGS-.oSTATIC = $(CFLAGS-.o) $(PIC-ccflag)
++CPPFLAGS-.oSTATIC = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
++libtype.oSTATIC = lib%_nonshared.a
+ endif
+ 
+ # The assembler can generate debug information too.
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2014-04-26 20:28:21.712250700 +0100
++++ b/Makerules	2014-04-26 20:29:21.380663500 +0100
+@@ -162,14 +162,14 @@
+ # We only generate these in the top-level makefile, to avoid any weirdness
+ # from subdir-specific makefile tweaks creeping in on an update.
+ $(common-objpfx)%.make: $(..)%.make.c $(..)Makerules $(common-before-compile)
+-	rm -f $@T $@.dT
++	rm -f $@T $@.dTEMP
+ 	(echo '# Generated from $*.make.c by Makerules.'; \
+ 	 $(CC) $(CFLAGS) $(CPPFLAGS) -E -DASSEMBLER $< \
+-	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dT \
++	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dTEMP \
+ 	 | sed -n '/@@@/{s/@@@[	 ]*\(.*\)@@@/\1/;s/[	 ]*$$//p;}'; \
+ 	 echo 'common-generated += $(@F)'; \
+-	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dT; \
+-	 rm -f $@.dT) > $@T
++	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dTEMP; \
++	 rm -f $@.dTEMP) > $@T
+ 	mv -f $@T $@
+ endif
+ 
+@@ -363,7 +363,7 @@
+ endif # $(versioning) = yes
+ endif # sysd-sorted-done
+ 
+-# Generate .dT files as we compile.
++# Generate .dTEMP files as we compile.
+ compile-mkdep-flags = -MD -MP -MF $@.dt -MT $@
+ compile-command.S = $(compile.S) $(OUTPUT_OPTION) $(compile-mkdep-flags)
+ compile-command.s = $(COMPILE.s) $< $(OUTPUT_OPTION) $(compile-mkdep-flags)
+@@ -436,7 +436,7 @@
+ # Bounded pointer thunks are only built for *.ob
+ elide-bp-thunks = $(addprefix $(bppfx),$(bp-thunks))
+ 
+-elide-routines.oS += $(filter-out $(static-only-routines),\
++elide-routines.oSTATIC += $(filter-out $(static-only-routines),\
+ 				  $(routines) $(aux) $(sysdep_routines)) \
+ 		     $(elide-bp-thunks)
+ elide-routines.os += $(static-only-routines) $(elide-bp-thunks)
+@@ -1029,7 +1029,7 @@
+ install: $(inst_libdir)/libc.so
+ $(inst_libdir)/libc.so: $(common-objpfx)format.lds \
+ 			$(common-objpfx)libc.so$(libc.so-version) \
+-			$(inst_libdir)/$(patsubst %,$(libtype.oS),\
++			$(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
+ 						  $(libprefix)$(libc-name)) \
+ 			$(+force)
+ 	(echo '/* GNU ld script';\
+@@ -1037,7 +1037,7 @@
+ 	 echo '   the static library, so try that secondarily.  */';\
+ 	 cat $<; \
+ 	 echo 'GROUP ( $(slibdir)/libc.so$(libc.so-version)' \
+-	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)$(libc-name))'\
++	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)$(libc-name))'\
+ 	      ' AS_NEEDED (' $(slibdir)/$(rtld-installed-name) ') )' \
+ 	) > $@.new
+ 	mv -f $@.new $@
+diff -urN a/nptl/Makefile b/nptl/Makefile
+--- a/nptl/Makefile	2014-04-26 20:28:21.859259100 +0100
++++ b/nptl/Makefile	2014-04-26 20:29:01.693537500 +0100
+@@ -377,7 +377,7 @@
+ 
+ $(inst_libdir)/libpthread.so: $(common-objpfx)format.lds \
+ 			      $(objpfx)libpthread.so$(libpthread.so-version) \
+-			      $(inst_libdir)/$(patsubst %,$(libtype.oS),\
++			      $(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
+ 							$(libprefix)pthread) \
+ 			      $(+force)
+ 	(echo '/* GNU ld script';\
+@@ -385,7 +385,7 @@
+ 	 echo '   the static library, so try that secondarily.  */';\
+ 	 cat $<; \
+ 	 echo 'GROUP ( $(slibdir)/libpthread.so$(libpthread.so-version)' \
+-	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)pthread)'\
++	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)pthread)'\
+ 	      ')' \
+ 	) > $@.new
+ 	mv -f $@.new $@
+diff -urN a/sysdeps/i386/i686/Makefile b/sysdeps/i386/i686/Makefile
+--- a/sysdeps/i386/i686/Makefile	2014-04-26 20:28:22.431291800 +0100
++++ b/sysdeps/i386/i686/Makefile	2014-04-26 20:29:01.695537600 +0100
+@@ -16,12 +16,12 @@
+ CFLAGS-.op += -Wa,-mtune=i686
+ CFLAGS-.og += -Wa,-mtune=i686
+ CFLAGS-.ob += -Wa,-mtune=i686
+-CFLAGS-.oS += -Wa,-mtune=i686
++CFLAGS-.oSTATIC += -Wa,-mtune=i686
+ 
+ ASFLAGS-.o += -Wa,-mtune=i686
+ ASFLAGS-.os += -Wa,-mtune=i686
+ ASFLAGS-.op += -Wa,-mtune=i686
+ ASFLAGS-.og += -Wa,-mtune=i686
+ ASFLAGS-.ob += -Wa,-mtune=i686
+-ASFLAGS-.oS += -Wa,-mtune=i686
++ASFLAGS-.oSTATIC += -Wa,-mtune=i686
+ endif
+diff -urN a/sysdeps/sparc/sparc32/sparcv9/Makefile b/sysdeps/sparc/sparc32/sparcv9/Makefile
+--- a/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-04-26 20:28:22.940320900 +0100
++++ b/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-04-26 20:29:01.696537600 +0100
+@@ -10,4 +10,4 @@
+ ASFLAGS-.op += -Wa,-Av9a
+ ASFLAGS-.og += -Wa,-Av9a
+ ASFLAGS-.ob += -Wa,-Av9a
+-ASFLAGS-.oS += -Wa,-Av9a
++ASFLAGS-.oSTATIC += -Wa,-Av9a
diff --git a/patches/glibc/2.15/250-MSYS-Hack-force-ln-s.patch b/patches/glibc/2.15/250-MSYS-Hack-force-ln-s.patch
new file mode 100644
index 0000000..5377546
--- /dev/null
+++ b/patches/glibc/2.15/250-MSYS-Hack-force-ln-s.patch
@@ -0,0 +1,39 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-02-23 13:58:17.189744500 +0000
++++ b/configure	2014-02-23 13:58:27.478050900 +0000
+@@ -4476,6 +4476,16 @@
+ $as_echo "no, using $LN_S" >&6; }
+ fi
+ 
++# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
++# eglibc, whereas cp -r doesn't.
++case "$build_os" in
++*mingw*)
++  as_ln_s='ln -s'
++  LN_S=$as_ln_s
++  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&5
++$as_echo "$as_me: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&2;}
++  ;;
++esac
+ 
+ # Was a --with-binutils option given?
+ if test -n "$path_binutils"; then
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-23 13:58:17.190244500 +0000
++++ b/configure.in	2014-02-23 13:58:27.482051400 +0000
+@@ -992,6 +992,15 @@
+   INSTALL='\$(..)./scripts/install-sh -c'
+ fi
+ AC_PROG_LN_S
++# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
++# eglibc, whereas cp -r doesn't.
++case "$build_os" in
++*mingw*)
++  as_ln_s='ln -s'
++  LN_S=$as_ln_s
++  AC_MSG_WARN(Hacked as_ln_s and LN_S to 'ln -s' for MSYS2)
++  ;;
++esac
+ 
+ LIBC_PROG_BINUTILS
+ AC_SUBST(MIG)dnl Needed by sysdeps/mach/configure.in
diff --git a/patches/glibc/2.15/300-0095_all_glibc-2.15-ctors-dtors-test.patch b/patches/glibc/2.15/300-0095_all_glibc-2.15-ctors-dtors-test.patch
new file mode 100644
index 0000000..6c92856
--- /dev/null
+++ b/patches/glibc/2.15/300-0095_all_glibc-2.15-ctors-dtors-test.patch
@@ -0,0 +1,51 @@
+this is a stripped down version of the upstream commit to work with glibc-2.15
+
+https://bugs.gentoo.org/413561
+
+From 07037eeb43ca1e0ac2802e3a1492cecf869c63c6 Mon Sep 17 00:00:00 2001
+From: Joseph Myers <joseph@codesourcery.com>
+Date: Thu, 8 Mar 2012 00:17:27 +0000
+Subject: [PATCH] Fix .ctors/.dtors header configure test for bootstrapping.
+
+2012-03-08  Joseph Myers  <joseph@codesourcery.com>
+
+	* aclocal.m4 (LIBC_TRY_LINK_STATIC): New macro.
+	* configure.in (libc_cv_preinit_array): Use LIBC_TRY_LINK_STATIC.
+	(libc_cv_ctors_header): Likewise.  Use asm ("") instead of calling
+	puts.
+	* configure: Regenerated.
+
+diff -urN a/configure b/configure
+--- a/configure	2014-02-23 13:58:31.496061200 +0000
++++ b/configure	2014-02-23 13:58:41.892881400 +0000
+@@ -6036,18 +6036,21 @@
+     cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+ /* end confdefs.h.  */
+ 
+-int
+-main ()
+-{
++int _start (void) { return 0; }
++int __start (void) { return 0; }
+ 
+-__attribute__ ((constructor)) void ctor (void) { puts("ctor"); }
+-__attribute__ ((destructor))  void dtor (void) { puts("dtor"); }
++__attribute__ ((constructor)) void ctor (void) { asm(""); }
++__attribute__ ((destructor))  void dtor (void) { asm(""); }
+ 
+-  ;
+-  return 0;
+-}
+ _ACEOF
+-if ac_fn_c_try_link "$LINENO"; then :
++if { ac_try='${CC-cc} $CFLAGS $CPPFLAGS $LDFLAGS -o conftest
++		       conftest.c -static -nostartfiles -nostdlib
++		       1>&5'
++  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
++  (eval $ac_try) 2>&5
++  ac_status=$?
++  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
++  test $ac_status = 0; }; }; then :
+         if $READELF -WS conftest$ac_exeext | $AWK '
+ 	{ gsub(/\[ */, "[") }
+ 	$2 == ".ctors" || $2 == ".dtors" {
diff --git a/patches/glibc/2.15/310-Remove-test-for-__builtin_expect.patch b/patches/glibc/2.15/310-Remove-test-for-__builtin_expect.patch
new file mode 100644
index 0000000..edd97b8
--- /dev/null
+++ b/patches/glibc/2.15/310-Remove-test-for-__builtin_expect.patch
@@ -0,0 +1,74 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-02-23 13:58:45.870886500 +0000
++++ b/configure	2014-02-23 13:58:56.452730200 +0000
+@@ -7035,38 +7035,6 @@
+ fi
+ fi
+ 
+-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for __builtin_expect" >&5
+-$as_echo_n "checking for __builtin_expect... " >&6; }
+-if ${libc_cv_gcc_builtin_expect+:} false; then :
+-  $as_echo_n "(cached) " >&6
+-else
+-  cat > conftest.c <<EOF
+-#line $LINENO "configure"
+-int foo (int a)
+-{
+-  a = __builtin_expect (a, 10);
+-  return a == 10 ? 0 : 1;
+-}
+-EOF
+-if { ac_try='${CC-cc} $CFLAGS $CPPFLAGS $LDFLAGS -nostdlib -nostartfiles
+-			    -o conftest conftest.c -lgcc >&5'
+-  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
+-  (eval $ac_try) 2>&5
+-  ac_status=$?
+-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+-  test $ac_status = 0; }; }; then
+-  libc_cv_gcc_builtin_expect=yes
+-else
+-  libc_cv_gcc_builtin_expect=no
+-fi
+-rm -f conftest*
+-fi
+-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $libc_cv_gcc_builtin_expect" >&5
+-$as_echo "$libc_cv_gcc_builtin_expect" >&6; }
+-if test "$libc_cv_gcc_builtin_expect" = no; then
+-  as_fn_error $? "support for __builtin_expect needed" "$LINENO" 5
+-fi
+-
+ { $as_echo "$as_me:${as_lineno-$LINENO}: checking for __builtin_memset" >&5
+ $as_echo_n "checking for __builtin_memset... " >&6; }
+ if ${libc_cv_gcc_builtin_memset+:} false; then :
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-23 13:58:45.871386600 +0000
++++ b/configure.in	2014-02-23 13:58:56.456730800 +0000
+@@ -2132,28 +2132,6 @@
+ fi
+ fi
+ 
+-dnl Check whether compiler understands __builtin_expect.
+-AC_CACHE_CHECK(for __builtin_expect, libc_cv_gcc_builtin_expect,
+-[cat > conftest.c <<EOF
+-#line $LINENO "configure"
+-int foo (int a)
+-{
+-  a = __builtin_expect (a, 10);
+-  return a == 10 ? 0 : 1;
+-}
+-EOF
+-dnl No \ in command here because it ends up inside ''.
+-if AC_TRY_COMMAND([${CC-cc} $CFLAGS $CPPFLAGS $LDFLAGS -nostdlib -nostartfiles
+-			    -o conftest conftest.c -lgcc >&AS_MESSAGE_LOG_FD]); then
+-  libc_cv_gcc_builtin_expect=yes
+-else
+-  libc_cv_gcc_builtin_expect=no
+-fi
+-rm -f conftest*])
+-if test "$libc_cv_gcc_builtin_expect" = no; then
+-  AC_MSG_ERROR([support for __builtin_expect needed])
+-fi
+-
+ AC_CACHE_CHECK(for __builtin_memset, libc_cv_gcc_builtin_memset, [dnl
+ cat > conftest.c <<\EOF
+ void zero (void *x)
diff --git a/patches/glibc/2.15/320-100-fix_cpuid_h_check-from-OpenWrt.patch b/patches/glibc/2.15/320-100-fix_cpuid_h_check-from-OpenWrt.patch
new file mode 100644
index 0000000..9420144
--- /dev/null
+++ b/patches/glibc/2.15/320-100-fix_cpuid_h_check-from-OpenWrt.patch
@@ -0,0 +1,24 @@
+diff -urN a/sysdeps/i386/configure b/sysdeps/i386/configure
+--- a/sysdeps/i386/configure	2014-02-23 13:59:02.895048300 +0000
++++ b/sysdeps/i386/configure	2014-02-23 13:59:11.063085500 +0000
+@@ -632,7 +632,7 @@
+ done
+ 
+ 
+-ac_fn_c_check_header_mongrel "$LINENO" "cpuid.h" "ac_cv_header_cpuid_h" "$ac_includes_default"
++ac_fn_c_check_header_mongrel "$LINENO" "cpuid.h" "ac_cv_header_cpuid_h" ""
+ if test "x$ac_cv_header_cpuid_h" = xyes; then :
+ 
+ else
+diff -urN a/sysdeps/i386/configure.in b/sysdeps/i386/configure.in
+--- a/sysdeps/i386/configure.in	2014-02-23 13:59:02.895548400 +0000
++++ b/sysdeps/i386/configure.in	2014-02-23 13:59:11.061085300 +0000
+@@ -2,7 +2,7 @@
+ # Local configure fragment for sysdeps/i386.
+ 
+ AC_HEADER_CHECK([cpuid.h], ,
+-  [AC_MSG_ERROR([gcc must provide the <cpuid.h> header])])
++  [AC_MSG_ERROR([gcc must provide the <cpuid.h> header])], [])
+ 
+ AC_CACHE_CHECK(if -g produces usable source locations for assembler-with-cpp,
+ 	       libc_cv_cpp_asm_debuginfo, [dnl
diff --git a/patches/glibc/2.15/330-Fix-confstr-use-of-local-buffer-outside-its-extent.patch b/patches/glibc/2.15/330-Fix-confstr-use-of-local-buffer-outside-its-extent.patch
new file mode 100644
index 0000000..1059c04
--- /dev/null
+++ b/patches/glibc/2.15/330-Fix-confstr-use-of-local-buffer-outside-its-extent.patch
@@ -0,0 +1,35 @@
+diff -urN a/posix/confstr.c b/posix/confstr.c
+--- a/posix/confstr.c	2014-02-23 13:59:17.172361300 +0000
++++ b/posix/confstr.c	2014-02-23 13:59:25.672440700 +0000
+@@ -35,6 +35,7 @@
+ {
+   const char *string = "";
+   size_t string_len = 1;
++  char restenvs[4 * sizeof "POSIX_V7_LPBIG_OFFBIG"];
+ 
+   switch (name)
+     {
+@@ -55,7 +56,6 @@
+ 
+ 	 Currently this means all environment which the system allows.  */
+       {
+-	char restenvs[4 * sizeof "POSIX_V7_LPBIG_OFFBIG"];
+ 
+ 	string_len = 0;
+ #ifndef _POSIX_V7_ILP32_OFF32
+@@ -118,7 +118,6 @@
+ 
+ 	 Currently this means all environment which the system allows.  */
+       {
+-	char restenvs[4 * sizeof "POSIX_V6_LPBIG_OFFBIG"];
+ 
+ 	string_len = 0;
+ #ifndef _POSIX_V6_ILP32_OFF32
+@@ -181,7 +180,6 @@
+ 
+ 	 Currently this means all environment which the system allows.  */
+       {
+-	char restenvs[4 * sizeof "XBS5_LPBIG_OFFBIG"];
+ 
+ 	string_len = 0;
+ #ifndef _XBS5_ILP32_OFF32
diff --git a/patches/glibc/2.15/340-Use-glibc-2_18-sunrpc-Makefile-for-cross-compilation.patch b/patches/glibc/2.15/340-Use-glibc-2_18-sunrpc-Makefile-for-cross-compilation.patch
new file mode 100644
index 0000000..66a5828
--- /dev/null
+++ b/patches/glibc/2.15/340-Use-glibc-2_18-sunrpc-Makefile-for-cross-compilation.patch
@@ -0,0 +1,189 @@
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2014-02-24 15:11:01.467944800 +0000
++++ b/Makerules	2014-02-24 15:11:11.017491000 +0000
+@@ -1226,8 +1226,8 @@
+ endef
+ 
+ # We always want to use configuration definitions.
+-# Note that this is only used for commands running in $(objpfx).
+-ALL_BUILD_CFLAGS = $(BUILD_CFLAGS) -include $(..)config.h
++ALL_BUILD_CFLAGS = $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) -D_GNU_SOURCE \
++		   -DIS_IN_build -include $(common-objpfx)config.h
+ 
+ # Support the GNU standard name for this target.
+ .PHONY: check
+diff -urN a/sunrpc/Makefile b/sunrpc/Makefile
+--- a/sunrpc/Makefile	2014-02-24 15:11:02.619010600 +0000
++++ b/sunrpc/Makefile	2014-02-24 15:11:11.009490600 +0000
+@@ -1,4 +1,4 @@
+-# Copyright (C) 1994-2004, 2005, 2006, 2011 Free Software Foundation, Inc.
++# Copyright (C) 1994-2013 Free Software Foundation, Inc.
+ # This file is part of the GNU C Library.
+ 
+ # The GNU C Library is free software; you can redistribute it and/or
+@@ -12,9 +12,8 @@
+ # Lesser General Public License for more details.
+ 
+ # You should have received a copy of the GNU Lesser General Public
+-# License along with the GNU C Library; if not, write to the Free
+-# Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+-# 02111-1307 USA.
++# License along with the GNU C Library; if not, see
++# <http://www.gnu.org/licenses/>.
+ 
+ #
+ #	Sub-makefile for sunrpc portion of the library.
+@@ -61,6 +60,10 @@
+ 
+ include ../Makeconfig
+ 
++ifeq ($(link-obsolete-rpc),yes)
++headers += $(headers-in-tirpc) $(headers-not-in-tirpc)
++endif
++
+ ifeq ($(versioning),yes)
+ need-export-routines := auth_des auth_unix clnt_gen clnt_perr clnt_tcp \
+ 			clnt_udp get_myaddr key_call netname pm_getport \
+@@ -74,9 +77,11 @@
+ 	    svc_simple xdr_float xdr_rec publickey authdes_prot \
+ 	    des_crypt des_impl des_soft key_prot openchild rtime svcauth_des \
+ 	    clnt_unix svc_unix create_xid $(need-export-routines)
++ifneq ($(link-obsolete-rpc),yes)
+ # We only add the RPC for compatibility to libc.so.
+ shared-only-routines = $(routines)
+ endif
++endif
+ 
+ # We do not build rpcinfo anymore.  It is not needed for a bootstrap
+ # and not wanted on complete systems.
+@@ -86,12 +91,8 @@
+ rpcgen-objs = rpc_main.o rpc_hout.o rpc_cout.o rpc_parse.o \
+ 	      rpc_scan.o rpc_util.o rpc_svcout.o rpc_clntout.o \
+ 	      rpc_tblout.o rpc_sample.o
+-# These headers are part of rpcgen.
+-distribute := proto.h rpc_util.h rpc_parse.h rpc_scan.h \
+-	      $(headers-in-tirpc) $(headers-not-in-tirpc) \
+-	      $(rpcgen-objs:.o=.c) etc.rpc \
+-	      errqueue.h
+-extra-objs = $(rpcgen-objs)
++extra-objs = $(rpcgen-objs) $(addprefix cross-,$(rpcgen-objs))
++others += rpcgen
+ 
+ all: # Make this the default target; it will be defined in Rules.
+ 
+@@ -101,29 +102,24 @@
+ ifeq ($(have-thread-library),yes)
+ xtests += thrsvc
+ endif
+-distribute += thrsvc.c
+-
+-ifeq (yes,$(build-static-nss))
+-otherlibs += $(nssobjdir)/libnss_files.a $(resolvobjdir)/libnss_dns.a \
+-	     $(resolvobjdir)/libresolv.a
+-endif
+ 
+-ifeq (no,$(cross-compiling))
+-# We can only build this library if we can run the rpcgen we build.
+ headers += $(rpcsvc:%.x=rpcsvc/%.h)
+ extra-libs := librpcsvc
+ extra-libs-others := librpcsvc # Make it in `others' pass, not `lib' pass.
+ librpcsvc-routines = $(rpcsvc:%.x=x%)
+ librpcsvc-inhibit-o = .os # Build no shared rpcsvc library.
+ omit-deps = $(librpcsvc-routines)
+-endif
+-
+-include ../Rules
+ 
+ ifeq (yes,$(build-shared))
+ rpc-compat-routines = $(addprefix compat-,$(need-export-routines))
+ rpc-compat-routines.os = $(addprefix $(objpfx), \
+ 				     $(addsuffix .os,$(rpc-compat-routines)))
++extra-objs += $(addsuffix .os,$(rpc-compat-routines))
++endif
++
++include ../Rules
++
++ifeq (yes,$(build-shared))
+ subdir_lib: $(objpfx)librpc_compat_pic.a
+ $(objpfx)librpc_compat_pic.a: $(rpc-compat-routines.os)
+ 	$(AR) cr$(verbose) $@ $^
+@@ -150,24 +146,38 @@
+ CFLAGS-clnt_perr.c = -fexceptions
+ CFLAGS-openchild.c = -fexceptions
+ 
+-CPPFLAGS += -D_RPC_THREAD_SAFE_
++sunrpc-CPPFLAGS = -D_RPC_THREAD_SAFE_
++CPPFLAGS += $(sunrpc-CPPFLAGS)
++BUILD_CPPFLAGS += $(sunrpc-CPPFLAGS)
+ 
+ $(objpfx)tst-getmyaddr: $(common-objpfx)linkobj/libc.so
+ $(objpfx)tst-xdrmem: $(common-objpfx)linkobj/libc.so
+ $(objpfx)tst-xdrmem2: $(common-objpfx)linkobj/libc.so
+ 
+-$(objpfx)rpcgen: $(addprefix $(objpfx),$(rpcgen-objs)) \
+-  $(sort $(filter $(common-objpfx)libc%,$(link-libc))) \
+-  $(addprefix $(csu-objpfx),start.o) $(+preinit) $(+postinit)
+-	$(+link)
++$(objpfx)rpcgen: $(addprefix $(objpfx),$(rpcgen-objs))
++
++cross-rpcgen-objs := $(addprefix $(objpfx)cross-,$(rpcgen-objs))
++
++# When generic makefile support for build system programs is
++# available, it should replace this code.  See
++# <http://sourceware.org/bugzilla/show_bug.cgi?id=14087>.
++$(cross-rpcgen-objs): $(objpfx)cross-%.o: %.c $(before-compile)
++	$(BUILD_CC) $($(basename $(<F))-CFLAGS) $(ALL_BUILD_CFLAGS) $< \
++		$(OUTPUT_OPTION) $(native-compile-mkdep-flags) -c
++
++$(objpfx)cross-rpcgen: $(cross-rpcgen-objs)
++	$(BUILD_CC) $^ $(BUILD_LDFLAGS) -o $@
+ 
+ # This makes sure -DNOT_IN_libc is passed for all these modules.
+ cpp-srcs-left := $(rpcgen-objs:.o=.c)
+ lib := nonlib
+ include $(patsubst %,$(..)cppflags-iterator.mk,$(cpp-srcs-left))
+ 
+-# Tell rpcgen where to find the C preprocessor.
+-rpcgen-cmd = CPP='$(CC) -E -x c-header' $(built-program-cmd) -Y ../scripts
++# How we run rpcgen to generate sources and headers in the rules below.
++# Setting CPP tells it how to run the C preprocessor correctly.  Note
++# that $(built-program-file) requires that the just-built cross-rpcgen
++# binary be the second dependency listed in each rule using rpcgen-cmd.
++rpcgen-cmd = CPP='$(CC) -E -x c-header' $(built-program-file) -Y ../scripts
+ 
+ # Install the rpc data base file.
+ $(inst_sysconfdir)/rpc: etc.rpc $(+force)
+@@ -178,7 +188,7 @@
+ # relinked.
+ $(rpcsvc:%.x=$(objpfx)rpcsvc/%.h): $(objpfx)rpcsvc/%.h: $(objpfx)rpcsvc/%.stmp
+ 	@:
+-$(objpfx)rpcsvc/%.stmp: rpcsvc/%.x $(objpfx)rpcgen
++$(objpfx)rpcsvc/%.stmp: rpcsvc/%.x $(objpfx)cross-rpcgen
+ 	$(make-target-directory)
+ 	-@rm -f ${@:stmp=T} $@
+ 	$(rpcgen-cmd) -h $< -o ${@:stmp=T}
+@@ -188,7 +198,7 @@
+ # Generate the rpcsvc XDR functions with rpcgen.
+ $(rpcsvc:%.x=$(objpfx)x%.c): $(objpfx)x%.c: $(objpfx)x%.stmp
+ 	@:
+-$(objpfx)x%.stmp: rpcsvc/%.x $(objpfx)rpcgen
++$(objpfx)x%.stmp: rpcsvc/%.x $(objpfx)cross-rpcgen
+ 	-@rm -f ${@:stmp=T} $@
+ 	$(rpcgen-cmd) -c $< -o ${@:stmp=T}
+ 	$(move-if-change) $(@:stmp=T) $(@:stmp=c)
+diff -urN a/sunrpc/rpcgen.c b/sunrpc/rpcgen.c
+--- a/sunrpc/rpcgen.c	1970-01-01 01:00:00.000000000 +0100
++++ b/sunrpc/rpcgen.c	2014-02-24 15:11:11.013490800 +0000
+@@ -0,0 +1,2 @@
++/* Empty file expected by glibc's standard build rules for
++   executables.  */
+diff -urN a/config.h.in b/config.h.in
+--- a/config.h.in	2014-02-24 16:13:54.864770800 +0000
++++ b/config.h.in	2014-02-24 16:14:17.624072500 +0000
+@@ -1,4 +1,5 @@
+-#if !defined __ASSEMBLER__ && !defined _ISOMAC && !defined __OPTIMIZE__
++#if !defined IS_IN_build && !defined __ASSEMBLER__ && !defined _ISOMAC \
++    && !defined __OPTIMIZE__
+ # error "glibc cannot be compiled without optimization"
+ #endif
+ 
diff --git a/patches/glibc/2.16.0/001-Avoid-use-of-libgcc_s-and-libgcc_eh-when-building-gl.patch b/patches/glibc/2.16.0/001-Avoid-use-of-libgcc_s-and-libgcc_eh-when-building-gl.patch
new file mode 100644
index 0000000..9f7ea79
--- /dev/null
+++ b/patches/glibc/2.16.0/001-Avoid-use-of-libgcc_s-and-libgcc_eh-when-building-gl.patch
@@ -0,0 +1,318 @@
+Upstream-Status: Backport
+Signed-off-by: Khem Raj <raj.khem@gmail.com>
+
+From 95f5a9a866695da4e038aa4e6ccbbfd5d9cf63b7 Mon Sep 17 00:00:00 2001
+From: Joseph Myers <joseph@codesourcery.com>
+Date: Tue, 3 Jul 2012 19:14:59 +0000
+Subject: [PATCH] Avoid use of libgcc_s and libgcc_eh when building glibc.
+
+---
+ ChangeLog                  |   47 ++++++++++++++++++++++++++++++
+ Makeconfig                 |   68 ++++++++++++++++++++++++++++++++++++++------
+ Rules                      |   45 ++++++++++++++++++++++-------
+ elf/Makefile               |    6 +++-
+ elf/static-stubs.c         |   46 ++++++++++++++++++++++++++++++
+ ports/ChangeLog.arm        |    7 +++++
+ ports/sysdeps/arm/Makefile |    8 ++++++
+ 7 files changed, 206 insertions(+), 21 deletions(-)
+ create mode 100644 elf/static-stubs.c
+
+diff -urN a/elf/Makefile b/elf/Makefile
+--- a/elf/Makefile	2012-06-30 20:12:34.000000000 +0100
++++ b/elf/Makefile	2014-02-23 14:12:54.177607800 +0000
+@@ -71,6 +71,8 @@
+ install-bin	= sprof pldd
+ others-static   = sln
+ install-rootsbin = sln
++sln-modules	:= static-stubs
++extra-objs	+= $(sln-modules:=.o)
+ 
+ ifeq (yes,$(use-ldconfig))
+ ifeq (yes,$(build-shared))
+@@ -78,7 +80,7 @@
+ others		+= ldconfig
+ install-rootsbin += ldconfig
+ 
+-ldconfig-modules := cache readlib xmalloc xstrdup chroot_canon
++ldconfig-modules := cache readlib xmalloc xstrdup chroot_canon static-stubs
+ extra-objs	+= $(ldconfig-modules:=.o)
+ endif
+ endif
+@@ -411,6 +413,8 @@
+ 
+ $(objpfx)sprof: $(libdl)
+ 
++$(objpfx)sln: $(sln-modules:%=$(objpfx)%.o)
++
+ $(objpfx)ldconfig: $(ldconfig-modules:%=$(objpfx)%.o)
+ 
+ $(objpfx)pldd: $(pldd-modules:%=$(objpfx)%.o)
+diff -urN a/elf/static-stubs.c b/elf/static-stubs.c
+--- a/elf/static-stubs.c	1970-01-01 01:00:00.000000000 +0100
++++ b/elf/static-stubs.c	2014-02-23 14:12:54.179608100 +0000
+@@ -0,0 +1,46 @@
++/* Stub implementations of functions to link into statically linked
++   programs without needing libgcc_eh.
++   Copyright (C) 2012 Free Software Foundation, Inc.
++   This file is part of the GNU C Library.
++
++   The GNU C Library is free software; you can redistribute it and/or
++   modify it under the terms of the GNU Lesser General Public
++   License as published by the Free Software Foundation; either
++   version 2.1 of the License, or (at your option) any later version.
++
++   The GNU C Library is distributed in the hope that it will be useful,
++   but WITHOUT ANY WARRANTY; without even the implied warranty of
++   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
++   Lesser General Public License for more details.
++
++   You should have received a copy of the GNU Lesser General Public
++   License along with the GNU C Library; if not, see
++   <http://www.gnu.org/licenses/>.  */
++
++/* Avoid backtrace (and so _Unwind_Backtrace) dependencies from
++   sysdeps/unix/sysv/linux/libc_fatal.c.  */
++#include <sysdeps/posix/libc_fatal.c>
++
++#include <stdlib.h>
++#include <unwind.h>
++
++/* These programs do not use thread cancellation, so _Unwind_Resume
++   and the personality routine are never actually called.  */
++
++void
++_Unwind_Resume (struct _Unwind_Exception *exc __attribute__ ((unused)))
++{
++  abort ();
++}
++
++_Unwind_Reason_Code
++__gcc_personality_v0 (int version __attribute__ ((unused)),
++		      _Unwind_Action actions __attribute__ ((unused)),
++		      _Unwind_Exception_Class exception_class
++		      __attribute__ ((unused)),
++		      struct _Unwind_Exception *ue_header
++		      __attribute__ ((unused)),
++		      struct _Unwind_Context *context __attribute__ ((unused)))
++{
++  abort ();
++}
+diff -urN a/Makeconfig b/Makeconfig
+--- a/Makeconfig	2012-06-30 20:12:34.000000000 +0100
++++ b/Makeconfig	2014-02-23 14:12:54.173607300 +0000
+@@ -415,9 +415,9 @@
+ LDFLAGS-rtld += $(hashstyle-LDFLAGS)
+ endif
+ 
+-# Command for linking programs with the C library.
++# Commands for linking programs with the C library.
+ ifndef +link
+-+link = $(CC) -nostdlib -nostartfiles -o $@ \
+++link-before-libc = $(CC) -nostdlib -nostartfiles -o $@ \
+ 	      $(sysdep-LDFLAGS) $(config-LDFLAGS) $(LDFLAGS) $(LDFLAGS-$(@F)) \
+ 	      $(combreloc-LDFLAGS) $(relro-LDFLAGS) $(hashstyle-LDFLAGS) \
+ 	      $(addprefix $(csu-objpfx),$(start-installed-name)) \
+@@ -426,7 +426,10 @@
+ 						     $(start-installed-name))\
+ 			   $(+preinit) $(link-extra-libs) \
+ 			   $(common-objpfx)libc% $(+postinit),$^) \
+-	      $(link-extra-libs) $(link-libc) $(+postctor) $(+postinit)
++	      $(link-extra-libs)
+++link-after-libc = $(+postctor) $(+postinit)
+++link = $(+link-before-libc) $(link-libc) $(+link-after-libc)
+++link-tests = $(+link-before-libc) $(link-libc-tests) $(+link-after-libc)
+ endif
+ # Command for linking PIE programs with the C library.
+ ifndef +link-pie
+@@ -443,7 +446,7 @@
+ endif
+ # Command for statically linking programs with the C library.
+ ifndef +link-static
+-+link-static = $(CC) -nostdlib -nostartfiles -static -o $@ \
+++link-static-before-libc = $(CC) -nostdlib -nostartfiles -static -o $@ \
+ 	      $(sysdep-LDFLAGS) $(LDFLAGS) $(LDFLAGS-$(@F))  \
+ 	      $(addprefix $(csu-objpfx),$(static-start-installed-name)) \
+ 	      $(+preinit) $(+prector) \
+@@ -451,7 +454,12 @@
+ 						     $(start-installed-name))\
+ 			   $(+preinit) $(link-extra-libs-static) \
+ 			   $(common-objpfx)libc% $(+postinit),$^) \
+-	      $(link-extra-libs-static) $(link-libc-static) $(+postctor) $(+postinit)
++	      $(link-extra-libs-static) $(link-libc-static)
+++link-static-after-libc = $(+postctor) $(+postinit)
+++link-static = $(+link-static-before-libc) $(link-libc-static) \
++	       $(+link-static-after-libc)
+++link-static-tests = $(+link-static-before-libc) $(link-libc-static-tests) \
++		     $(+link-static-after-libc)
+ endif
+ # Command for statically linking bounded-pointer programs with the C library.
+ ifndef +link-bounded
+@@ -475,10 +483,12 @@
+ # We need the versioned name of libc.so in the deps of $(others) et al
+ # so that the symlink to libc.so is created before anything tries to
+ # run the linked programs.
+-link-libc = -Wl,-rpath-link=$(rpath-link) \
++link-libc-before-gnulib = -Wl,-rpath-link=$(rpath-link) \
+ 	    $(common-objpfx)libc.so$(libc.so-version) \
+ 	    $(common-objpfx)$(patsubst %,$(libtype.oS),c) \
+-	    $(as-needed) $(common-objpfx)elf/ld.so $(no-as-needed) $(gnulib)
++	    $(as-needed) $(common-objpfx)elf/ld.so $(no-as-needed)
++link-libc = $(link-libc-before-gnulib) $(gnulib)
++link-libc-tests = $(link-libc-before-gnulib) $(gnulib-tests)
+ # This is how to find at build-time things that will be installed there.
+ rpath-dirs = math elf dlfcn nss nis rt resolv crypt
+ rpath-link = \
+@@ -488,6 +498,7 @@
+ nssobjdir := $(patsubst ../$(subdir),.,$(common-objpfx)nss)
+ resolvobjdir := $(patsubst ../$(subdir),.,$(common-objpfx)resolv)
+ link-libc = $(common-objpfx)libc.a $(otherlibs) $(gnulib) $(common-objpfx)libc.a $(gnulib)
++link-libc-tests = $(common-objpfx)libc.a $(otherlibs) $(gnulib-tests) $(common-objpfx)libc.a $(gnulib-tests)
+ endif
+ endif
+ 
+@@ -513,8 +524,43 @@
+ 
+ # The static libraries.
+ link-libc-static = -Wl,--start-group $(common-objpfx)libc.a $(static-gnulib) -Wl,--end-group
++link-libc-static-tests = -Wl,--start-group $(common-objpfx)libc.a $(static-gnulib-tests) -Wl,--end-group
+ link-libc-bounded = $(common-objpfx)libc_b.a $(gnulib) $(common-objpfx)libc_b.a
+ 
++# How to link against libgcc.  Some libgcc functions, such as those
++# for "long long" arithmetic or software floating point, can always be
++# built without use of C library headers and do not have any global
++# state so can safely be linked statically into any executable or
++# shared library requiring them; these functions are in libgcc.a.
++# Other functions, relating to exception handling, may require C
++# library headers to build and it may not be safe to have more than
++# one copy of them in a process; these functions are only in
++# libgcc_s.so and libgcc_eh.a.
++#
++# To avoid circular dependencies when bootstrapping, it is desirable
++# to avoid use of libgcc_s and libgcc_eh in building glibc.  Where any
++# glibc functionality (in particular, thread cancellation) requires
++# exception handling, this is implemented through dlopen of libgcc_s
++# to avoid unnecessary dependencies on libgcc_s by programs not using
++# that functionality; executables built with glibc do not use
++# exception handling other than through thread cancellation.
++#
++# Undefined references to functions from libgcc_eh or libgcc_s may
++# arise for code built with -fexceptions.  In the case of statically
++# linked programs installed by glibc, unwinding will never actually
++# occur at runtime and the use of elf/static-stubs.c to resolve these
++# references is safe.  In the case of statically linked test programs
++# and test programs built with -fexceptions, unwinding may occur in
++# some cases and it is preferable to link with libgcc_eh or libgcc_s
++# so that the testing is as similar as possible to how programs will
++# be built with the installed glibc.
++#
++# Some architectures have architecture-specific systems for exception
++# handling that may involve undefined references to
++# architecture-specific functions.  On those architectures,
++# gnulib-arch and static-gnulib-arch may be defined in sysdeps
++# makefiles to use additional libraries for linking executables and
++# shared libraries built by glibc.
+ ifndef gnulib
+ ifneq ($(have-cc-with-libunwind),yes)
+   libunwind =
+@@ -522,8 +568,12 @@
+   libunwind = -lunwind
+ endif
+ libgcc_eh := -Wl,--as-needed -lgcc_s $(libunwind) -Wl,--no-as-needed
+-gnulib := -lgcc $(libgcc_eh)
+-static-gnulib := -lgcc -lgcc_eh $(libunwind)
++gnulib-arch =
++gnulib = -lgcc $(gnulib-arch)
++gnulib-tests := -lgcc $(libgcc_eh)
++static-gnulib-arch =
++static-gnulib = -lgcc $(static-gnulib-arch)
++static-gnulib-tests := -lgcc -lgcc_eh $(libunwind)
+ libc.so-gnulib := -lgcc
+ endif
+ +preinit = $(addprefix $(csu-objpfx),crti.o)
+diff -urN a/Rules b/Rules
+--- a/Rules	2012-06-30 20:12:34.000000000 +0100
++++ b/Rules	2014-02-23 14:12:54.175107500 +0000
+@@ -1,5 +1,4 @@
+-# Copyright (C) 1991-2000,2002,2003,2004,2005,2006,2011
+-#	Free Software Foundation, Inc.
++# Copyright (C) 1991-2012 Free Software Foundation, Inc.
+ # This file is part of the GNU C Library.
+ 
+ # The GNU C Library is free software; you can redistribute it and/or
+@@ -103,29 +102,46 @@
+ endif
+ 
+ ifeq ($(build-programs),yes)
+-binaries-all = $(others) $(sysdep-others) $(tests) $(xtests) $(test-srcs)
+-binaries-static = $(others-static) $(tests-static) $(xtests-static)
++binaries-all-notests = $(others) $(sysdep-others)
++binaries-all-tests = $(tests) $(xtests) $(test-srcs)
++binaries-all = $(binaries-all-notests) $(binaries-all-tests)
++binaries-static-notests = $(others-static)
++binaries-static-tests = $(tests-static) $(xtests-static)
++binaries-static = $(binaries-static-notests) $(binaries-static-tests)
+ ifeq (yesyes,$(have-fpie)$(build-shared))
+ binaries-pie = $(others-pie) $(tests-pie) $(xtests-pie)
+ else
+ binaries-pie =
+ endif
+ else
+-binaries-all = $(tests) $(xtests) $(test-srcs)
++binaries-all-notests =
++binaries-all-tests = $(tests) $(xtests) $(test-srcs)
++binaries-all = $(binaries-all-tests)
++binaries-static-notests =
++binaries-static-tests =
+ binaries-static =
+ binaries-pie =
+ endif
+ 
+-binaries-shared = $(filter-out $(binaries-pie) $(binaries-static), \
+-			       $(binaries-all))
++binaries-shared-tests = $(filter-out $(binaries-pie) $(binaries-static), \
++				     $(binaries-all-tests))
++binaries-shared-notests = $(filter-out $(binaries-pie) $(binaries-static), \
++				       $(binaries-all-notests))
+ 
+-ifneq "$(strip $(binaries-shared))" ""
+-$(addprefix $(objpfx),$(binaries-shared)): %: %.o \
++ifneq "$(strip $(binaries-shared-notests))" ""
++$(addprefix $(objpfx),$(binaries-shared-notests)): %: %.o \
+   $(sort $(filter $(common-objpfx)lib%,$(link-libc))) \
+   $(addprefix $(csu-objpfx),start.o) $(+preinit) $(+postinit)
+ 	$(+link)
+ endif
+ 
++ifneq "$(strip $(binaries-shared-tests))" ""
++$(addprefix $(objpfx),$(binaries-shared-tests)): %: %.o \
++  $(sort $(filter $(common-objpfx)lib%,$(link-libc))) \
++  $(addprefix $(csu-objpfx),start.o) $(+preinit) $(+postinit)
++	$(+link-tests)
++endif
++
+ ifneq "$(strip $(binaries-pie))" ""
+ $(addprefix $(objpfx),$(binaries-pie)): %: %.o \
+   $(sort $(filter $(common-objpfx)lib%,$(link-libc))) \
+@@ -133,13 +149,20 @@
+ 	$(+link-pie)
+ endif
+ 
+-ifneq "$(strip $(binaries-static))" ""
+-$(addprefix $(objpfx),$(binaries-static)): %: %.o \
++ifneq "$(strip $(binaries-static-notests))" ""
++$(addprefix $(objpfx),$(binaries-static-notests)): %: %.o \
+   $(sort $(filter $(common-objpfx)lib%,$(link-libc-static))) \
+   $(addprefix $(csu-objpfx),start.o) $(+preinit) $(+postinit)
+ 	$(+link-static)
+ endif
+ 
++ifneq "$(strip $(binaries-static-tests))" ""
++$(addprefix $(objpfx),$(binaries-static-tests)): %: %.o \
++  $(sort $(filter $(common-objpfx)lib%,$(link-libc-static-tests))) \
++  $(addprefix $(csu-objpfx),start.o) $(+preinit) $(+postinit)
++	$(+link-static-tests)
++endif
++
+ ifeq ($(build-bounded),yes)
+ binaries-bounded = $(addsuffix -bp,$(tests) $(xtests) $(test-srcs))
+ $(addprefix $(objpfx),$(binaries-bounded)): %-bp: %.ob \
diff --git a/patches/glibc/2.16.0/100-make-4.patch b/patches/glibc/2.16.0/100-make-4.patch
deleted file mode 100644
index bf6a547..0000000
--- a/patches/glibc/2.16.0/100-make-4.patch
+++ /dev/null
@@ -1,24 +0,0 @@
-diff -urN a/configure b/configure
---- a/configure	2014-01-30 00:29:11.327126414 +0000
-+++ b/configure	2014-01-30 00:45:45.455833677 +0000
-@@ -4845,7 +4845,7 @@
-   ac_prog_version=`$MAKE --version 2>&1 | sed -n 's/^.*GNU Make[^0-9]*\([0-9][0-9.]*\).*$/\1/p'`
-   case $ac_prog_version in
-     '') ac_prog_version="v. ?.??, bad"; ac_verc_fail=yes;;
--    3.79* | 3.[89]*)
-+    3.79* | 3.[89]* | 4.*)
-        ac_prog_version="$ac_prog_version, ok"; ac_verc_fail=no;;
-     *) ac_prog_version="$ac_prog_version, bad"; ac_verc_fail=yes;;
- 
-diff -urN a/configure.in b/configure.in
---- a/configure.in	2012-06-30 20:12:34.000000000 +0100
-+++ b/configure.in	2014-01-30 00:45:45.455833677 +0000
-@@ -940,7 +940,7 @@
-   critic_missing="$critic_missing gcc")
- AC_CHECK_PROG_VER(MAKE, gnumake gmake make, --version,
-   [GNU Make[^0-9]*\([0-9][0-9.]*\)],
--  [3.79* | 3.[89]*], critic_missing="$critic_missing make")
-+  [3.79* | 3.[89]* | 4.*], critic_missing="$critic_missing make")
- 
- AC_CHECK_PROG_VER(MSGFMT, gnumsgfmt gmsgfmt msgfmt, --version,
-   [GNU gettext.* \([0-9]*\.[0-9.]*\)],
diff --git a/patches/glibc/2.16.0/110-configure-Default-to-CPP-CC--E-unless-overridden.patch b/patches/glibc/2.16.0/110-configure-Default-to-CPP-CC--E-unless-overridden.patch
deleted file mode 100644
index ab9e99b..0000000
--- a/patches/glibc/2.16.0/110-configure-Default-to-CPP-CC--E-unless-overridden.patch
+++ /dev/null
@@ -1,242 +0,0 @@
-diff -urN a/ChangeLog b/ChangeLog
---- a/ChangeLog	2014-01-30 01:29:35.376504709 +0000
-+++ b/ChangeLog	2014-01-30 01:30:29.690677901 +0000
-@@ -1,3 +1,8 @@
-+2013-01-25  Thomas Schwinge  <thomas@codesourcery.com>
-+
-+        * configure.in (AC_PROG_CPP): New definition.
-+        * configure: Regenerate.
-+
- 2012-06-30  Carlos O'Donell  <carlos_odonell@mentor.com>
- 
- 	* NEWS: Update copyright. Remove last-updated date.
-diff -urN a/configure b/configure
---- a/configure	2014-01-30 01:29:35.723176691 +0000
-+++ b/configure	2014-01-30 01:29:59.923550901 +0000
-@@ -1554,43 +1554,6 @@
- 
- } # ac_fn_c_try_compile
- 
--# ac_fn_c_try_cpp LINENO
--# ----------------------
--# Try to preprocess conftest.$ac_ext, and return whether this succeeded.
--ac_fn_c_try_cpp ()
--{
--  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
--  if { { ac_try="$ac_cpp conftest.$ac_ext"
--case "(($ac_try" in
--  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
--  *) ac_try_echo=$ac_try;;
--esac
--eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
--$as_echo "$ac_try_echo"; } >&5
--  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.err
--  ac_status=$?
--  if test -s conftest.err; then
--    grep -v '^ *+' conftest.err >conftest.er1
--    cat conftest.er1 >&5
--    mv -f conftest.er1 conftest.err
--  fi
--  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
--  test $ac_status = 0; } > conftest.i && {
--	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
--	 test ! -s conftest.err
--       }; then :
--  ac_retval=0
--else
--  $as_echo "$as_me: failed program was:" >&5
--sed 's/^/| /' conftest.$ac_ext >&5
--
--    ac_retval=1
--fi
--  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
--  as_fn_set_status $ac_retval
--
--} # ac_fn_c_try_cpp
--
- # ac_fn_cxx_try_compile LINENO
- # ----------------------------
- # Try to compile conftest.$ac_ext, and return whether this succeeded.
-@@ -2282,6 +2245,11 @@
- # Glibc should not depend on any header files
- 
- 
-+# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
-+# here to work around the Autoconf issue discussed in
-+# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
-+# AC_PROG_CPP
-+
- 
- 
- subdirs="$subdirs "
-@@ -2996,142 +2964,13 @@
- 
- fi
- 
--ac_ext=c
--ac_cpp='$CPP $CPPFLAGS'
--ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
--ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
--ac_compiler_gnu=$ac_cv_c_compiler_gnu
--{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor" >&5
--$as_echo_n "checking how to run the C preprocessor... " >&6; }
- # On Suns, sometimes $CPP names a directory.
- if test -n "$CPP" && test -d "$CPP"; then
-   CPP=
- fi
- if test -z "$CPP"; then
--  if ${ac_cv_prog_CPP+:} false; then :
--  $as_echo_n "(cached) " >&6
--else
--      # Double quotes because CPP needs to be expanded
--    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
--    do
--      ac_preproc_ok=false
--for ac_c_preproc_warn_flag in '' yes
--do
--  # Use a header file that comes with gcc, so configuring glibc
--  # with a fresh cross-compiler works.
--  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
--  # <limits.h> exists even on freestanding compilers.
--  # On the NeXT, cc -E runs the code through the compiler's parser,
--  # not just through cpp. "Syntax error" is here to catch this case.
--  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
--/* end confdefs.h.  */
--#ifdef __STDC__
--# include <limits.h>
--#else
--# include <assert.h>
--#endif
--		     Syntax error
--_ACEOF
--if ac_fn_c_try_cpp "$LINENO"; then :
--
--else
--  # Broken: fails on valid input.
--continue
-+  CPP="$CC -E"
- fi
--rm -f conftest.err conftest.i conftest.$ac_ext
--
--  # OK, works on sane cases.  Now check whether nonexistent headers
--  # can be detected and how.
--  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
--/* end confdefs.h.  */
--#include <ac_nonexistent.h>
--_ACEOF
--if ac_fn_c_try_cpp "$LINENO"; then :
--  # Broken: success on invalid input.
--continue
--else
--  # Passes both tests.
--ac_preproc_ok=:
--break
--fi
--rm -f conftest.err conftest.i conftest.$ac_ext
--
--done
--# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
--rm -f conftest.i conftest.err conftest.$ac_ext
--if $ac_preproc_ok; then :
--  break
--fi
--
--    done
--    ac_cv_prog_CPP=$CPP
--
--fi
--  CPP=$ac_cv_prog_CPP
--else
--  ac_cv_prog_CPP=$CPP
--fi
--{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $CPP" >&5
--$as_echo "$CPP" >&6; }
--ac_preproc_ok=false
--for ac_c_preproc_warn_flag in '' yes
--do
--  # Use a header file that comes with gcc, so configuring glibc
--  # with a fresh cross-compiler works.
--  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
--  # <limits.h> exists even on freestanding compilers.
--  # On the NeXT, cc -E runs the code through the compiler's parser,
--  # not just through cpp. "Syntax error" is here to catch this case.
--  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
--/* end confdefs.h.  */
--#ifdef __STDC__
--# include <limits.h>
--#else
--# include <assert.h>
--#endif
--		     Syntax error
--_ACEOF
--if ac_fn_c_try_cpp "$LINENO"; then :
--
--else
--  # Broken: fails on valid input.
--continue
--fi
--rm -f conftest.err conftest.i conftest.$ac_ext
--
--  # OK, works on sane cases.  Now check whether nonexistent headers
--  # can be detected and how.
--  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
--/* end confdefs.h.  */
--#include <ac_nonexistent.h>
--_ACEOF
--if ac_fn_c_try_cpp "$LINENO"; then :
--  # Broken: success on invalid input.
--continue
--else
--  # Passes both tests.
--ac_preproc_ok=:
--break
--fi
--rm -f conftest.err conftest.i conftest.$ac_ext
--
--done
--# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
--rm -f conftest.i conftest.err conftest.$ac_ext
--if $ac_preproc_ok; then :
--
--else
--  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
--$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
--as_fn_error $? "C preprocessor \"$CPP\" fails sanity check
--See \`config.log' for more details" "$LINENO" 5; }
--fi
--
--ac_ext=c
--ac_cpp='$CPP $CPPFLAGS'
--ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
--ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
--ac_compiler_gnu=$ac_cv_c_compiler_gnu
- 
- # We need the C++ compiler only for testing.
- ac_ext=cpp
-diff -urN a/configure.in b/configure.in
---- a/configure.in	2014-01-30 01:29:35.723176691 +0000
-+++ b/configure.in	2014-01-30 01:29:59.923550901 +0000
-@@ -10,6 +10,23 @@
-   [m4_divert_text([DEFAULTS],
-     [ac_includes_default='/* none */'])])
- 
-+# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
-+# here to work around the Autoconf issue discussed in
-+# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
-+AC_DEFUN([AC_PROG_CPP],
-+[AC_REQUIRE([AC_PROG_CC])dnl
-+AC_ARG_VAR([CPP],      [C preprocessor])dnl
-+_AC_ARG_VAR_CPPFLAGS()dnl
-+# On Suns, sometimes $CPP names a directory.
-+if test -n "$CPP" && test -d "$CPP"; then
-+  CPP=
-+fi
-+if test -z "$CPP"; then
-+  CPP="$CC -E"
-+fi
-+AC_SUBST(CPP)dnl
-+])# AC_PROG_CPP
-+
- dnl This is here so we can set $subdirs directly based on configure fragments.
- AC_CONFIG_SUBDIRS()
- 
diff --git a/patches/glibc/2.16.0/200-make-4.patch b/patches/glibc/2.16.0/200-make-4.patch
new file mode 100644
index 0000000..d8cbe79
--- /dev/null
+++ b/patches/glibc/2.16.0/200-make-4.patch
@@ -0,0 +1,24 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-02-23 14:12:58.111607400 +0000
++++ b/configure	2014-02-23 14:13:08.330905000 +0000
+@@ -4845,7 +4845,7 @@
+   ac_prog_version=`$MAKE --version 2>&1 | sed -n 's/^.*GNU Make[^0-9]*\([0-9][0-9.]*\).*$/\1/p'`
+   case $ac_prog_version in
+     '') ac_prog_version="v. ?.??, bad"; ac_verc_fail=yes;;
+-    3.79* | 3.[89]*)
++    3.79* | 3.[89]* | 4.*)
+        ac_prog_version="$ac_prog_version, ok"; ac_verc_fail=no;;
+     *) ac_prog_version="$ac_prog_version, bad"; ac_verc_fail=yes;;
+ 
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-23 14:12:58.112107400 +0000
++++ b/configure.in	2014-02-23 14:13:08.333405400 +0000
+@@ -940,7 +940,7 @@
+   critic_missing="$critic_missing gcc")
+ AC_CHECK_PROG_VER(MAKE, gnumake gmake make, --version,
+   [GNU Make[^0-9]*\([0-9][0-9.]*\)],
+-  [3.79* | 3.[89]*], critic_missing="$critic_missing make")
++  [3.79* | 3.[89]* | 4.*], critic_missing="$critic_missing make")
+ 
+ AC_CHECK_PROG_VER(MSGFMT, gnumsgfmt gmsgfmt msgfmt, --version,
+   [GNU gettext.* \([0-9]*\.[0-9.]*\)],
diff --git a/patches/glibc/2.16.0/210-configure-Default-to-CPP-CC--E-unless-overridden.patch b/patches/glibc/2.16.0/210-configure-Default-to-CPP-CC--E-unless-overridden.patch
new file mode 100644
index 0000000..59708ec
--- /dev/null
+++ b/patches/glibc/2.16.0/210-configure-Default-to-CPP-CC--E-unless-overridden.patch
@@ -0,0 +1,253 @@
+From bb931195fe780bb63e3d57d0742abad1d2128424 Mon Sep 17 00:00:00 2001
+From: Thomas Schwinge <thomas@codesourcery.com>
+Date: Fri, 25 Jan 2013 12:33:19 +0100
+Subject: [PATCH] configure: Default to CPP="$CC -E" unless overridden.
+
+---
+ ChangeLog    |    5 ++
+ configure    |  173 ++--------------------------------------------------------
+ configure.in |   17 ++++++
+ 3 files changed, 28 insertions(+), 167 deletions(-)
+
+diff -urN a/ChangeLog b/ChangeLog
+--- a/ChangeLog	2014-02-23 14:13:12.265404700 +0000
++++ b/ChangeLog	2014-02-23 14:13:22.534708700 +0000
+@@ -1,3 +1,8 @@
++2013-01-25  Thomas Schwinge  <thomas@codesourcery.com>
++
++        * configure.in (AC_PROG_CPP): New definition.
++        * configure: Regenerate.
++
+ 2012-06-30  Carlos O'Donell  <carlos_odonell@mentor.com>
+ 
+ 	* NEWS: Update copyright. Remove last-updated date.
+diff -urN a/configure b/configure
+--- a/configure	2014-02-23 14:13:12.277406200 +0000
++++ b/configure	2014-02-23 14:13:22.542709700 +0000
+@@ -1554,43 +1554,6 @@
+ 
+ } # ac_fn_c_try_compile
+ 
+-# ac_fn_c_try_cpp LINENO
+-# ----------------------
+-# Try to preprocess conftest.$ac_ext, and return whether this succeeded.
+-ac_fn_c_try_cpp ()
+-{
+-  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+-  if { { ac_try="$ac_cpp conftest.$ac_ext"
+-case "(($ac_try" in
+-  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+-  *) ac_try_echo=$ac_try;;
+-esac
+-eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+-$as_echo "$ac_try_echo"; } >&5
+-  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.err
+-  ac_status=$?
+-  if test -s conftest.err; then
+-    grep -v '^ *+' conftest.err >conftest.er1
+-    cat conftest.er1 >&5
+-    mv -f conftest.er1 conftest.err
+-  fi
+-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+-  test $ac_status = 0; } > conftest.i && {
+-	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+-	 test ! -s conftest.err
+-       }; then :
+-  ac_retval=0
+-else
+-  $as_echo "$as_me: failed program was:" >&5
+-sed 's/^/| /' conftest.$ac_ext >&5
+-
+-    ac_retval=1
+-fi
+-  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
+-  as_fn_set_status $ac_retval
+-
+-} # ac_fn_c_try_cpp
+-
+ # ac_fn_cxx_try_compile LINENO
+ # ----------------------------
+ # Try to compile conftest.$ac_ext, and return whether this succeeded.
+@@ -2282,6 +2245,11 @@
+ # Glibc should not depend on any header files
+ 
+ 
++# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
++# here to work around the Autoconf issue discussed in
++# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
++# AC_PROG_CPP
++
+ 
+ 
+ subdirs="$subdirs "
+@@ -2996,142 +2964,13 @@
+ 
+ fi
+ 
+-ac_ext=c
+-ac_cpp='$CPP $CPPFLAGS'
+-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+-ac_compiler_gnu=$ac_cv_c_compiler_gnu
+-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor" >&5
+-$as_echo_n "checking how to run the C preprocessor... " >&6; }
+ # On Suns, sometimes $CPP names a directory.
+ if test -n "$CPP" && test -d "$CPP"; then
+   CPP=
+ fi
+ if test -z "$CPP"; then
+-  if ${ac_cv_prog_CPP+:} false; then :
+-  $as_echo_n "(cached) " >&6
+-else
+-      # Double quotes because CPP needs to be expanded
+-    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
+-    do
+-      ac_preproc_ok=false
+-for ac_c_preproc_warn_flag in '' yes
+-do
+-  # Use a header file that comes with gcc, so configuring glibc
+-  # with a fresh cross-compiler works.
+-  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+-  # <limits.h> exists even on freestanding compilers.
+-  # On the NeXT, cc -E runs the code through the compiler's parser,
+-  # not just through cpp. "Syntax error" is here to catch this case.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#ifdef __STDC__
+-# include <limits.h>
+-#else
+-# include <assert.h>
+-#endif
+-		     Syntax error
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-
+-else
+-  # Broken: fails on valid input.
+-continue
++  CPP="$CC -E"
+ fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-  # OK, works on sane cases.  Now check whether nonexistent headers
+-  # can be detected and how.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#include <ac_nonexistent.h>
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-  # Broken: success on invalid input.
+-continue
+-else
+-  # Passes both tests.
+-ac_preproc_ok=:
+-break
+-fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-done
+-# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+-rm -f conftest.i conftest.err conftest.$ac_ext
+-if $ac_preproc_ok; then :
+-  break
+-fi
+-
+-    done
+-    ac_cv_prog_CPP=$CPP
+-
+-fi
+-  CPP=$ac_cv_prog_CPP
+-else
+-  ac_cv_prog_CPP=$CPP
+-fi
+-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $CPP" >&5
+-$as_echo "$CPP" >&6; }
+-ac_preproc_ok=false
+-for ac_c_preproc_warn_flag in '' yes
+-do
+-  # Use a header file that comes with gcc, so configuring glibc
+-  # with a fresh cross-compiler works.
+-  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+-  # <limits.h> exists even on freestanding compilers.
+-  # On the NeXT, cc -E runs the code through the compiler's parser,
+-  # not just through cpp. "Syntax error" is here to catch this case.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#ifdef __STDC__
+-# include <limits.h>
+-#else
+-# include <assert.h>
+-#endif
+-		     Syntax error
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-
+-else
+-  # Broken: fails on valid input.
+-continue
+-fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-  # OK, works on sane cases.  Now check whether nonexistent headers
+-  # can be detected and how.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#include <ac_nonexistent.h>
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-  # Broken: success on invalid input.
+-continue
+-else
+-  # Passes both tests.
+-ac_preproc_ok=:
+-break
+-fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-done
+-# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+-rm -f conftest.i conftest.err conftest.$ac_ext
+-if $ac_preproc_ok; then :
+-
+-else
+-  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+-$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+-as_fn_error $? "C preprocessor \"$CPP\" fails sanity check
+-See \`config.log' for more details" "$LINENO" 5; }
+-fi
+-
+-ac_ext=c
+-ac_cpp='$CPP $CPPFLAGS'
+-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+-ac_compiler_gnu=$ac_cv_c_compiler_gnu
+ 
+ # We need the C++ compiler only for testing.
+ ac_ext=cpp
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-23 14:13:12.277906200 +0000
++++ b/configure.in	2014-02-23 14:13:22.545210000 +0000
+@@ -10,6 +10,23 @@
+   [m4_divert_text([DEFAULTS],
+     [ac_includes_default='/* none */'])])
+ 
++# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
++# here to work around the Autoconf issue discussed in
++# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
++AC_DEFUN([AC_PROG_CPP],
++[AC_REQUIRE([AC_PROG_CC])dnl
++AC_ARG_VAR([CPP],      [C preprocessor])dnl
++_AC_ARG_VAR_CPPFLAGS()dnl
++# On Suns, sometimes $CPP names a directory.
++if test -n "$CPP" && test -d "$CPP"; then
++  CPP=
++fi
++if test -z "$CPP"; then
++  CPP="$CC -E"
++fi
++AC_SUBST(CPP)dnl
++])# AC_PROG_CPP
++
+ dnl This is here so we can set $subdirs directly based on configure fragments.
+ AC_CONFIG_SUBDIRS()
+ 
diff --git a/patches/glibc/2.16.0/220-Fix-crossrpc-to-build-on-non-Linux.patch b/patches/glibc/2.16.0/220-Fix-crossrpc-to-build-on-non-Linux.patch
new file mode 100644
index 0000000..4325a3b
--- /dev/null
+++ b/patches/glibc/2.16.0/220-Fix-crossrpc-to-build-on-non-Linux.patch
@@ -0,0 +1,247 @@
+diff -urN a/sunrpc/rpc/types.h b/sunrpc/rpc/types.h
+--- a/sunrpc/rpc/types.h	2014-02-23 14:13:28.918019300 +0000
++++ b/sunrpc/rpc/types.h	2014-02-23 14:13:36.871029200 +0000
+@@ -69,6 +69,7 @@
+ #include <sys/types.h>
+ #endif
+ 
++#ifdef __linux__
+ #ifndef __u_char_defined
+ typedef __u_char u_char;
+ typedef __u_short u_short;
+@@ -84,11 +85,14 @@
+ typedef __caddr_t caddr_t;
+ # define __daddr_t_defined
+ #endif
++#endif
+ 
+ #include <sys/time.h>
+ #include <sys/param.h>
+ 
++#ifndef _WIN32
+ #include <netinet/in.h>
++#endif
+ 
+ #ifndef INADDR_LOOPBACK
+ #define       INADDR_LOOPBACK         (u_long)0x7F000001
+diff -urN a/sunrpc/rpc_main.c b/sunrpc/rpc_main.c
+--- a/sunrpc/rpc_main.c	2014-02-23 14:13:28.926520300 +0000
++++ b/sunrpc/rpc_main.c	2014-02-23 14:13:36.873529500 +0000
+@@ -38,13 +38,19 @@
+ #include <stdio.h>
+ #include <string.h>
+ #include <unistd.h>
++#ifndef IS_IN_build
+ #include <libintl.h>
++#endif
+ #include <ctype.h>
+ #include <sys/types.h>
+ #include <sys/param.h>
+ #include <sys/file.h>
+ #include <sys/stat.h>
++#ifndef _WIN32
+ #include <sys/wait.h>
++#else
++#include <windows.h>
++#endif
+ #include "rpc_parse.h"
+ #include "rpc_util.h"
+ #include "rpc_scan.h"
+@@ -53,6 +59,33 @@
+ #include "../version.h"
+ #define PACKAGE _libc_intl_domainname
+ 
++#ifdef _WIN32
++#define rindex(_dest, _src) strrchr((_dest), (_src))
++
++char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src);
++
++char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src)
++{
++  if (src == NULL)
++      return NULL;
++  return strcpy(dest, src) + strlen(dest);
++}
++#endif /* _WIN32 */
++
++#if defined(_WIN32) || defined(__BSD__)
++
++char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len);
++
++char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len)
++{
++  size_t min_len = strlen(src);
++  if (min_len > len)
++    min_len = len;
++  return strncpy(dest, src, len) + min_len;
++}
++
++#endif /* defined(_WIN32) || defined(__BSD__) */
++
+ #define EXTEND	1		/* alias for TRUE */
+ #define DONT_EXTEND	0	/* alias for FALSE */
+ 
+@@ -83,7 +116,11 @@
+ static const char *CPP = SUNOS_CPP;
+ static const char CPPFLAGS[] = "-C";
+ static char *pathbuf;
++#ifdef _WIN32
++static HANDLE cpp_pid;
++#else
+ static int cpp_pid;
++#endif
+ static const char *allv[] =
+ {
+   "rpcgen", "-s", "udp", "-s", "tcp"
+@@ -327,6 +364,20 @@
+ {
+   struct stat buf;
+ 
++  /* Avoid trying to directly execute a bash script on Windows. */
++#ifdef _WIN32
++  char* CPPENVV = getenv("CPP");
++  if (CPPENVV)
++    {
++      CPP = (char*)malloc(strlen(CPPENVV)+1);
++      strcpy((char*)CPP, CPPENVV);
++      /* Don't bother checking that it exists with stat64 as
++       * we'd have to check in the path, also it usually ends
++       * with a few arguments. */
++      return;
++    }
++#endif
++
+   if (stat (CPP, &buf) < 0)
+     {				/* /lib/cpp or explicit cpp does not exist */
+       if (cppDefined)
+@@ -346,9 +397,122 @@
+     }
+ }
+ 
++#ifdef _WIN32
++/*
++ * Open input file with given define for C-preprocessor
++ */
++static void
++open_input (const char *infile, const char *define)
++{
++  int argi;
++  int argcc = 0;
++  LPSTR argsall;
++  HANDLE StdOutHandle;
++  HANDLE StdErrHandle;
++  HANDLE ReadPipe;
++  HANDLE WritePipe;
++  SECURITY_ATTRIBUTES SecAttr;
++  STARTUPINFO StartupInfo;
++  PROCESS_INFORMATION ProcessInfo;
++  DWORD Status;
++
++  find_cpp ();
++  putarg (0, CPP);
++  putarg (1, CPPFLAGS);
++  addarg (define);
++  if (infile)
++    addarg (infile);
++  addarg ((char *) NULL);
++  for (argi = 0; argi < argcount - 1; ++argi)
++    {
++      argcc += strlen(arglist[argi])+2;
++    }
++  argsall = (LPSTR)alloca(argcc + 1);
++  if (!argsall)
++    {
++      fprintf (stderr, _ ("cannot alloca for argsall\n"));
++      exit (1);
++    }
++  argsall[0] = '\0';
++  for (argi = 0; argi < argcount - 1; ++argi)
++    {
++      strcat((char*)argsall, arglist[argi]);
++      strcat((char*)argsall, " ");
++    }
++
++  memset(&SecAttr,     0, sizeof(SecAttr));
++  memset(&StartupInfo, 0, sizeof(StartupInfo));
++  memset(&ProcessInfo, 0, sizeof(ProcessInfo));
++
++  SecAttr.nLength = sizeof(SecAttr);
++  SecAttr.bInheritHandle = TRUE;
++
++  Status = CreatePipe( &ReadPipe, &WritePipe, &SecAttr, 0 );
++  if (!Status)
++    {
++      fprintf (stderr, _ ("cannot CreatePipe: GetLastError() -> %d\n"), GetLastError());
++      exit (1);
++    }
++
++  SetHandleInformation( ReadPipe, HANDLE_FLAG_INHERIT, 0 );
++
++  /*
++  StdOutHandle = GetStdHandle( STD_OUTPUT_HANDLE );
++  StdErrHandle = GetStdHandle( STD_ERROR_HANDLE );
++  if (StdOutHandle != INVALID_HANDLE_VALUE) {
++      SetHandleInformation( StdOutHandle, HANDLE_FLAG_INHERIT, 0 );
++  }
++  if (StdErrHandle != INVALID_HANDLE_VALUE) {
++      SetHandleInformation( StdErrHandle, HANDLE_FLAG_INHERIT, 0 );
++  }
++  */
++
++  StartupInfo.cb         = sizeof(StartupInfo);
++  StartupInfo.hStdInput  = GetStdHandle( STD_INPUT_HANDLE );
++  StartupInfo.hStdOutput = WritePipe;
++  StartupInfo.hStdError  = GetStdHandle( STD_ERROR_HANDLE );
++  StartupInfo.dwFlags    = STARTF_USESTDHANDLES;
++
++  Status = CreateProcess(
++          NULL,           /* lpApplicationName */
++          argsall,        /* lpCommandLine */
++          NULL,           /* lpProcessAttributes */
++          NULL,           /* lpThreadAttributes */
++          TRUE,           /* bInheritHandles */
++          0,              /* dwCreationFlags */
++          NULL,           /* lpEnvironment */
++          NULL,           /* lpCurrentDirectory */
++          &StartupInfo,   /* lpStartupInfo */
++          &ProcessInfo ); /* lpProcessInformation */
++
++  CloseHandle( WritePipe );
++  if (!Status)
++    {
++      fprintf (stderr, _ ("cannot find C preprocessor: %s, GetLastError() -> %d\n"), CPP, GetLastError());
++      exit (1);
++    }
++  int fd = _open_osfhandle((intptr_t)ReadPipe, _O_APPEND | _O_RDONLY);
++  if(fd != -1)
++    {
++      fin = _fdopen(fd, "a+");
++    }
++  cpp_pid = ProcessInfo.hProcess;
++}
++
++/* Close the connection to the C-preprocessor and check for successfull
++   termination.  */
++static void
++close_input (void)
++{
++  WaitForSingleObject(cpp_pid, INFINITE);
++}
++
++#else
++
+ /*
+  * Open input file with given define for C-preprocessor
+  */
++
+ static void
+ open_input (const char *infile, const char *define)
+ {
+@@ -416,6 +580,7 @@
+       crash ();
+     }
+ }
++#endif
+ 
+ /* valid tirpc nettypes */
+ static const char *valid_ti_nettypes[] =
diff --git a/patches/glibc/2.16.0/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch b/patches/glibc/2.16.0/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
new file mode 100644
index 0000000..8904839
--- /dev/null
+++ b/patches/glibc/2.16.0/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
@@ -0,0 +1,113 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-02-23 14:13:40.847534100 +0000
++++ b/configure	2014-02-23 14:13:51.181346400 +0000
+@@ -630,6 +630,7 @@
+ libc_cv_gcc_static_libgcc
+ CXX_SYSINCLUDES
+ SYSINCLUDES
++sysheaders
+ AUTOCONF
+ NM
+ READELF
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-23 14:13:40.848034200 +0000
++++ b/configure.in	2014-02-23 14:13:51.185346900 +0000
+@@ -1026,6 +1026,7 @@
+     done
+   fi
+ fi
++AC_SUBST(sysheaders)
+ AC_SUBST(SYSINCLUDES)
+ AC_SUBST(CXX_SYSINCLUDES)
+ 
+diff -urN a/elf/Makefile b/elf/Makefile
+--- a/elf/Makefile	2014-02-23 14:13:41.011054900 +0000
++++ b/elf/Makefile	2014-02-23 14:13:51.187847200 +0000
+@@ -60,6 +60,15 @@
+ ld-map		= $(common-objpfx)ld.map
+ endif
+ 
++# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
++# suffix of w means Windows.
++uname_o := $(shell uname -o)
++ifneq (, $(findstring Msys, $(uname_o)))
++common-objpfxw = $(shell cd $(common-objpfx); pwd -W)/
++else
++common-objpfxw = $(common-objpfx)
++endif
++
+ ifeq (yes,$(build-shared))
+ extra-objs	= $(all-rtld-routines:%=%.os) soinit.os sofini.os interp.os
+ generated	+= librtld.os dl-allobjs.os ld.so ldd
+@@ -299,15 +308,15 @@
+ 
+ $(objpfx)librtld.mk: $(objpfx)librtld.map Makefile
+ 	LC_ALL=C \
+-	sed -n 's@^$(common-objpfx)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
++	sed -n 's@^$(common-objpfxw)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
+ 	    $< | \
+ 	while read lib file; do \
+ 	  case $$lib in \
+ 	  libc_pic.a) \
+ 	    LC_ALL=C fgrep -l /$$file \
+-		  $(common-objpfx)stamp.os $(common-objpfx)*/stamp.os | \
++		  $(common-objpfxw)stamp.os $(common-objpfxw)*/stamp.os | \
+ 	    LC_ALL=C \
+-	    sed 's@^$(common-objpfx)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
++	    sed 's@^$(common-objpfxw)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
+ 	    ;; \
+ 	  */*.a) \
+ 	    echo rtld-$${lib%%/*} += $$file ;; \
+diff -urN a/Makefile.in b/Makefile.in
+--- a/Makefile.in	2014-04-26 17:52:37.109770000 +0100
++++ b/Makefile.in	2014-04-26 17:53:54.577200900 +0100
+@@ -1,11 +1,12 @@
+ srcdir = @srcdir@
++sysheaders = @sysheaders@
+ 
+ # Uncomment the line below if you want to do parallel build.
+ # PARALLELMFLAGS = -j 4
+ 
+ all .DEFAULT:
+-	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` $@
++	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` sysheaders=$(sysheaders) $@
+ 
+ install:
+ 	LANGUAGE=C LC_ALL=C; export LANGUAGE LC_ALL; \
+-	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` $@
++	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` sysheaders=$(sysheaders) $@
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2014-02-23 14:13:42.293217700 +0000
++++ b/Makerules	2014-02-23 14:13:51.191847700 +0000
+@@ -392,11 +392,29 @@
+ mv -f $(@:.d=.T) $@ $(generate-md5)
+ endef
+ 
++# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
++# suffix of w means Windows, and m means MSYS2.
++uname_o := $(shell uname -o)
++sysroot = $(shell echo `$(CC) -print-file-name="include"`)
++ifneq (, $(findstring Msys, $(uname_o)))
++common-objpfxw = $(shell cd $(common-objpfx); pwd -W)/
++sysheadersw = $(shell cd $(sysheaders); pwd -W)
++sysrootm = $(shell cd $(sysroot); pwd)
++else
++common-objpfxw = $(common-objpfx)
++sysheadersw = $(sysheaders)
++sysrootm = $(sysroot)
++endif
++
+ ifneq (,$(objpfx))
+ # Continuation lines here are dangerous because they introduce spaces!
+ define sed-remove-objpfx
+--e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfx)))@ $$(common-objpfx)@g' \
+--e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfx)))@$$(common-objpfx)@g'
++-e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfxw)))@ $$(common-objpfx)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfxw)))@$$(common-objpfx)@g' \
++-e 's@ $(subst .,\.,$(subst @,\@,$(sysheadersw)))@ $(sysheaders)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(sysheadersw)))@$(sysheaders)@g' \
++-e 's@ $(subst .,\.,$(subst @,\@,$(sysroot)))@ $(sysrootm)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(sysroot)))@$(sysrootm)@g'
+ endef
+ endif
+ 
diff --git a/patches/glibc/2.16.0/240-Rename-extensions-for-case-insensitive-fs.patch b/patches/glibc/2.16.0/240-Rename-extensions-for-case-insensitive-fs.patch
new file mode 100644
index 0000000..0d53b24
--- /dev/null
+++ b/patches/glibc/2.16.0/240-Rename-extensions-for-case-insensitive-fs.patch
@@ -0,0 +1,249 @@
+diff -urN a/ChangeLog b/ChangeLog
+--- a/ChangeLog	2014-04-26 19:50:35.438627200 +0100
++++ b/ChangeLog	2014-04-26 19:50:59.064978600 +0100
+@@ -1,3 +1,8 @@
++2014-01-22  Ray Donnelly  <mingw.android@gmail.com>
++
++        * Rename .oS to .oSTATIC so that builds can be done on file
++        systems that are not both case sensitive and case preserving.
++
+ 2013-01-25  Thomas Schwinge  <thomas@codesourcery.com>
+ 
+         * configure.in (AC_PROG_CPP): New definition.
+diff -urN a/extra-lib.mk b/extra-lib.mk
+--- a/extra-lib.mk	2014-04-26 19:50:35.601636500 +0100
++++ b/extra-lib.mk	2014-04-26 19:50:59.107981000 +0100
+@@ -13,7 +13,7 @@
+ 
+ ifneq (,$($(lib)-static-only-routines))
+ ifneq (,$(filter yes%,$(build-shared)$($(lib).so-version)))
+-object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oS)
++object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oSTATIC)
+ endif
+ endif
+ 
+@@ -29,7 +29,7 @@
+ 
+ # Add each flavor of library to the lists of things to build and install.
+ install-lib += $(foreach o,$(object-suffixes-$(lib)),$(lib:lib%=$(libtype$o)))
+-extra-objs += $(foreach o,$(filter-out .os .oS,$(object-suffixes-$(lib))),\
++extra-objs += $(foreach o,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))),\
+ 			$(patsubst %,%$o,$(filter-out \
+ 					   $($(lib)-shared-only-routines),\
+ 					   $(all-$(lib)-routines))))
+@@ -57,7 +57,7 @@
+ 
+ 
+ # Use o-iterator.mk to generate a rule for each flavor of library.
+-ifneq (,$(filter-out .os .oS,$(object-suffixes-$(lib))))
++ifneq (,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))))
+ define o-iterator-doit
+ $(objpfx)$(patsubst %,$(libtype$o),$(lib:lib%=%)): \
+   $(patsubst %,$(objpfx)%$o,\
+@@ -65,7 +65,7 @@
+ 			  $(all-$(lib)-routines))); \
+ 	$$(build-extra-lib)
+ endef
+-object-suffixes-left = $(filter-out .os .oS,$(object-suffixes-$(lib)))
++object-suffixes-left = $(filter-out .os .oSTATIC,$(object-suffixes-$(lib)))
+ include $(patsubst %,$(..)o-iterator.mk,$(object-suffixes-left))
+ endif
+ 
+@@ -77,9 +77,9 @@
+ 	$(build-extra-lib)
+ endif
+ 
+-ifneq (,$(filter .oS,$(object-suffixes-$(lib))))
+-$(objpfx)$(patsubst %,$(libtype.oS),$(lib:lib%=%)): \
+-  $(patsubst %,$(objpfx)%.oS,\
++ifneq (,$(filter .oSTATIC,$(object-suffixes-$(lib))))
++$(objpfx)$(patsubst %,$(libtype.oSTATIC),$(lib:lib%=%)): \
++  $(patsubst %,$(objpfx)%.oSTATIC,\
+ 	     $(filter $($(lib)-static-only-routines),\
+ 		      $(all-$(lib)-routines)))
+ 	$(build-extra-lib)
+diff -urN a/Makeconfig b/Makeconfig
+--- a/Makeconfig	2014-04-26 19:50:36.127666600 +0100
++++ b/Makeconfig	2014-04-26 19:50:59.109981200 +0100
+@@ -485,7 +485,7 @@
+ # run the linked programs.
+ link-libc-before-gnulib = -Wl,-rpath-link=$(rpath-link) \
+ 	    $(common-objpfx)libc.so$(libc.so-version) \
+-	    $(common-objpfx)$(patsubst %,$(libtype.oS),c) \
++	    $(common-objpfx)$(patsubst %,$(libtype.oSTATIC),c) \
+ 	    $(as-needed) $(common-objpfx)elf/ld.so $(no-as-needed)
+ link-libc = $(link-libc-before-gnulib) $(gnulib)
+ link-libc-tests = $(link-libc-before-gnulib) $(gnulib-tests)
+@@ -739,7 +739,7 @@
+ # The compilation rules use $(CPPFLAGS-${SUFFIX}) and $(CFLAGS-${SUFFIX})
+ # to pass different flags for each flavor.
+ libtypes = $(foreach o,$(object-suffixes-for-libc),$(libtype$o))
+-all-object-suffixes := .o .os .op .og .ob .oS
++all-object-suffixes := .o .os .op .og .ob .oSTATIC
+ object-suffixes :=
+ CPPFLAGS-.o = $(pic-default)
+ CFLAGS-.o = $(filter %frame-pointer,$(+cflags))
+@@ -790,14 +790,14 @@
+ 
+ ifeq (yes,$(build-shared))
+ # Build special library that contains the static-only routines for libc.
+-object-suffixes-for-libc += .oS
++object-suffixes-for-libc += .oSTATIC
+ 
+ # Must build the routines as PIC, though, because they can end up in (users')
+ # shared objects.  We don't want to use CFLAGS-os because users may, for
+ # example, make that processor-specific.
+-CFLAGS-.oS = $(CFLAGS-.o) $(PIC-ccflag)
+-CPPFLAGS-.oS = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
+-libtype.oS = lib%_nonshared.a
++CFLAGS-.oSTATIC = $(CFLAGS-.o) $(PIC-ccflag)
++CPPFLAGS-.oSTATIC = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
++libtype.oSTATIC = lib%_nonshared.a
+ endif
+ 
+ # The assembler can generate debug information too.
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2014-04-26 19:50:36.128666700 +0100
++++ b/Makerules	2014-04-26 19:54:45.876951500 +0100
+@@ -161,14 +161,14 @@
+ # We only generate these in the top-level makefile, to avoid any weirdness
+ # from subdir-specific makefile tweaks creeping in on an update.
+ $(common-objpfx)%.make: $(..)%.make.c $(..)Makerules $(common-before-compile)
+-	rm -f $@T $@.dT
++	rm -f $@T $@.dTEMP
+ 	(echo '# Generated from $*.make.c by Makerules.'; \
+ 	 $(CC) $(CFLAGS) $(CPPFLAGS) -E -DASSEMBLER $< \
+-	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dT \
++	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dTEMP \
+ 	 | sed -n '/@@@/{s/@@@[	 ]*\(.*\)@@@/\1/;s/[	 ]*$$//p;}'; \
+ 	 echo 'common-generated += $(@F)'; \
+-	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dT; \
+-	 rm -f $@.dT) > $@T
++	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dTEMP; \
++	 rm -f $@.dTEMP) > $@T
+ 	mv -f $@T $@
+ endif
+ 
+@@ -350,7 +350,7 @@
+ endif # $(versioning) = yes
+ endif # sysd-sorted-done
+ 
+-# Generate .dT files as we compile.
++# Generate .dTEMP files as we compile.
+ compile-mkdep-flags = -MD -MP -MF $@.dt -MT $@
+ compile-command.S = $(compile.S) $(OUTPUT_OPTION) $(compile-mkdep-flags)
+ compile-command.c = $(compile.c) $(OUTPUT_OPTION) $(compile-mkdep-flags)
+@@ -430,7 +430,7 @@
+ # Bounded pointer thunks are only built for *.ob
+ elide-bp-thunks = $(addprefix $(bppfx),$(bp-thunks))
+ 
+-elide-routines.oS += $(filter-out $(static-only-routines),\
++elide-routines.oSTATIC += $(filter-out $(static-only-routines),\
+ 				  $(routines) $(aux) $(sysdep_routines)) \
+ 		     $(elide-bp-thunks)
+ elide-routines.os += $(static-only-routines) $(elide-bp-thunks)
+@@ -655,7 +655,7 @@
+ 
+ +depfiles := $(sources:.c=.d) \
+ 	     $(patsubst %.o,%.d,$(filter %.o,$(extra-objs:.os=.o))) \
+-	     $(patsubst %.oS,%.d,$(filter %.oS,$(extra-objs))) \
++            $(patsubst %.oSTATIC,%.d,$(filter %.oSTATIC,$(extra-objs))) \
+ 	     $(patsubst %.o,%.d,$(filter %.o,$(extra-test-objs:.os=.o))) \
+ 	     $(addsuffix .d,$(tests) $(xtests) $(test-srcs))
+ ifeq ($(build-programs),yes)
+@@ -946,7 +946,7 @@
+ install: $(inst_libdir)/libc.so
+ $(inst_libdir)/libc.so: $(common-objpfx)format.lds \
+ 			$(common-objpfx)libc.so$(libc.so-version) \
+-			$(inst_libdir)/$(patsubst %,$(libtype.oS),\
++			$(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
+ 						  $(libprefix)$(libc-name)) \
+ 			$(+force)
+ 	(echo '/* GNU ld script';\
+@@ -954,7 +954,7 @@
+ 	 echo '   the static library, so try that secondarily.  */';\
+ 	 cat $<; \
+ 	 echo 'GROUP ( $(slibdir)/libc.so$(libc.so-version)' \
+-	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)$(libc-name))'\
++	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)$(libc-name))'\
+ 	      ' AS_NEEDED (' $(slibdir)/$(rtld-installed-name) ') )' \
+ 	) > $@.new
+ 	mv -f $@.new $@
+diff -urN a/nptl/Makefile b/nptl/Makefile
+--- a/nptl/Makefile	2014-04-26 19:50:36.603693900 +0100
++++ b/nptl/Makefile	2014-04-26 19:50:59.114981400 +0100
+@@ -372,7 +372,7 @@
+ 
+ $(inst_libdir)/libpthread.so: $(common-objpfx)format.lds \
+ 			      $(objpfx)libpthread.so$(libpthread.so-version) \
+-			      $(inst_libdir)/$(patsubst %,$(libtype.oS),\
++			      $(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
+ 							$(libprefix)pthread) \
+ 			      $(+force)
+ 	(echo '/* GNU ld script';\
+@@ -380,7 +380,7 @@
+ 	 echo '   the static library, so try that secondarily.  */';\
+ 	 cat $<; \
+ 	 echo 'GROUP ( $(slibdir)/libpthread.so$(libpthread.so-version)' \
+-	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)pthread)'\
++	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)pthread)'\
+ 	      ')' \
+ 	) > $@.new
+ 	mv -f $@.new $@
+diff -urN a/sysdeps/i386/i686/Makefile b/sysdeps/i386/i686/Makefile
+--- a/sysdeps/i386/i686/Makefile	2014-04-26 19:50:37.184727100 +0100
++++ b/sysdeps/i386/i686/Makefile	2014-04-26 19:50:59.116981600 +0100
+@@ -16,12 +16,12 @@
+ CFLAGS-.op += -Wa,-mtune=i686
+ CFLAGS-.og += -Wa,-mtune=i686
+ CFLAGS-.ob += -Wa,-mtune=i686
+-CFLAGS-.oS += -Wa,-mtune=i686
++CFLAGS-.oSTATIC += -Wa,-mtune=i686
+ 
+ ASFLAGS-.o += -Wa,-mtune=i686
+ ASFLAGS-.os += -Wa,-mtune=i686
+ ASFLAGS-.op += -Wa,-mtune=i686
+ ASFLAGS-.og += -Wa,-mtune=i686
+ ASFLAGS-.ob += -Wa,-mtune=i686
+-ASFLAGS-.oS += -Wa,-mtune=i686
++ASFLAGS-.oSTATIC += -Wa,-mtune=i686
+ endif
+diff -urN a/sysdeps/ieee754/ldbl-opt/Makefile b/sysdeps/ieee754/ldbl-opt/Makefile
+--- a/sysdeps/ieee754/ldbl-opt/Makefile	2014-04-26 19:50:37.328735300 +0100
++++ b/sysdeps/ieee754/ldbl-opt/Makefile	2014-04-26 19:52:01.450546800 +0100
+@@ -44,6 +44,6 @@
+ libnldbl-routines = $(libnldbl-calls:%=nldbl-%)
+ libnldbl-inhibit-o = $(object-suffixes)
+ libnldbl-static-only-routines = $(libnldbl-routines)
+-extra-objs += $(addsuffix .oS, $(libnldbl-routines))
++extra-objs += $(addsuffix .oSTATIC, $(libnldbl-routines))
+ 
+ endif
+diff -urN a/sysdeps/sparc/sparc32/sparcv9/Makefile b/sysdeps/sparc/sparc32/sparcv9/Makefile
+--- a/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-04-26 19:50:37.639753100 +0100
++++ b/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-04-26 19:50:59.117981600 +0100
+@@ -11,12 +11,12 @@
+ ASFLAGS-.op += -Wa,-Av9d
+ ASFLAGS-.og += -Wa,-Av9d
+ ASFLAGS-.ob += -Wa,-Av9d
+-ASFLAGS-.oS += -Wa,-Av9d
++ASFLAGS-.oSTATIC += -Wa,-Av9d
+ else
+ ASFLAGS-.o += -Wa,-Av9a
+ ASFLAGS-.os += -Wa,-Av9a
+ ASFLAGS-.op += -Wa,-Av9a
+ ASFLAGS-.og += -Wa,-Av9a
+ ASFLAGS-.ob += -Wa,-Av9a
+-ASFLAGS-.oS += -Wa,-Av9a
++ASFLAGS-.oSTATIC += -Wa,-Av9a
+ endif
+diff -urN a/sysdeps/sparc/sparc64/Makefile b/sysdeps/sparc/sparc64/Makefile
+--- a/sysdeps/sparc/sparc64/Makefile	2014-04-26 19:50:37.669754800 +0100
++++ b/sysdeps/sparc/sparc64/Makefile	2014-04-26 19:52:10.840083900 +0100
+@@ -13,5 +13,5 @@
+ ASFLAGS-.op += -Wa,-Av9d
+ ASFLAGS-.og += -Wa,-Av9d
+ ASFLAGS-.ob += -Wa,-Av9d
+-ASFLAGS-.oS += -Wa,-Av9d
++ASFLAGS-.oSTATIC += -Wa,-Av9d
+ endif
diff --git a/patches/glibc/2.16.0/250-MSYS-Hack-force-ln-s.patch b/patches/glibc/2.16.0/250-MSYS-Hack-force-ln-s.patch
new file mode 100644
index 0000000..58ea731
--- /dev/null
+++ b/patches/glibc/2.16.0/250-MSYS-Hack-force-ln-s.patch
@@ -0,0 +1,39 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-02-23 14:14:09.194633800 +0000
++++ b/configure	2014-02-23 14:14:19.480939900 +0000
+@@ -4386,6 +4386,16 @@
+ $as_echo "no, using $LN_S" >&6; }
+ fi
+ 
++# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
++# eglibc, whereas cp -r doesn't.
++case "$build_os" in
++*mingw*)
++  as_ln_s='ln -s'
++  LN_S=$as_ln_s
++  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&5
++$as_echo "$as_me: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&2;}
++  ;;
++esac
+ 
+ # Was a --with-binutils option given?
+ if test -n "$path_binutils"; then
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-23 14:14:09.195133800 +0000
++++ b/configure.in	2014-02-23 14:14:19.484440400 +0000
+@@ -938,6 +938,15 @@
+   INSTALL='\$(..)./scripts/install-sh -c'
+ fi
+ AC_PROG_LN_S
++# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
++# eglibc, whereas cp -r doesn't.
++case "$build_os" in
++*mingw*)
++  as_ln_s='ln -s'
++  LN_S=$as_ln_s
++  AC_MSG_WARN(Hacked as_ln_s and LN_S to 'ln -s' for MSYS2)
++  ;;
++esac
+ 
+ LIBC_PROG_BINUTILS
+ AC_SUBST(MIG)dnl Needed by sysdeps/mach/configure.in
diff --git a/patches/glibc/2.17/120-make-4.patch b/patches/glibc/2.17/120-make-4.patch
deleted file mode 100644
index 6fe511c..0000000
--- a/patches/glibc/2.17/120-make-4.patch
+++ /dev/null
@@ -1,24 +0,0 @@
-diff -urN a/configure b/configure
---- a/configure	2014-01-29 14:12:54.386862814 +0000
-+++ b/configure	2014-01-29 14:42:27.716839917 +0000
-@@ -4972,7 +4972,7 @@
-   ac_prog_version=`$MAKE --version 2>&1 | sed -n 's/^.*GNU Make[^0-9]*\([0-9][0-9.]*\).*$/\1/p'`
-   case $ac_prog_version in
-     '') ac_prog_version="v. ?.??, bad"; ac_verc_fail=yes;;
--    3.79* | 3.[89]*)
-+    3.79* | 3.[89]* | 4.*)
-        ac_prog_version="$ac_prog_version, ok"; ac_verc_fail=no;;
-     *) ac_prog_version="$ac_prog_version, bad"; ac_verc_fail=yes;;
- 
-diff -urN a/configure.in b/configure.in
---- a/configure.in	2012-12-25 03:02:13.000000000 +0000
-+++ b/configure.in	2014-01-29 14:42:27.720173268 +0000
-@@ -935,7 +935,7 @@
-   critic_missing="$critic_missing gcc")
- AC_CHECK_PROG_VER(MAKE, gnumake gmake make, --version,
-   [GNU Make[^0-9]*\([0-9][0-9.]*\)],
--  [3.79* | 3.[89]*], critic_missing="$critic_missing make")
-+  [3.79* | 3.[89]* | 4.*], critic_missing="$critic_missing make")
- 
- AC_CHECK_PROG_VER(MSGFMT, gnumsgfmt gmsgfmt msgfmt, --version,
-   [GNU gettext.* \([0-9]*\.[0-9.]*\)],
diff --git a/patches/glibc/2.17/130-configure-Default-to-CPP-CC--E-unless-overridden.patch b/patches/glibc/2.17/130-configure-Default-to-CPP-CC--E-unless-overridden.patch
deleted file mode 100644
index 0650742..0000000
--- a/patches/glibc/2.17/130-configure-Default-to-CPP-CC--E-unless-overridden.patch
+++ /dev/null
@@ -1,253 +0,0 @@
-From bb931195fe780bb63e3d57d0742abad1d2128424 Mon Sep 17 00:00:00 2001
-From: Thomas Schwinge <thomas@codesourcery.com>
-Date: Fri, 25 Jan 2013 12:33:19 +0100
-Subject: [PATCH] configure: Default to CPP="$CC -E" unless overridden.
-
----
- ChangeLog    |    5 ++
- configure    |  173 ++--------------------------------------------------------
- configure.in |   17 ++++++
- 3 files changed, 28 insertions(+), 167 deletions(-)
-
-diff -urN a/ChangeLog b/ChangeLog
---- a/ChangeLog	2014-01-29 18:23:27.916668889 +0000
-+++ b/ChangeLog	2014-01-29 18:24:31.976668032 +0000
-@@ -1,3 +1,8 @@
-+2013-01-25  Thomas Schwinge  <thomas@codesourcery.com>
-+
-+       * configure.in (AC_PROG_CPP): New definition.
-+       * configure: Regenerate.
-+
- 2012-12-21  David S. Miller  <davem@davemloft.net>
- 
- 	* po/hr.po: Update from translation team.
-diff -urN a/configure b/configure
---- a/configure	2014-01-29 18:23:28.080002221 +0000
-+++ b/configure	2014-01-29 18:24:05.313334973 +0000
-@@ -1568,43 +1568,6 @@
- 
- } # ac_fn_c_try_compile
- 
--# ac_fn_c_try_cpp LINENO
--# ----------------------
--# Try to preprocess conftest.$ac_ext, and return whether this succeeded.
--ac_fn_c_try_cpp ()
--{
--  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
--  if { { ac_try="$ac_cpp conftest.$ac_ext"
--case "(($ac_try" in
--  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
--  *) ac_try_echo=$ac_try;;
--esac
--eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
--$as_echo "$ac_try_echo"; } >&5
--  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.err
--  ac_status=$?
--  if test -s conftest.err; then
--    grep -v '^ *+' conftest.err >conftest.er1
--    cat conftest.er1 >&5
--    mv -f conftest.er1 conftest.err
--  fi
--  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
--  test $ac_status = 0; } > conftest.i && {
--	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
--	 test ! -s conftest.err
--       }; then :
--  ac_retval=0
--else
--  $as_echo "$as_me: failed program was:" >&5
--sed 's/^/| /' conftest.$ac_ext >&5
--
--    ac_retval=1
--fi
--  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
--  as_fn_set_status $ac_retval
--
--} # ac_fn_c_try_cpp
--
- # ac_fn_cxx_try_compile LINENO
- # ----------------------------
- # Try to compile conftest.$ac_ext, and return whether this succeeded.
-@@ -2354,6 +2317,11 @@
- # Glibc should not depend on any header files
- 
- 
-+# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
-+# here to work around the Autoconf issue discussed in
-+# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
-+# AC_PROG_CPP
-+
- 
- 
- subdirs="$subdirs "
-@@ -3068,142 +3036,13 @@
- 
- fi
- 
--ac_ext=c
--ac_cpp='$CPP $CPPFLAGS'
--ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
--ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
--ac_compiler_gnu=$ac_cv_c_compiler_gnu
--{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor" >&5
--$as_echo_n "checking how to run the C preprocessor... " >&6; }
- # On Suns, sometimes $CPP names a directory.
- if test -n "$CPP" && test -d "$CPP"; then
-   CPP=
- fi
- if test -z "$CPP"; then
--  if ${ac_cv_prog_CPP+:} false; then :
--  $as_echo_n "(cached) " >&6
--else
--      # Double quotes because CPP needs to be expanded
--    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
--    do
--      ac_preproc_ok=false
--for ac_c_preproc_warn_flag in '' yes
--do
--  # Use a header file that comes with gcc, so configuring glibc
--  # with a fresh cross-compiler works.
--  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
--  # <limits.h> exists even on freestanding compilers.
--  # On the NeXT, cc -E runs the code through the compiler's parser,
--  # not just through cpp. "Syntax error" is here to catch this case.
--  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
--/* end confdefs.h.  */
--#ifdef __STDC__
--# include <limits.h>
--#else
--# include <assert.h>
--#endif
--		     Syntax error
--_ACEOF
--if ac_fn_c_try_cpp "$LINENO"; then :
--
--else
--  # Broken: fails on valid input.
--continue
--fi
--rm -f conftest.err conftest.i conftest.$ac_ext
--
--  # OK, works on sane cases.  Now check whether nonexistent headers
--  # can be detected and how.
--  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
--/* end confdefs.h.  */
--#include <ac_nonexistent.h>
--_ACEOF
--if ac_fn_c_try_cpp "$LINENO"; then :
--  # Broken: success on invalid input.
--continue
--else
--  # Passes both tests.
--ac_preproc_ok=:
--break
--fi
--rm -f conftest.err conftest.i conftest.$ac_ext
--
--done
--# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
--rm -f conftest.i conftest.err conftest.$ac_ext
--if $ac_preproc_ok; then :
--  break
--fi
--
--    done
--    ac_cv_prog_CPP=$CPP
--
--fi
--  CPP=$ac_cv_prog_CPP
--else
--  ac_cv_prog_CPP=$CPP
--fi
--{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $CPP" >&5
--$as_echo "$CPP" >&6; }
--ac_preproc_ok=false
--for ac_c_preproc_warn_flag in '' yes
--do
--  # Use a header file that comes with gcc, so configuring glibc
--  # with a fresh cross-compiler works.
--  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
--  # <limits.h> exists even on freestanding compilers.
--  # On the NeXT, cc -E runs the code through the compiler's parser,
--  # not just through cpp. "Syntax error" is here to catch this case.
--  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
--/* end confdefs.h.  */
--#ifdef __STDC__
--# include <limits.h>
--#else
--# include <assert.h>
--#endif
--		     Syntax error
--_ACEOF
--if ac_fn_c_try_cpp "$LINENO"; then :
--
--else
--  # Broken: fails on valid input.
--continue
-+  CPP="$CC -E"
- fi
--rm -f conftest.err conftest.i conftest.$ac_ext
--
--  # OK, works on sane cases.  Now check whether nonexistent headers
--  # can be detected and how.
--  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
--/* end confdefs.h.  */
--#include <ac_nonexistent.h>
--_ACEOF
--if ac_fn_c_try_cpp "$LINENO"; then :
--  # Broken: success on invalid input.
--continue
--else
--  # Passes both tests.
--ac_preproc_ok=:
--break
--fi
--rm -f conftest.err conftest.i conftest.$ac_ext
--
--done
--# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
--rm -f conftest.i conftest.err conftest.$ac_ext
--if $ac_preproc_ok; then :
--
--else
--  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
--$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
--as_fn_error $? "C preprocessor \"$CPP\" fails sanity check
--See \`config.log' for more details" "$LINENO" 5; }
--fi
--
--ac_ext=c
--ac_cpp='$CPP $CPPFLAGS'
--ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
--ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
--ac_compiler_gnu=$ac_cv_c_compiler_gnu
- 
- # We need the C++ compiler only for testing.
- ac_ext=cpp
-diff -urN a/configure.in b/configure.in
---- a/configure.in	2014-01-29 18:23:28.073335554 +0000
-+++ b/configure.in	2014-01-29 18:24:05.313334973 +0000
-@@ -17,6 +17,23 @@
-   [m4_divert_text([DEFAULTS],
-     [ac_includes_default='/* none */'])])
- 
-+# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
-+# here to work around the Autoconf issue discussed in
-+# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
-+AC_DEFUN([AC_PROG_CPP],
-+[AC_REQUIRE([AC_PROG_CC])dnl
-+AC_ARG_VAR([CPP],      [C preprocessor])dnl
-+_AC_ARG_VAR_CPPFLAGS()dnl
-+# On Suns, sometimes $CPP names a directory.
-+if test -n "$CPP" && test -d "$CPP"; then
-+  CPP=
-+fi
-+if test -z "$CPP"; then
-+  CPP="$CC -E"
-+fi
-+AC_SUBST(CPP)dnl
-+])# AC_PROG_CPP
-+
- dnl This is here so we can set $subdirs directly based on configure fragments.
- AC_CONFIG_SUBDIRS()
- 
diff --git a/patches/glibc/2.17/200-make-4.patch b/patches/glibc/2.17/200-make-4.patch
new file mode 100644
index 0000000..5dc2360
--- /dev/null
+++ b/patches/glibc/2.17/200-make-4.patch
@@ -0,0 +1,24 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-03-21 00:27:39.435350849 +0000
++++ b/configure	2014-03-21 00:28:07.442450725 +0000
+@@ -4972,7 +4972,7 @@
+   ac_prog_version=`$MAKE --version 2>&1 | sed -n 's/^.*GNU Make[^0-9]*\([0-9][0-9.]*\).*$/\1/p'`
+   case $ac_prog_version in
+     '') ac_prog_version="v. ?.??, bad"; ac_verc_fail=yes;;
+-    3.79* | 3.[89]*)
++    3.79* | 3.[89]* | 4.*)
+        ac_prog_version="$ac_prog_version, ok"; ac_verc_fail=no;;
+     *) ac_prog_version="$ac_prog_version, bad"; ac_verc_fail=yes;;
+ 
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-03-21 00:27:39.435350849 +0000
++++ b/configure.in	2014-03-21 00:28:07.442450725 +0000
+@@ -935,7 +935,7 @@
+   critic_missing="$critic_missing gcc")
+ AC_CHECK_PROG_VER(MAKE, gnumake gmake make, --version,
+   [GNU Make[^0-9]*\([0-9][0-9.]*\)],
+-  [3.79* | 3.[89]*], critic_missing="$critic_missing make")
++  [3.79* | 3.[89]* | 4.*], critic_missing="$critic_missing make")
+ 
+ AC_CHECK_PROG_VER(MSGFMT, gnumsgfmt gmsgfmt msgfmt, --version,
+   [GNU gettext.* \([0-9]*\.[0-9.]*\)],
diff --git a/patches/glibc/2.17/210-configure-Default-to-CPP-CC--E-unless-overridden.patch b/patches/glibc/2.17/210-configure-Default-to-CPP-CC--E-unless-overridden.patch
new file mode 100644
index 0000000..87d5f22
--- /dev/null
+++ b/patches/glibc/2.17/210-configure-Default-to-CPP-CC--E-unless-overridden.patch
@@ -0,0 +1,253 @@
+From bb931195fe780bb63e3d57d0742abad1d2128424 Mon Sep 17 00:00:00 2001
+From: Thomas Schwinge <thomas@codesourcery.com>
+Date: Fri, 25 Jan 2013 12:33:19 +0100
+Subject: [PATCH] configure: Default to CPP="$CC -E" unless overridden.
+
+---
+ ChangeLog    |    5 ++
+ configure    |  173 ++--------------------------------------------------------
+ configure.in |   17 ++++++
+ 3 files changed, 28 insertions(+), 167 deletions(-)
+
+diff -urN a/ChangeLog b/ChangeLog
+--- a/ChangeLog	2014-03-21 00:29:26.987014343 +0000
++++ b/ChangeLog	2014-03-21 00:29:54.857444991 +0000
+@@ -1,3 +1,8 @@
++2013-01-25  Thomas Schwinge  <thomas@codesourcery.com>
++
++        * configure.in (AC_PROG_CPP): New definition.
++        * configure: Regenerate.
++
+ 2012-12-21  David S. Miller  <davem@davemloft.net>
+ 
+ 	* po/hr.po: Update from translation team.
+diff -urN a/configure b/configure
+--- a/configure	2014-03-21 00:29:26.327003954 +0000
++++ b/configure	2014-03-21 00:29:35.673815016 +0000
+@@ -1568,43 +1568,6 @@
+ 
+ } # ac_fn_c_try_compile
+ 
+-# ac_fn_c_try_cpp LINENO
+-# ----------------------
+-# Try to preprocess conftest.$ac_ext, and return whether this succeeded.
+-ac_fn_c_try_cpp ()
+-{
+-  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+-  if { { ac_try="$ac_cpp conftest.$ac_ext"
+-case "(($ac_try" in
+-  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+-  *) ac_try_echo=$ac_try;;
+-esac
+-eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+-$as_echo "$ac_try_echo"; } >&5
+-  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.err
+-  ac_status=$?
+-  if test -s conftest.err; then
+-    grep -v '^ *+' conftest.err >conftest.er1
+-    cat conftest.er1 >&5
+-    mv -f conftest.er1 conftest.err
+-  fi
+-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+-  test $ac_status = 0; } > conftest.i && {
+-	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+-	 test ! -s conftest.err
+-       }; then :
+-  ac_retval=0
+-else
+-  $as_echo "$as_me: failed program was:" >&5
+-sed 's/^/| /' conftest.$ac_ext >&5
+-
+-    ac_retval=1
+-fi
+-  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
+-  as_fn_set_status $ac_retval
+-
+-} # ac_fn_c_try_cpp
+-
+ # ac_fn_cxx_try_compile LINENO
+ # ----------------------------
+ # Try to compile conftest.$ac_ext, and return whether this succeeded.
+@@ -2354,6 +2317,11 @@
+ # Glibc should not depend on any header files
+ 
+ 
++# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
++# here to work around the Autoconf issue discussed in
++# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
++# AC_PROG_CPP
++
+ 
+ 
+ subdirs="$subdirs "
+@@ -3068,142 +3036,13 @@
+ 
+ fi
+ 
+-ac_ext=c
+-ac_cpp='$CPP $CPPFLAGS'
+-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+-ac_compiler_gnu=$ac_cv_c_compiler_gnu
+-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor" >&5
+-$as_echo_n "checking how to run the C preprocessor... " >&6; }
+ # On Suns, sometimes $CPP names a directory.
+ if test -n "$CPP" && test -d "$CPP"; then
+   CPP=
+ fi
+ if test -z "$CPP"; then
+-  if ${ac_cv_prog_CPP+:} false; then :
+-  $as_echo_n "(cached) " >&6
+-else
+-      # Double quotes because CPP needs to be expanded
+-    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
+-    do
+-      ac_preproc_ok=false
+-for ac_c_preproc_warn_flag in '' yes
+-do
+-  # Use a header file that comes with gcc, so configuring glibc
+-  # with a fresh cross-compiler works.
+-  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+-  # <limits.h> exists even on freestanding compilers.
+-  # On the NeXT, cc -E runs the code through the compiler's parser,
+-  # not just through cpp. "Syntax error" is here to catch this case.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#ifdef __STDC__
+-# include <limits.h>
+-#else
+-# include <assert.h>
+-#endif
+-		     Syntax error
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-
+-else
+-  # Broken: fails on valid input.
+-continue
+-fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-  # OK, works on sane cases.  Now check whether nonexistent headers
+-  # can be detected and how.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#include <ac_nonexistent.h>
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-  # Broken: success on invalid input.
+-continue
+-else
+-  # Passes both tests.
+-ac_preproc_ok=:
+-break
+-fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-done
+-# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+-rm -f conftest.i conftest.err conftest.$ac_ext
+-if $ac_preproc_ok; then :
+-  break
+-fi
+-
+-    done
+-    ac_cv_prog_CPP=$CPP
+-
+-fi
+-  CPP=$ac_cv_prog_CPP
+-else
+-  ac_cv_prog_CPP=$CPP
+-fi
+-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $CPP" >&5
+-$as_echo "$CPP" >&6; }
+-ac_preproc_ok=false
+-for ac_c_preproc_warn_flag in '' yes
+-do
+-  # Use a header file that comes with gcc, so configuring glibc
+-  # with a fresh cross-compiler works.
+-  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+-  # <limits.h> exists even on freestanding compilers.
+-  # On the NeXT, cc -E runs the code through the compiler's parser,
+-  # not just through cpp. "Syntax error" is here to catch this case.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#ifdef __STDC__
+-# include <limits.h>
+-#else
+-# include <assert.h>
+-#endif
+-		     Syntax error
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-
+-else
+-  # Broken: fails on valid input.
+-continue
++  CPP="$CC -E"
+ fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-  # OK, works on sane cases.  Now check whether nonexistent headers
+-  # can be detected and how.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#include <ac_nonexistent.h>
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-  # Broken: success on invalid input.
+-continue
+-else
+-  # Passes both tests.
+-ac_preproc_ok=:
+-break
+-fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-done
+-# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+-rm -f conftest.i conftest.err conftest.$ac_ext
+-if $ac_preproc_ok; then :
+-
+-else
+-  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+-$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+-as_fn_error $? "C preprocessor \"$CPP\" fails sanity check
+-See \`config.log' for more details" "$LINENO" 5; }
+-fi
+-
+-ac_ext=c
+-ac_cpp='$CPP $CPPFLAGS'
+-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+-ac_compiler_gnu=$ac_cv_c_compiler_gnu
+ 
+ # We need the C++ compiler only for testing.
+ ac_ext=cpp
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-03-21 00:29:26.327003954 +0000
++++ b/configure.in	2014-03-21 00:29:35.673815016 +0000
+@@ -17,6 +17,23 @@
+   [m4_divert_text([DEFAULTS],
+     [ac_includes_default='/* none */'])])
+ 
++# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
++# here to work around the Autoconf issue discussed in
++# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
++AC_DEFUN([AC_PROG_CPP],
++[AC_REQUIRE([AC_PROG_CC])dnl
++AC_ARG_VAR([CPP],      [C preprocessor])dnl
++_AC_ARG_VAR_CPPFLAGS()dnl
++# On Suns, sometimes $CPP names a directory.
++if test -n "$CPP" && test -d "$CPP"; then
++  CPP=
++fi
++if test -z "$CPP"; then
++  CPP="$CC -E"
++fi
++AC_SUBST(CPP)dnl
++])# AC_PROG_CPP
++
+ dnl This is here so we can set $subdirs directly based on configure fragments.
+ AC_CONFIG_SUBDIRS()
+ 
diff --git a/patches/glibc/2.17/220-Fix-crossrpc-to-build-on-non-Linux.patch b/patches/glibc/2.17/220-Fix-crossrpc-to-build-on-non-Linux.patch
new file mode 100644
index 0000000..f53db71
--- /dev/null
+++ b/patches/glibc/2.17/220-Fix-crossrpc-to-build-on-non-Linux.patch
@@ -0,0 +1,247 @@
+diff -urN a/sunrpc/rpc/types.h b/sunrpc/rpc/types.h
+--- a/sunrpc/rpc/types.h	2014-03-21 00:30:39.921475409 +0000
++++ b/sunrpc/rpc/types.h	2014-03-21 00:30:46.458243234 +0000
+@@ -69,6 +69,7 @@
+ #include <sys/types.h>
+ #endif
+ 
++#ifdef __linux__
+ #ifndef __u_char_defined
+ typedef __u_char u_char;
+ typedef __u_short u_short;
+@@ -84,11 +85,14 @@
+ typedef __caddr_t caddr_t;
+ # define __daddr_t_defined
+ #endif
++#endif
+ 
+ #include <sys/time.h>
+ #include <sys/param.h>
+ 
++#ifndef _WIN32
+ #include <netinet/in.h>
++#endif
+ 
+ #ifndef INADDR_LOOPBACK
+ #define       INADDR_LOOPBACK         (u_long)0x7F000001
+diff -urN a/sunrpc/rpc_main.c b/sunrpc/rpc_main.c
+--- a/sunrpc/rpc_main.c	2014-03-21 00:30:39.918142038 +0000
++++ b/sunrpc/rpc_main.c	2014-03-21 00:30:46.458243234 +0000
+@@ -38,13 +38,19 @@
+ #include <stdio.h>
+ #include <string.h>
+ #include <unistd.h>
++#ifndef IS_IN_build
+ #include <libintl.h>
++#endif
+ #include <ctype.h>
+ #include <sys/types.h>
+ #include <sys/param.h>
+ #include <sys/file.h>
+ #include <sys/stat.h>
++#ifndef _WIN32
+ #include <sys/wait.h>
++#else
++#include <windows.h>
++#endif
+ #include "rpc_parse.h"
+ #include "rpc_util.h"
+ #include "rpc_scan.h"
+@@ -53,6 +59,33 @@
+ #include "../version.h"
+ #define PACKAGE _libc_intl_domainname
+ 
++#ifdef _WIN32
++#define rindex(_dest, _src) strrchr((_dest), (_src))
++
++char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src);
++
++char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src)
++{
++  if (src == NULL)
++      return NULL;
++  return strcpy(dest, src) + strlen(dest);
++}
++#endif /* _WIN32 */
++
++#if defined(_WIN32) || defined(__BSD__)
++
++char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len);
++
++char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len)
++{
++  size_t min_len = strlen(src);
++  if (min_len > len)
++    min_len = len;
++  return strncpy(dest, src, len) + min_len;
++}
++
++#endif /* defined(_WIN32) || defined(__BSD__) */
++
+ #define EXTEND	1		/* alias for TRUE */
+ #define DONT_EXTEND	0	/* alias for FALSE */
+ 
+@@ -80,7 +113,11 @@
+ static const char *CPP = "/lib/cpp";
+ static const char CPPFLAGS[] = "-C";
+ static char *pathbuf;
++#ifdef _WIN32
++static HANDLE cpp_pid;
++#else
+ static int cpp_pid;
++#endif
+ static const char *allv[] =
+ {
+   "rpcgen", "-s", "udp", "-s", "tcp"
+@@ -324,6 +361,20 @@
+ {
+   struct stat buf;
+ 
++  /* Avoid trying to directly execute a bash script on Windows. */
++#ifdef _WIN32
++  char* CPPENVV = getenv("CPP");
++  if (CPPENVV)
++    {
++      CPP = (char*)malloc(strlen(CPPENVV)+1);
++      strcpy((char*)CPP, CPPENVV);
++      /* Don't bother checking that it exists with stat64 as
++       * we'd have to check in the path, also it usually ends
++       * with a few arguments. */
++      return;
++    }
++#endif
++
+   if (stat (CPP, &buf) == 0)
+     return;
+ 
+@@ -337,9 +388,122 @@
+   CPP = "cpp";
+ }
+ 
++#ifdef _WIN32
++/*
++ * Open input file with given define for C-preprocessor
++ */
++static void
++open_input (const char *infile, const char *define)
++{
++  int argi;
++  int argcc = 0;
++  LPSTR argsall;
++  HANDLE StdOutHandle;
++  HANDLE StdErrHandle;
++  HANDLE ReadPipe;
++  HANDLE WritePipe;
++  SECURITY_ATTRIBUTES SecAttr;
++  STARTUPINFO StartupInfo;
++  PROCESS_INFORMATION ProcessInfo;
++  DWORD Status;
++
++  find_cpp ();
++  putarg (0, CPP);
++  putarg (1, CPPFLAGS);
++  addarg (define);
++  if (infile)
++    addarg (infile);
++  addarg ((char *) NULL);
++  for (argi = 0; argi < argcount - 1; ++argi)
++    {
++      argcc += strlen(arglist[argi])+2;
++    }
++  argsall = (LPSTR)alloca(argcc + 1);
++  if (!argsall)
++    {
++      fprintf (stderr, _ ("cannot alloca for argsall\n"));
++      exit (1);
++    }
++  argsall[0] = '\0';
++  for (argi = 0; argi < argcount - 1; ++argi)
++    {
++      strcat((char*)argsall, arglist[argi]);
++      strcat((char*)argsall, " ");
++    }
++
++  memset(&SecAttr,     0, sizeof(SecAttr));
++  memset(&StartupInfo, 0, sizeof(StartupInfo));
++  memset(&ProcessInfo, 0, sizeof(ProcessInfo));
++
++  SecAttr.nLength = sizeof(SecAttr);
++  SecAttr.bInheritHandle = TRUE;
++
++  Status = CreatePipe( &ReadPipe, &WritePipe, &SecAttr, 0 );
++  if (!Status)
++    {
++      fprintf (stderr, _ ("cannot CreatePipe: GetLastError() -> %d\n"), GetLastError());
++      exit (1);
++    }
++
++  SetHandleInformation( ReadPipe, HANDLE_FLAG_INHERIT, 0 );
++
++  /*
++  StdOutHandle = GetStdHandle( STD_OUTPUT_HANDLE );
++  StdErrHandle = GetStdHandle( STD_ERROR_HANDLE );
++  if (StdOutHandle != INVALID_HANDLE_VALUE) {
++      SetHandleInformation( StdOutHandle, HANDLE_FLAG_INHERIT, 0 );
++  }
++  if (StdErrHandle != INVALID_HANDLE_VALUE) {
++      SetHandleInformation( StdErrHandle, HANDLE_FLAG_INHERIT, 0 );
++  }
++  */
++
++  StartupInfo.cb         = sizeof(StartupInfo);
++  StartupInfo.hStdInput  = GetStdHandle( STD_INPUT_HANDLE );
++  StartupInfo.hStdOutput = WritePipe;
++  StartupInfo.hStdError  = GetStdHandle( STD_ERROR_HANDLE );
++  StartupInfo.dwFlags    = STARTF_USESTDHANDLES;
++
++  Status = CreateProcess(
++          NULL,           /* lpApplicationName */
++          argsall,        /* lpCommandLine */
++          NULL,           /* lpProcessAttributes */
++          NULL,           /* lpThreadAttributes */
++          TRUE,           /* bInheritHandles */
++          0,              /* dwCreationFlags */
++          NULL,           /* lpEnvironment */
++          NULL,           /* lpCurrentDirectory */
++          &StartupInfo,   /* lpStartupInfo */
++          &ProcessInfo ); /* lpProcessInformation */
++
++  CloseHandle( WritePipe );
++  if (!Status)
++    {
++      fprintf (stderr, _ ("cannot find C preprocessor: %s, GetLastError() -> %d\n"), CPP, GetLastError());
++      exit (1);
++    }
++  int fd = _open_osfhandle((intptr_t)ReadPipe, _O_APPEND | _O_RDONLY);
++  if(fd != -1)
++    {
++      fin = _fdopen(fd, "a+");
++    }
++  cpp_pid = ProcessInfo.hProcess;
++}
++
++/* Close the connection to the C-preprocessor and check for successfull
++   termination.  */
++static void
++close_input (void)
++{
++  WaitForSingleObject(cpp_pid, INFINITE);
++}
++
++#else
++
+ /*
+  * Open input file with given define for C-preprocessor
+  */
++
+ static void
+ open_input (const char *infile, const char *define)
+ {
+@@ -412,6 +576,7 @@
+       crash ();
+     }
+ }
++#endif
+ 
+ /* valid tirpc nettypes */
+ static const char *valid_ti_nettypes[] =
diff --git a/patches/glibc/2.17/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch b/patches/glibc/2.17/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
new file mode 100644
index 0000000..af212da
--- /dev/null
+++ b/patches/glibc/2.17/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
@@ -0,0 +1,115 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-04-26 18:45:01.301607500 +0100
++++ b/configure	2014-04-26 19:40:13.665063800 +0100
+@@ -629,6 +629,7 @@
+ libc_cv_gcc_static_libgcc
+ CXX_SYSINCLUDES
+ SYSINCLUDES
++sysheaders
+ AUTOCONF
+ NM
+ AWK
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-04-26 18:45:01.305607700 +0100
++++ b/configure.in	2014-04-26 19:40:13.673064300 +0100
+@@ -1019,6 +1019,7 @@
+     done
+   fi
+ fi
++AC_SUBST(sysheaders)
+ AC_SUBST(SYSINCLUDES)
+ AC_SUBST(CXX_SYSINCLUDES)
+ 
+diff -urN a/elf/Makefile b/elf/Makefile
+--- a/elf/Makefile	2012-12-25 03:02:13.000000000 +0000
++++ b/elf/Makefile	2014-04-26 19:40:13.676064400 +0100
+@@ -63,6 +63,15 @@
+ ld-map		= $(common-objpfx)ld.map
+ endif
+ 
++# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
++# suffix of w means Windows.
++uname_o := $(shell uname -o)
++ifneq (, $(findstring Msys, $(uname_o)))
++common-objpfxw = $(shell cd $(common-objpfx); pwd -W)/
++else
++common-objpfxw = $(common-objpfx)
++endif
++
+ ifeq (yes,$(build-shared))
+ extra-objs	= $(all-rtld-routines:%=%.os) soinit.os sofini.os interp.os
+ generated	+= librtld.os dl-allobjs.os ld.so ldd
+@@ -300,15 +309,15 @@
+ 
+ $(objpfx)librtld.mk: $(objpfx)librtld.map Makefile
+ 	LC_ALL=C \
+-	sed -n 's@^$(common-objpfx)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
++	sed -n 's@^$(common-objpfxw)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
+ 	    $< | \
+ 	while read lib file; do \
+ 	  case $$lib in \
+ 	  libc_pic.a) \
+ 	    LC_ALL=C fgrep -l /$$file \
+-		  $(common-objpfx)stamp.os $(common-objpfx)*/stamp.os | \
++		  $(common-objpfxw)stamp.os $(common-objpfxw)*/stamp.os | \
+ 	    LC_ALL=C \
+-	    sed 's@^$(common-objpfx)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
++	    sed 's@^$(common-objpfxw)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
+ 	    ;; \
+ 	  */*.a) \
+ 	    echo rtld-$${lib%%/*} += $$file ;; \
+diff -urN a/Makefile.in b/Makefile.in
+--- a/Makefile.in	2012-12-25 03:02:13.000000000 +0000
++++ b/Makefile.in	2014-04-26 19:40:55.185438600 +0100
+@@ -1,4 +1,5 @@
+ srcdir = @srcdir@
++sysheaders = @sysheaders@
+ 
+ # Uncomment the line below if you want to do parallel build.
+ # PARALLELMFLAGS = -j 4
+@@ -6,8 +7,8 @@
+ .PHONY: all install
+ 
+ all .DEFAULT:
+-	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` $@
++	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` sysheaders=$(sysheaders) $@
+ 
+ install:
+ 	LANGUAGE=C LC_ALL=C; export LANGUAGE LC_ALL; \
+-	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` $@
++	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` sysheaders=$(sysheaders) $@
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2012-12-25 03:02:13.000000000 +0000
++++ b/Makerules	2014-04-26 19:40:13.680064700 +0100
+@@ -392,11 +392,29 @@
+ mv -f $(@:.d=.T) $@ $(generate-md5)
+ endef
+ 
++# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
++# suffix of w means Windows, and m means MSYS2.
++uname_o := $(shell uname -o)
++sysroot = $(shell echo `$(CC) -print-file-name="include"`)
++ifneq (, $(findstring Msys, $(uname_o)))
++common-objpfxw = $(shell cd $(common-objpfx); pwd -W)/
++sysheadersw = $(shell cd $(sysheaders); pwd -W)
++sysrootm = $(shell cd $(sysroot); pwd)
++else
++common-objpfxw = $(common-objpfx)
++sysheadersw = $(sysheaders)
++sysrootm = $(sysroot)
++endif
++
+ ifneq (,$(objpfx))
+ # Continuation lines here are dangerous because they introduce spaces!
+ define sed-remove-objpfx
+--e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfx)))@ $$(common-objpfx)@g' \
+--e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfx)))@$$(common-objpfx)@g'
++-e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfxw)))@ $$(common-objpfx)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfxw)))@$$(common-objpfx)@g' \
++-e 's@ $(subst .,\.,$(subst @,\@,$(sysheadersw)))@ $(sysheaders)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(sysheadersw)))@$(sysheaders)@g' \
++-e 's@ $(subst .,\.,$(subst @,\@,$(sysroot)))@ $(sysrootm)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(sysroot)))@$(sysrootm)@g'
+ endef
+ endif
+ 
diff --git a/patches/glibc/2.17/240-Rename-extensions-for-case-insensitive-fs.patch b/patches/glibc/2.17/240-Rename-extensions-for-case-insensitive-fs.patch
new file mode 100644
index 0000000..92ec303
--- /dev/null
+++ b/patches/glibc/2.17/240-Rename-extensions-for-case-insensitive-fs.patch
@@ -0,0 +1,250 @@
+diff -urN a/ChangeLog b/ChangeLog
+--- a/ChangeLog	2014-04-26 19:59:23.954856600 +0100
++++ b/ChangeLog	2014-04-26 19:59:42.962943800 +0100
+@@ -1,3 +1,8 @@
++2014-01-22  Ray Donnelly  <mingw.android@gmail.com>
++
++        * Rename .oS to .oSTATIC so that builds can be done on file
++        systems that are not both case sensitive and case preserving.
++
+ 2013-01-25  Thomas Schwinge  <thomas@codesourcery.com>
+ 
+         * configure.in (AC_PROG_CPP): New definition.
+diff -urN a/extra-lib.mk b/extra-lib.mk
+--- a/extra-lib.mk	2014-04-26 19:59:24.110865500 +0100
++++ b/extra-lib.mk	2014-04-26 19:59:42.985945100 +0100
+@@ -13,7 +13,7 @@
+ 
+ ifneq (,$($(lib)-static-only-routines))
+ ifneq (,$(filter yes%,$(build-shared)$($(lib).so-version)))
+-object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oS)
++object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oSTATIC)
+ endif
+ endif
+ 
+@@ -29,7 +29,7 @@
+ 
+ # Add each flavor of library to the lists of things to build and install.
+ install-lib += $(foreach o,$(object-suffixes-$(lib)),$(lib:lib%=$(libtype$o)))
+-extra-objs += $(foreach o,$(filter-out .os .oS,$(object-suffixes-$(lib))),\
++extra-objs += $(foreach o,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))),\
+ 			$(patsubst %,%$o,$(filter-out \
+ 					   $($(lib)-shared-only-routines),\
+ 					   $(all-$(lib)-routines))))
+@@ -57,7 +57,7 @@
+ 
+ 
+ # Use o-iterator.mk to generate a rule for each flavor of library.
+-ifneq (,$(filter-out .os .oS,$(object-suffixes-$(lib))))
++ifneq (,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))))
+ define o-iterator-doit
+ $(objpfx)$(patsubst %,$(libtype$o),$(lib:lib%=%)): \
+   $(patsubst %,$(objpfx)%$o,\
+@@ -65,7 +65,7 @@
+ 			  $(all-$(lib)-routines))); \
+ 	$$(build-extra-lib)
+ endef
+-object-suffixes-left = $(filter-out .os .oS,$(object-suffixes-$(lib)))
++object-suffixes-left = $(filter-out .os .oSTATIC,$(object-suffixes-$(lib)))
+ include $(patsubst %,$(..)o-iterator.mk,$(object-suffixes-left))
+ endif
+ 
+@@ -77,9 +77,9 @@
+ 	$(build-extra-lib)
+ endif
+ 
+-ifneq (,$(filter .oS,$(object-suffixes-$(lib))))
+-$(objpfx)$(patsubst %,$(libtype.oS),$(lib:lib%=%)): \
+-  $(patsubst %,$(objpfx)%.oS,\
++ifneq (,$(filter .oSTATIC,$(object-suffixes-$(lib))))
++$(objpfx)$(patsubst %,$(libtype.oSTATIC),$(lib:lib%=%)): \
++  $(patsubst %,$(objpfx)%.oSTATIC,\
+ 	     $(filter $($(lib)-static-only-routines),\
+ 		      $(all-$(lib)-routines)))
+ 	$(build-extra-lib)
+diff -urN a/Makeconfig b/Makeconfig
+--- a/Makeconfig	2014-04-26 19:59:24.637895700 +0100
++++ b/Makeconfig	2014-04-26 19:59:42.987945300 +0100
+@@ -453,7 +453,7 @@
+ # run the linked programs.
+ link-libc-before-gnulib = -Wl,-rpath-link=$(rpath-link) \
+ 	    $(common-objpfx)libc.so$(libc.so-version) \
+-	    $(common-objpfx)$(patsubst %,$(libtype.oS),c) \
++	    $(common-objpfx)$(patsubst %,$(libtype.oSTATIC),c) \
+ 	    $(as-needed) $(common-objpfx)elf/ld.so $(no-as-needed)
+ link-libc = $(link-libc-before-gnulib) $(gnulib)
+ link-libc-tests = $(link-libc-before-gnulib) $(gnulib-tests)
+@@ -756,7 +756,7 @@
+ # The compilation rules use $(CPPFLAGS-${SUFFIX}) and $(CFLAGS-${SUFFIX})
+ # to pass different flags for each flavor.
+ libtypes = $(foreach o,$(object-suffixes-for-libc),$(libtype$o))
+-all-object-suffixes := .o .os .op .og .ob .oS
++all-object-suffixes := .o .os .op .og .ob .oSTATIC
+ object-suffixes :=
+ CPPFLAGS-.o = $(pic-default)
+ CFLAGS-.o = $(filter %frame-pointer,$(+cflags))
+@@ -807,14 +807,14 @@
+ 
+ ifeq (yes,$(build-shared))
+ # Build special library that contains the static-only routines for libc.
+-object-suffixes-for-libc += .oS
++object-suffixes-for-libc += .oSTATIC
+ 
+ # Must build the routines as PIC, though, because they can end up in (users')
+ # shared objects.  We don't want to use CFLAGS-os because users may, for
+ # example, make that processor-specific.
+-CFLAGS-.oS = $(CFLAGS-.o) $(PIC-ccflag)
+-CPPFLAGS-.oS = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
+-libtype.oS = lib%_nonshared.a
++CFLAGS-.oSTATIC = $(CFLAGS-.o) $(PIC-ccflag)
++CPPFLAGS-.oSTATIC = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
++libtype.oSTATIC = lib%_nonshared.a
+ endif
+ 
+ # The assembler can generate debug information too.
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2014-04-26 19:59:24.637895700 +0100
++++ b/Makerules	2014-04-26 19:59:42.990945400 +0100
+@@ -161,14 +161,14 @@
+ # We only generate these in the top-level makefile, to avoid any weirdness
+ # from subdir-specific makefile tweaks creeping in on an update.
+ $(common-objpfx)%.make: $(..)%.make.c $(..)Makerules $(common-before-compile)
+-	rm -f $@T $@.dT
++	rm -f $@T $@.dTEMP
+ 	(echo '# Generated from $*.make.c by Makerules.'; \
+ 	 $(CC) $(CFLAGS) $(CPPFLAGS) -E -DASSEMBLER $< \
+-	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dT \
++	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dTEMP \
+ 	 | sed -n '/@@@/{s/@@@[	 ]*\(.*\)@@@/\1/;s/[	 ]*$$//p;}'; \
+ 	 echo 'common-generated += $(@F)'; \
+-	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dT; \
+-	 rm -f $@.dT) > $@T
++	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dTEMP; \
++	 rm -f $@.dTEMP) > $@T
+ 	mv -f $@T $@
+ endif
+ 
+@@ -350,7 +350,7 @@
+ endif # $(versioning) = yes
+ endif # sysd-sorted-done
+ 
+-# Generate .dT files as we compile.
++# Generate .dTEMP files as we compile.
+ compile-mkdep-flags = -MD -MP -MF $@.dt -MT $@
+ compile-command.S = $(compile.S) $(OUTPUT_OPTION) $(compile-mkdep-flags)
+ compile-command.c = $(compile.c) $(OUTPUT_OPTION) $(compile-mkdep-flags)
+@@ -430,7 +430,7 @@
+ # Bounded pointer thunks are only built for *.ob
+ elide-bp-thunks = $(addprefix $(bppfx),$(bp-thunks))
+ 
+-elide-routines.oS += $(filter-out $(static-only-routines),\
++elide-routines.oSTATIC += $(filter-out $(static-only-routines),\
+ 				  $(routines) $(aux) $(sysdep_routines)) \
+ 		     $(elide-bp-thunks)
+ elide-routines.os += $(static-only-routines) $(elide-bp-thunks)
+@@ -655,7 +655,7 @@
+ 
+ +depfiles := $(sources:.c=.d) \
+ 	     $(patsubst %.o,%.d,$(filter %.o,$(extra-objs:.os=.o))) \
+-	     $(patsubst %.oS,%.d,$(filter %.oS,$(extra-objs))) \
++            $(patsubst %.oSTATIC,%.d,$(filter %.oSTATIC,$(extra-objs))) \
+ 	     $(patsubst %.o,%.d,$(filter %.o,$(extra-test-objs:.os=.o))) \
+ 	     $(addsuffix .d,$(tests) $(xtests) $(test-srcs))
+ ifeq ($(build-programs),yes)
+@@ -946,7 +946,7 @@
+ install: $(inst_libdir)/libc.so
+ $(inst_libdir)/libc.so: $(common-objpfx)format.lds \
+ 			$(common-objpfx)libc.so$(libc.so-version) \
+-			$(inst_libdir)/$(patsubst %,$(libtype.oS),\
++			$(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
+ 						  $(libprefix)$(libc-name)) \
+ 			$(+force)
+ 	(echo '/* GNU ld script';\
+@@ -954,7 +954,7 @@
+ 	 echo '   the static library, so try that secondarily.  */';\
+ 	 cat $<; \
+ 	 echo 'GROUP ( $(slibdir)/libc.so$(libc.so-version)' \
+-	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)$(libc-name))'\
++	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)$(libc-name))'\
+ 	      ' AS_NEEDED (' $(slibdir)/$(rtld-installed-name) ') )' \
+ 	) > $@.new
+ 	mv -f $@.new $@
+diff -urN a/nptl/Makefile b/nptl/Makefile
+--- a/nptl/Makefile	2014-04-26 19:59:24.779903800 +0100
++++ b/nptl/Makefile	2014-04-26 19:59:42.992945500 +0100
+@@ -378,7 +378,7 @@
+ 
+ $(inst_libdir)/libpthread.so: $(common-objpfx)format.lds \
+ 			      $(objpfx)libpthread.so$(libpthread.so-version) \
+-			      $(inst_libdir)/$(patsubst %,$(libtype.oS),\
++			      $(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
+ 							$(libprefix)pthread) \
+ 			      $(+force)
+ 	(echo '/* GNU ld script';\
+@@ -386,7 +386,7 @@
+ 	 echo '   the static library, so try that secondarily.  */';\
+ 	 cat $<; \
+ 	 echo 'GROUP ( $(slibdir)/libpthread.so$(libpthread.so-version)' \
+-	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)pthread)'\
++	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)pthread)'\
+ 	      ')' \
+ 	) > $@.new
+ 	mv -f $@.new $@
+diff -urN a/sysdeps/i386/i686/Makefile b/sysdeps/i386/i686/Makefile
+--- a/sysdeps/i386/i686/Makefile	2014-04-26 19:59:28.398110800 +0100
++++ b/sysdeps/i386/i686/Makefile	2014-04-26 19:59:42.993945600 +0100
+@@ -16,12 +16,12 @@
+ CFLAGS-.op += -Wa,-mtune=i686
+ CFLAGS-.og += -Wa,-mtune=i686
+ CFLAGS-.ob += -Wa,-mtune=i686
+-CFLAGS-.oS += -Wa,-mtune=i686
++CFLAGS-.oSTATIC += -Wa,-mtune=i686
+ 
+ ASFLAGS-.o += -Wa,-mtune=i686
+ ASFLAGS-.os += -Wa,-mtune=i686
+ ASFLAGS-.op += -Wa,-mtune=i686
+ ASFLAGS-.og += -Wa,-mtune=i686
+ ASFLAGS-.ob += -Wa,-mtune=i686
+-ASFLAGS-.oS += -Wa,-mtune=i686
++ASFLAGS-.oSTATIC += -Wa,-mtune=i686
+ endif
+diff -urN a/sysdeps/ieee754/ldbl-opt/Makefile b/sysdeps/ieee754/ldbl-opt/Makefile
+--- a/sysdeps/ieee754/ldbl-opt/Makefile	2014-04-26 19:59:28.540118900 +0100
++++ b/sysdeps/ieee754/ldbl-opt/Makefile	2014-04-26 20:08:25.020803800 +0100
+@@ -44,7 +44,7 @@
+ libnldbl-routines = $(libnldbl-calls:%=nldbl-%)
+ libnldbl-inhibit-o = $(object-suffixes)
+ libnldbl-static-only-routines = $(libnldbl-routines)
+-extra-objs += $(addsuffix .oS, $(libnldbl-routines))
++extra-objs += $(addsuffix .oSTATIC, $(libnldbl-routines))
+ 
+ CFLAGS-nldbl-acos.c = -fno-builtin-acosl
+ CFLAGS-nldbl-acosh.c = -fno-builtin-acoshl
+diff -urN a/sysdeps/sparc/sparc32/sparcv9/Makefile b/sysdeps/sparc/sparc32/sparcv9/Makefile
+--- a/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-04-26 19:59:28.857137000 +0100
++++ b/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-04-26 19:59:42.994945700 +0100
+@@ -11,12 +11,12 @@
+ ASFLAGS-.op += -Wa,-Av9d
+ ASFLAGS-.og += -Wa,-Av9d
+ ASFLAGS-.ob += -Wa,-Av9d
+-ASFLAGS-.oS += -Wa,-Av9d
++ASFLAGS-.oSTATIC += -Wa,-Av9d
+ else
+ ASFLAGS-.o += -Wa,-Av9a
+ ASFLAGS-.os += -Wa,-Av9a
+ ASFLAGS-.op += -Wa,-Av9a
+ ASFLAGS-.og += -Wa,-Av9a
+ ASFLAGS-.ob += -Wa,-Av9a
+-ASFLAGS-.oS += -Wa,-Av9a
++ASFLAGS-.oSTATIC += -Wa,-Av9a
+ endif
+diff -urN a/sysdeps/sparc/sparc64/Makefile b/sysdeps/sparc/sparc64/Makefile
+--- a/sysdeps/sparc/sparc64/Makefile	2014-04-26 19:59:28.889138900 +0100
++++ b/sysdeps/sparc/sparc64/Makefile	2014-04-26 19:59:42.995945700 +0100
+@@ -13,5 +13,5 @@
+ ASFLAGS-.op += -Wa,-Av9d
+ ASFLAGS-.og += -Wa,-Av9d
+ ASFLAGS-.ob += -Wa,-Av9d
+-ASFLAGS-.oS += -Wa,-Av9d
++ASFLAGS-.oSTATIC += -Wa,-Av9d
+ endif
diff --git a/patches/glibc/2.17/250-MSYS-Hack-force-ln-s.patch b/patches/glibc/2.17/250-MSYS-Hack-force-ln-s.patch
new file mode 100644
index 0000000..230be00
--- /dev/null
+++ b/patches/glibc/2.17/250-MSYS-Hack-force-ln-s.patch
@@ -0,0 +1,39 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-03-21 00:32:39.256654191 +0000
++++ b/configure	2014-03-21 00:32:48.543464359 +0000
+@@ -4513,6 +4513,16 @@
+ $as_echo "no, using $LN_S" >&6; }
+ fi
+ 
++# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
++# eglibc, whereas cp -r doesn't.
++case "$build_os" in
++*mingw*)
++  as_ln_s='ln -s'
++  LN_S=$as_ln_s
++  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&5
++$as_echo "$as_me: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&2;}
++  ;;
++esac
+ 
+ # Was a --with-binutils option given?
+ if test -n "$path_binutils"; then
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-03-21 00:32:39.256654191 +0000
++++ b/configure.in	2014-03-21 00:32:48.543464359 +0000
+@@ -933,6 +933,15 @@
+   INSTALL='\$(..)./scripts/install-sh -c'
+ fi
+ AC_PROG_LN_S
++# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
++# eglibc, whereas cp -r doesn't.
++case "$build_os" in
++*mingw*)
++  as_ln_s='ln -s'
++  LN_S=$as_ln_s
++  AC_MSG_WARN(Hacked as_ln_s and LN_S to 'ln -s' for MSYS2)
++  ;;
++esac
+ 
+ LIBC_PROG_BINUTILS
+ AC_SUBST(MIG)dnl Needed by sysdeps/mach/configure.in
diff --git a/patches/glibc/2.18/100-4f2bcda-ARM-Fix-clone-code-when-built-for-Thumb.patch b/patches/glibc/2.18/100-4f2bcda-ARM-Fix-clone-code-when-built-for-Thumb.patch
index 40e3632..a0b167f 100644
--- a/patches/glibc/2.18/100-4f2bcda-ARM-Fix-clone-code-when-built-for-Thumb.patch
+++ b/patches/glibc/2.18/100-4f2bcda-ARM-Fix-clone-code-when-built-for-Thumb.patch
@@ -1,27 +1,7 @@
-commit 4f2bcda964d4fff56855e0c66198c9bcb682ea1e
-Author: Will Newton <will.newton@linaro.org>
-Date:   Thu Aug 29 20:10:26 2013 +0100
-
-    ARM: Fix clone code when built for Thumb.
-    
-    The mov lr, pc instruction will lose the Thumb bit from the return address
-    so use blx lr instead.
-    
-    ports/ChangeLog.arm:
-    
-    2013-08-30  Will Newton  <will.newton@linaro.org>
-    
-    	[BZ #15909]
-    	* sysdeps/unix/sysv/linux/arm/clone.S (__clone): Use blx
-    	instead of mov lr, pc.
-    
-    (cherry picked from commit 6b06ac56cdfc9293908724e51e827534e97819aa)
-
-diff --git a/NEWS b/NEWS
-index b023c30..f64fb82 100644
---- a/NEWS
-+++ b/NEWS
-@@ -5,6 +5,12 @@ See the end for copying conditions.
+diff -urN a/NEWS b/NEWS
+--- a/NEWS	2013-08-10 23:52:55.000000000 +0100
++++ b/NEWS	2014-02-23 14:21:47.567839800 +0000
+@@ -5,6 +5,12 @@
  Please send GNU C library bug reports via <http://sourceware.org/bugzilla/>
  using `glibc' in the "product" field.
  
@@ -34,10 +14,9 @@ index b023c30..f64fb82 100644
  Version 2.18
  
  * The following bugs are resolved with this release:
-diff --git a/ports/ChangeLog.arm b/ports/ChangeLog.arm
-index 1e7a35c..54debd7 100644
---- a/ports/ChangeLog.arm
-+++ b/ports/ChangeLog.arm
+diff -urN a/ports/ChangeLog.arm b/ports/ChangeLog.arm
+--- a/ports/ChangeLog.arm	2013-08-10 23:52:55.000000000 +0100
++++ b/ports/ChangeLog.arm	2014-02-23 14:21:47.569339900 +0000
 @@ -1,3 +1,9 @@
 +2013-08-30  Will Newton  <will.newton@linaro.org>
 +
@@ -48,11 +27,10 @@ index 1e7a35c..54debd7 100644
  2013-07-03  Joseph Myers  <joseph@codesourcery.com>
  
  	* sysdeps/arm/include/bits/setjmp.h [_ISOMAC] (JMP_BUF_REGLIST):
-diff --git a/ports/sysdeps/unix/sysv/linux/arm/clone.S b/ports/sysdeps/unix/sysv/linux/arm/clone.S
-index ce9c2a5..6e74fa7 100644
---- a/ports/sysdeps/unix/sysv/linux/arm/clone.S
-+++ b/ports/sysdeps/unix/sysv/linux/arm/clone.S
-@@ -93,8 +93,8 @@ PSEUDO_END (__clone)
+diff -urN a/ports/sysdeps/unix/sysv/linux/arm/clone.S b/ports/sysdeps/unix/sysv/linux/arm/clone.S
+--- a/ports/sysdeps/unix/sysv/linux/arm/clone.S	2013-08-10 23:52:55.000000000 +0100
++++ b/ports/sysdeps/unix/sysv/linux/arm/clone.S	2014-02-23 14:21:47.570340100 +0000
+@@ -93,8 +93,8 @@
  	mov	lr, pc
  	bx      ip
  #else
diff --git a/patches/glibc/2.18/110-2770d15-Fix-PI-mutex-check-in-pthread_cond_broadcast-and-pthread_cond_signal.patch b/patches/glibc/2.18/110-2770d15-Fix-PI-mutex-check-in-pthread_cond_broadcast-and-pthread_cond_signal.patch
index 7ad9fdf..76b4fc8 100644
--- a/patches/glibc/2.18/110-2770d15-Fix-PI-mutex-check-in-pthread_cond_broadcast-and-pthread_cond_signal.patch
+++ b/patches/glibc/2.18/110-2770d15-Fix-PI-mutex-check-in-pthread_cond_broadcast-and-pthread_cond_signal.patch
@@ -1,20 +1,7 @@
-commit 2770d15e7e880821fc586619c59eb45180628e16
-Author: Siddhesh Poyarekar <siddhesh@redhat.com>
-Date:   Thu Oct 3 08:26:21 2013 +0530
-
-    Fix PI mutex check in pthread_cond_broadcast and pthread_cond_signal
-    
-    Fixes BZ #15996.
-    
-    The check had a typo - it checked for PTHREAD_MUTEX_ROBUST_NP instead
-    of PTHREAD_MUTEX_ROBUST_NORMAL_NP.  It has now been replaced by the
-    already existing convenience macro USE_REQUEUE_PI.
-
-diff --git a/NEWS b/NEWS
-index f64fb82..fb6069d 100644
---- a/NEWS
-+++ b/NEWS
-@@ -9,7 +9,7 @@ Version 2.18.1
+diff -urN a/NEWS b/NEWS
+--- a/NEWS	2014-02-23 14:21:54.507721000 +0000
++++ b/NEWS	2014-02-23 14:22:06.075189900 +0000
+@@ -9,7 +9,7 @@
  
  * The following bugs are resolved with this release:
  
@@ -23,10 +10,9 @@ index f64fb82..fb6069d 100644
  
  Version 2.18
  
-diff --git a/nptl/ChangeLog b/nptl/ChangeLog
-index eae5079..2d78490 100644
---- a/nptl/ChangeLog
-+++ b/nptl/ChangeLog
+diff -urN a/nptl/ChangeLog b/nptl/ChangeLog
+--- a/nptl/ChangeLog	2014-02-23 14:21:54.545225800 +0000
++++ b/nptl/ChangeLog	2014-02-23 14:22:06.080190500 +0000
 @@ -1,3 +1,12 @@
 +2013-10-03  Siddhesh Poyarekar  <siddhesh@redhat.com>
 +
@@ -40,11 +26,10 @@ index eae5079..2d78490 100644
  2013-07-23  David S. Miller  <davem@davemloft.net>
  
  	* tst-cancel4.c (WRITE_BUFFER_SIZE): Adjust comment.
-diff --git a/nptl/pthread_cond_broadcast.c b/nptl/pthread_cond_broadcast.c
-index 0702ec0..7ba9efa 100644
---- a/nptl/pthread_cond_broadcast.c
-+++ b/nptl/pthread_cond_broadcast.c
-@@ -63,10 +63,7 @@ __pthread_cond_broadcast (cond)
+diff -urN a/nptl/pthread_cond_broadcast.c b/nptl/pthread_cond_broadcast.c
+--- a/nptl/pthread_cond_broadcast.c	2014-02-23 14:21:54.572229200 +0000
++++ b/nptl/pthread_cond_broadcast.c	2014-02-23 14:22:06.081190700 +0000
+@@ -63,10 +63,7 @@
  
  #if (defined lll_futex_cmp_requeue_pi \
       && defined __ASSUME_REQUEUE_PI)
@@ -56,11 +41,10 @@ index 0702ec0..7ba9efa 100644
  	{
  	  if (lll_futex_cmp_requeue_pi (&cond->__data.__futex, 1, INT_MAX,
  					&mut->__data.__lock, futex_val,
-diff --git a/nptl/pthread_cond_signal.c b/nptl/pthread_cond_signal.c
-index 102d0b3..ffc35dc 100644
---- a/nptl/pthread_cond_signal.c
-+++ b/nptl/pthread_cond_signal.c
-@@ -49,14 +49,9 @@ __pthread_cond_signal (cond)
+diff -urN a/nptl/pthread_cond_signal.c b/nptl/pthread_cond_signal.c
+--- a/nptl/pthread_cond_signal.c	2014-02-23 14:21:54.573229300 +0000
++++ b/nptl/pthread_cond_signal.c	2014-02-23 14:22:06.082190800 +0000
+@@ -49,14 +49,9 @@
  
  #if (defined lll_futex_cmp_requeue_pi \
       && defined __ASSUME_REQUEUE_PI)
diff --git a/patches/glibc/2.18/120-make-4.patch b/patches/glibc/2.18/120-make-4.patch
deleted file mode 100644
index e69aa56..0000000
--- a/patches/glibc/2.18/120-make-4.patch
+++ /dev/null
@@ -1,45 +0,0 @@
-From dc76f0c32dae689a08aa21a1d206d4cd62adb278 Mon Sep 17 00:00:00 2001
-From: Marc-Antoine Perennou <Marc-Antoine@Perennou.com>
-Date: Thu, 10 Oct 2013 14:26:12 +0900
-Subject: [PATCH] configure: allow building with GNU Make 4
-
-Currently, configure errors telling make 4 is too old
-since it does not match our regexp.
-
-configure.in: allow GNU Make 4.*
-
-Signed-off-by: Marc-Antoine Perennou <Marc-Antoine@Perennou.com>
----
- configure    | 2 +-
- configure.in | 2 +-
- 2 files changed, 2 insertions(+), 2 deletions(-)
-
-diff --git a/configure b/configure
-index 5e2f4d0..e139bf0 100755
---- a/configure
-+++ b/configure
-@@ -4772,7 +4772,7 @@ $as_echo_n "checking version of $MAKE... " >&6; }
-   ac_prog_version=`$MAKE --version 2>&1 | sed -n 's/^.*GNU Make[^0-9]*\([0-9][0-9.]*\).*$/\1/p'`
-   case $ac_prog_version in
-     '') ac_prog_version="v. ?.??, bad"; ac_verc_fail=yes;;
--    3.79* | 3.[89]*)
-+    3.79* | 3.[89]* | 4.*)
-        ac_prog_version="$ac_prog_version, ok"; ac_verc_fail=no;;
-     *) ac_prog_version="$ac_prog_version, bad"; ac_verc_fail=yes;;
- 
-diff --git a/configure.in b/configure.in
-index a7f9881..95c36b6 100644
---- a/configure.in
-+++ b/configure.in
-@@ -989,7 +989,7 @@ AC_CHECK_PROG_VER(CC, ${ac_tool_prefix}gcc ${ac_tool_prefix}cc, -v,
-   critic_missing="$critic_missing gcc")
- AC_CHECK_PROG_VER(MAKE, gnumake gmake make, --version,
-   [GNU Make[^0-9]*\([0-9][0-9.]*\)],
--  [3.79* | 3.[89]*], critic_missing="$critic_missing make")
-+  [3.79* | 3.[89]* | 4.*], critic_missing="$critic_missing make")
- 
- AC_CHECK_PROG_VER(MSGFMT, gnumsgfmt gmsgfmt msgfmt, --version,
-   [GNU gettext.* \([0-9]*\.[0-9.]*\)],
--- 
-1.8.4.1
-
diff --git a/patches/glibc/2.18/200-make-4.patch b/patches/glibc/2.18/200-make-4.patch
new file mode 100644
index 0000000..968500a
--- /dev/null
+++ b/patches/glibc/2.18/200-make-4.patch
@@ -0,0 +1,24 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-02-23 14:22:11.454373000 +0000
++++ b/configure	2014-02-23 14:22:24.705055600 +0000
+@@ -4772,7 +4772,7 @@
+   ac_prog_version=`$MAKE --version 2>&1 | sed -n 's/^.*GNU Make[^0-9]*\([0-9][0-9.]*\).*$/\1/p'`
+   case $ac_prog_version in
+     '') ac_prog_version="v. ?.??, bad"; ac_verc_fail=yes;;
+-    3.79* | 3.[89]*)
++    3.79* | 3.[89]* | 4.*)
+        ac_prog_version="$ac_prog_version, ok"; ac_verc_fail=no;;
+     *) ac_prog_version="$ac_prog_version, bad"; ac_verc_fail=yes;;
+ 
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-23 14:22:11.454873000 +0000
++++ b/configure.in	2014-02-23 14:22:24.706555800 +0000
+@@ -989,7 +989,7 @@
+   critic_missing="$critic_missing gcc")
+ AC_CHECK_PROG_VER(MAKE, gnumake gmake make, --version,
+   [GNU Make[^0-9]*\([0-9][0-9.]*\)],
+-  [3.79* | 3.[89]*], critic_missing="$critic_missing make")
++  [3.79* | 3.[89]* | 4.*], critic_missing="$critic_missing make")
+ 
+ AC_CHECK_PROG_VER(MSGFMT, gnumsgfmt gmsgfmt msgfmt, --version,
+   [GNU gettext.* \([0-9]*\.[0-9.]*\)],
diff --git a/patches/glibc/2.18/220-Fix-crossrpc-to-build-on-non-Linux.patch b/patches/glibc/2.18/220-Fix-crossrpc-to-build-on-non-Linux.patch
new file mode 100644
index 0000000..7971e75
--- /dev/null
+++ b/patches/glibc/2.18/220-Fix-crossrpc-to-build-on-non-Linux.patch
@@ -0,0 +1,248 @@
+diff -urN a/sunrpc/rpc/types.h b/sunrpc/rpc/types.h
+--- a/sunrpc/rpc/types.h	2014-02-23 14:22:33.460167300 +0000
++++ b/sunrpc/rpc/types.h	2014-02-23 14:22:42.816855500 +0000
+@@ -69,6 +69,7 @@
+ #include <sys/types.h>
+ #endif
+ 
++#ifdef __linux__
+ #ifndef __u_char_defined
+ typedef __u_char u_char;
+ typedef __u_short u_short;
+@@ -84,11 +85,14 @@
+ typedef __caddr_t caddr_t;
+ # define __daddr_t_defined
+ #endif
++#endif
+ 
+ #include <sys/time.h>
+ #include <sys/param.h>
+ 
++#ifndef _WIN32
+ #include <netinet/in.h>
++#endif
+ 
+ #ifndef INADDR_LOOPBACK
+ #define       INADDR_LOOPBACK         (u_long)0x7F000001
+diff -urN a/sunrpc/rpc_main.c b/sunrpc/rpc_main.c
+--- a/sunrpc/rpc_main.c	2014-02-23 14:22:33.469168500 +0000
++++ b/sunrpc/rpc_main.c	2014-02-23 14:22:42.819355800 +0000
+@@ -38,14 +38,20 @@
+ #include <stdio.h>
+ #include <string.h>
+ #include <unistd.h>
++#ifndef IS_IN_build
+ #include <libintl.h>
++#endif
+ #include <locale.h>
+ #include <ctype.h>
+ #include <sys/types.h>
+ #include <sys/param.h>
+ #include <sys/file.h>
+ #include <sys/stat.h>
++#ifndef _WIN32
+ #include <sys/wait.h>
++#else
++#include <windows.h>
++#endif
+ #include "rpc_parse.h"
+ #include "rpc_util.h"
+ #include "rpc_scan.h"
+@@ -54,6 +60,33 @@
+ #include "../version.h"
+ #define PACKAGE _libc_intl_domainname
+ 
++#ifdef _WIN32
++#define rindex(_dest, _src) strrchr((_dest), (_src))
++
++char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src);
++
++char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src)
++{
++  if (src == NULL)
++      return NULL;
++  return strcpy(dest, src) + strlen(dest);
++}
++#endif /* _WIN32 */
++
++#if defined(_WIN32) || defined(__BSD__)
++
++char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len);
++
++char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len)
++{
++  size_t min_len = strlen(src);
++  if (min_len > len)
++    min_len = len;
++  return strncpy(dest, src, len) + min_len;
++}
++
++#endif /* defined(_WIN32) || defined(__BSD__) */
++
+ #define EXTEND	1		/* alias for TRUE */
+ #define DONT_EXTEND	0	/* alias for FALSE */
+ 
+@@ -81,7 +114,11 @@
+ static const char *CPP = "/lib/cpp";
+ static const char CPPFLAGS[] = "-C";
+ static char *pathbuf;
++#ifdef _WIN32
++static HANDLE cpp_pid;
++#else
+ static int cpp_pid;
++#endif
+ static const char *allv[] =
+ {
+   "rpcgen", "-s", "udp", "-s", "tcp"
+@@ -328,6 +365,20 @@
+ {
+   struct stat64 buf;
+ 
++  /* Avoid trying to directly execute a bash script on Windows. */
++#ifdef _WIN32
++  char* CPPENVV = getenv("CPP");
++  if (CPPENVV)
++    {
++      CPP = (char*)malloc(strlen(CPPENVV)+1);
++      strcpy((char*)CPP, CPPENVV);
++      /* Don't bother checking that it exists with stat64 as
++       * we'd have to check in the path, also it usually ends
++       * with a few arguments. */
++      return;
++    }
++#endif
++
+   if (stat64 (CPP, &buf) == 0)
+     return;
+ 
+@@ -341,9 +392,122 @@
+   CPP = "cpp";
+ }
+ 
++#ifdef _WIN32
++/*
++ * Open input file with given define for C-preprocessor
++ */
++static void
++open_input (const char *infile, const char *define)
++{
++  int argi;
++  int argcc = 0;
++  LPSTR argsall;
++  HANDLE StdOutHandle;
++  HANDLE StdErrHandle;
++  HANDLE ReadPipe;
++  HANDLE WritePipe;
++  SECURITY_ATTRIBUTES SecAttr;
++  STARTUPINFO StartupInfo;
++  PROCESS_INFORMATION ProcessInfo;
++  DWORD Status;
++
++  find_cpp ();
++  putarg (0, CPP);
++  putarg (1, CPPFLAGS);
++  addarg (define);
++  if (infile)
++    addarg (infile);
++  addarg ((char *) NULL);
++  for (argi = 0; argi < argcount - 1; ++argi)
++    {
++      argcc += strlen(arglist[argi])+2;
++    }
++  argsall = (LPSTR)alloca(argcc + 1);
++  if (!argsall)
++    {
++      fprintf (stderr, _ ("cannot alloca for argsall\n"));
++      exit (1);
++    }
++  argsall[0] = '\0';
++  for (argi = 0; argi < argcount - 1; ++argi)
++    {
++      strcat((char*)argsall, arglist[argi]);
++      strcat((char*)argsall, " ");
++    }
++
++  memset(&SecAttr,     0, sizeof(SecAttr));
++  memset(&StartupInfo, 0, sizeof(StartupInfo));
++  memset(&ProcessInfo, 0, sizeof(ProcessInfo));
++
++  SecAttr.nLength = sizeof(SecAttr);
++  SecAttr.bInheritHandle = TRUE;
++
++  Status = CreatePipe( &ReadPipe, &WritePipe, &SecAttr, 0 );
++  if (!Status)
++    {
++      fprintf (stderr, _ ("cannot CreatePipe: GetLastError() -> %d\n"), GetLastError());
++      exit (1);
++    }
++
++  SetHandleInformation( ReadPipe, HANDLE_FLAG_INHERIT, 0 );
++
++  /*
++  StdOutHandle = GetStdHandle( STD_OUTPUT_HANDLE );
++  StdErrHandle = GetStdHandle( STD_ERROR_HANDLE );
++  if (StdOutHandle != INVALID_HANDLE_VALUE) {
++      SetHandleInformation( StdOutHandle, HANDLE_FLAG_INHERIT, 0 );
++  }
++  if (StdErrHandle != INVALID_HANDLE_VALUE) {
++      SetHandleInformation( StdErrHandle, HANDLE_FLAG_INHERIT, 0 );
++  }
++  */
++
++  StartupInfo.cb         = sizeof(StartupInfo);
++  StartupInfo.hStdInput  = GetStdHandle( STD_INPUT_HANDLE );
++  StartupInfo.hStdOutput = WritePipe;
++  StartupInfo.hStdError  = GetStdHandle( STD_ERROR_HANDLE );
++  StartupInfo.dwFlags    = STARTF_USESTDHANDLES;
++
++  Status = CreateProcess(
++          NULL,           /* lpApplicationName */
++          argsall,        /* lpCommandLine */
++          NULL,           /* lpProcessAttributes */
++          NULL,           /* lpThreadAttributes */
++          TRUE,           /* bInheritHandles */
++          0,              /* dwCreationFlags */
++          NULL,           /* lpEnvironment */
++          NULL,           /* lpCurrentDirectory */
++          &StartupInfo,   /* lpStartupInfo */
++          &ProcessInfo ); /* lpProcessInformation */
++
++  CloseHandle( WritePipe );
++  if (!Status)
++    {
++      fprintf (stderr, _ ("cannot find C preprocessor: %s, GetLastError() -> %d\n"), CPP, GetLastError());
++      exit (1);
++    }
++  int fd = _open_osfhandle((intptr_t)ReadPipe, _O_APPEND | _O_RDONLY);
++  if(fd != -1)
++    {
++      fin = _fdopen(fd, "a+");
++    }
++  cpp_pid = ProcessInfo.hProcess;
++}
++
++/* Close the connection to the C-preprocessor and check for successfull
++   termination.  */
++static void
++close_input (void)
++{
++  WaitForSingleObject(cpp_pid, INFINITE);
++}
++
++#else
++
+ /*
+  * Open input file with given define for C-preprocessor
+  */
++
+ static void
+ open_input (const char *infile, const char *define)
+ {
+@@ -416,6 +580,7 @@
+       crash ();
+     }
+ }
++#endif
+ 
+ /* valid tirpc nettypes */
+ static const char *valid_ti_nettypes[] =
diff --git a/patches/glibc/2.18/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch b/patches/glibc/2.18/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
new file mode 100644
index 0000000..b18f435
--- /dev/null
+++ b/patches/glibc/2.18/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
@@ -0,0 +1,118 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-02-23 14:22:48.238544000 +0000
++++ b/configure	2014-02-23 14:23:01.641245900 +0000
+@@ -624,6 +624,7 @@
+ libc_cv_gcc_static_libgcc
+ CXX_SYSINCLUDES
+ SYSINCLUDES
++sysheaders
+ AUTOCONF
+ NM
+ AWK
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-23 14:22:48.239044000 +0000
++++ b/configure.in	2014-02-23 14:23:01.643746200 +0000
+@@ -1056,6 +1056,7 @@
+     done
+   fi
+ fi
++AC_SUBST(sysheaders)
+ AC_SUBST(SYSINCLUDES)
+ AC_SUBST(CXX_SYSINCLUDES)
+ 
+diff -urN a/elf/Makefile b/elf/Makefile
+--- a/elf/Makefile	2014-02-23 14:22:48.409565700 +0000
++++ b/elf/Makefile	2014-02-23 14:23:01.645246400 +0000
+@@ -63,6 +63,15 @@
+ ld-map		= $(common-objpfx)ld.map
+ endif
+ 
++# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
++# suffix of w means Windows.
++uname_o := $(shell uname -o)
++ifneq (, $(findstring Msys, $(uname_o)))
++common-objpfxw = $(shell cd $(common-objpfx); pwd -W)/
++else
++common-objpfxw = $(common-objpfx)
++endif
++
+ ifeq (yes,$(build-shared))
+ extra-objs	= $(all-rtld-routines:%=%.os) soinit.os sofini.os interp.os
+ generated	+= librtld.os dl-allobjs.os ld.so ldd
+@@ -287,15 +296,15 @@
+ 
+ $(objpfx)librtld.mk: $(objpfx)librtld.map Makefile
+ 	LC_ALL=C \
+-	sed -n 's@^$(common-objpfx)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
++	sed -n 's@^$(common-objpfxw)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
+ 	    $< | \
+ 	while read lib file; do \
+ 	  case $$lib in \
+ 	  libc_pic.a) \
+ 	    LC_ALL=C fgrep -l /$$file \
+-		  $(common-objpfx)stamp.os $(common-objpfx)*/stamp.os | \
++		  $(common-objpfxw)stamp.os $(common-objpfxw)*/stamp.os | \
+ 	    LC_ALL=C \
+-	    sed 's@^$(common-objpfx)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
++	    sed 's@^$(common-objpfxw)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
+ 	    ;; \
+ 	  */*.a) \
+ 	    echo rtld-$${lib%%/*} += $$file ;; \
+diff -urN a/Makefile.in b/Makefile.in
+--- a/Makefile.in	2014-02-23 14:22:49.701729800 +0000
++++ b/Makefile.in	2014-02-23 14:23:01.647246600 +0000
+@@ -1,4 +1,5 @@
+ srcdir = @srcdir@
++sysheaders = @sysheaders@
+ 
+ # Uncomment the line below if you want to do parallel build.
+ # PARALLELMFLAGS = -j 4
+@@ -6,11 +7,11 @@
+ .PHONY: all install bench
+ 
+ all .DEFAULT:
+-	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` $@
++	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` sysheaders=$(sysheaders) $@
+ 
+ install:
+ 	LANGUAGE=C LC_ALL=C; export LANGUAGE LC_ALL; \
+-	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` $@
++	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` sysheaders=$(sysheaders) $@
+ 
+ bench bench-clean:
+ 	$(MAKE) -C $(srcdir)/benchtests $(PARALLELMFLAGS) objdir=`pwd` $@
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2014-02-23 14:22:49.701729800 +0000
++++ b/Makerules	2014-02-23 14:23:01.648746800 +0000
+@@ -369,11 +369,29 @@
+ mv -f $(@:.d=.T) $@ $(generate-md5)
+ endef
+ 
++# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
++# suffix of w means Windows, and m means MSYS2.
++uname_o := $(shell uname -o)
++sysroot = $(shell echo `$(CC) -print-file-name="include"`)
++ifneq (, $(findstring Msys, $(uname_o)))
++common-objpfxw = $(shell cd $(common-objpfx); pwd -W)/
++sysheadersw = $(shell cd $(sysheaders); pwd -W)
++sysrootm = $(shell cd $(sysroot); pwd)
++else
++common-objpfxw = $(common-objpfx)
++sysheadersw = $(sysheaders)
++sysrootm = $(sysroot)
++endif
++
+ ifneq (,$(objpfx))
+ # Continuation lines here are dangerous because they introduce spaces!
+ define sed-remove-objpfx
+--e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfx)))@ $$(common-objpfx)@g' \
+--e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfx)))@$$(common-objpfx)@g'
++-e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfxw)))@ $$(common-objpfx)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfxw)))@$$(common-objpfx)@g' \
++-e 's@ $(subst .,\.,$(subst @,\@,$(sysheadersw)))@ $(sysheaders)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(sysheadersw)))@$(sysheaders)@g' \
++-e 's@ $(subst .,\.,$(subst @,\@,$(sysroot)))@ $(sysrootm)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(sysroot)))@$(sysrootm)@g'
+ endef
+ endif
+ 
diff --git a/patches/glibc/2.18/240-Rename-extensions-for-case-insensitive-fs.patch b/patches/glibc/2.18/240-Rename-extensions-for-case-insensitive-fs.patch
new file mode 100644
index 0000000..1f8274a
--- /dev/null
+++ b/patches/glibc/2.18/240-Rename-extensions-for-case-insensitive-fs.patch
@@ -0,0 +1,247 @@
+diff -urN a/extra-lib.mk b/extra-lib.mk
+--- a/extra-lib.mk	2014-04-26 21:08:31.070058000 +0100
++++ b/extra-lib.mk	2014-04-26 21:08:55.384448800 +0100
+@@ -13,7 +13,7 @@
+ 
+ ifneq (,$($(lib)-static-only-routines))
+ ifneq (,$(filter yes%,$(build-shared)$($(lib).so-version)))
+-object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oS)
++object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oSTATIC)
+ endif
+ endif
+ 
+@@ -29,7 +29,7 @@
+ 
+ # Add each flavor of library to the lists of things to build and install.
+ install-lib += $(foreach o,$(object-suffixes-$(lib)),$(lib:lib%=$(libtype$o)))
+-extra-objs += $(foreach o,$(filter-out .os .oS,$(object-suffixes-$(lib))),\
++extra-objs += $(foreach o,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))),\
+ 			$(patsubst %,%$o,$(filter-out \
+ 					   $($(lib)-shared-only-routines),\
+ 					   $(all-$(lib)-routines))))
+@@ -37,8 +37,8 @@
+ extra-objs += $(patsubst %,%.os,$(filter-out $($(lib)-static-only-routines),\
+ 					     $(all-$(lib)-routines)))
+ endif
+-ifneq (,$(filter .oS,$(object-suffixes-$(lib))))
+-extra-objs += $(patsubst %,%.oS,$(filter $($(lib)-static-only-routines),\
++ifneq (,$(filter .oSTATIC,$(object-suffixes-$(lib))))
++extra-objs += $(patsubst %,%.oSTATIC,$(filter $($(lib)-static-only-routines),\
+ 					 $(all-$(lib)-routines)))
+ endif
+ alltypes-$(lib) := $(foreach o,$(object-suffixes-$(lib)),\
+@@ -62,7 +62,7 @@
+ 
+ 
+ # Use o-iterator.mk to generate a rule for each flavor of library.
+-ifneq (,$(filter-out .os .oS,$(object-suffixes-$(lib))))
++ifneq (,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))))
+ define o-iterator-doit
+ $(objpfx)$(patsubst %,$(libtype$o),$(lib:lib%=%)): \
+   $(patsubst %,$(objpfx)%$o,\
+@@ -70,7 +70,7 @@
+ 			  $(all-$(lib)-routines))); \
+ 	$$(build-extra-lib)
+ endef
+-object-suffixes-left = $(filter-out .os .oS,$(object-suffixes-$(lib)))
++object-suffixes-left = $(filter-out .os .oSTATIC,$(object-suffixes-$(lib)))
+ include $(patsubst %,$(..)o-iterator.mk,$(object-suffixes-left))
+ endif
+ 
+@@ -82,9 +82,9 @@
+ 	$(build-extra-lib)
+ endif
+ 
+-ifneq (,$(filter .oS,$(object-suffixes-$(lib))))
+-$(objpfx)$(patsubst %,$(libtype.oS),$(lib:lib%=%)): \
+-  $(patsubst %,$(objpfx)%.oS,\
++ifneq (,$(filter .oSTATIC,$(object-suffixes-$(lib))))
++$(objpfx)$(patsubst %,$(libtype.oSTATIC),$(lib:lib%=%)): \
++  $(patsubst %,$(objpfx)%.oSTATIC,\
+ 	     $(filter $($(lib)-static-only-routines),\
+ 		      $(all-$(lib)-routines)))
+ 	$(build-extra-lib)
+diff -urN a/Makeconfig b/Makeconfig
+--- a/Makeconfig	2014-04-26 21:08:31.594088000 +0100
++++ b/Makeconfig	2014-04-26 21:08:55.419450800 +0100
+@@ -469,7 +469,7 @@
+ link-libc-tests-rpath-link = $(link-libc-rpath-link)
+ endif
+ link-libc-before-gnulib = $(common-objpfx)libc.so$(libc.so-version) \
+-			  $(common-objpfx)$(patsubst %,$(libtype.oS),c) \
++			  $(common-objpfx)$(patsubst %,$(libtype.oSTATIC),c) \
+ 			  $(as-needed) $(common-objpfx)elf/ld.so \
+ 			  $(no-as-needed)
+ link-libc = $(link-libc-rpath-link) $(link-libc-before-gnulib) $(gnulib)
+@@ -813,7 +813,7 @@
+ # The compilation rules use $(CPPFLAGS-${SUFFIX}) and $(CFLAGS-${SUFFIX})
+ # to pass different flags for each flavor.
+ libtypes = $(foreach o,$(object-suffixes-for-libc),$(libtype$o))
+-all-object-suffixes := .o .os .op .og .oS
++all-object-suffixes := .o .os .op .og .oSTATIC
+ object-suffixes :=
+ CPPFLAGS-.o = $(pic-default)
+ CFLAGS-.o = $(filter %frame-pointer,$(+cflags))
+@@ -852,14 +852,14 @@
+ 
+ ifeq (yes,$(build-shared))
+ # Build special library that contains the static-only routines for libc.
+-object-suffixes-for-libc += .oS
++object-suffixes-for-libc += .oSTATIC
+ 
+ # Must build the routines as PIC, though, because they can end up in (users')
+ # shared objects.  We don't want to use CFLAGS-os because users may, for
+ # example, make that processor-specific.
+-CFLAGS-.oS = $(CFLAGS-.o) $(PIC-ccflag)
+-CPPFLAGS-.oS = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
+-libtype.oS = lib%_nonshared.a
++CFLAGS-.oSTATIC = $(CFLAGS-.o) $(PIC-ccflag)
++CPPFLAGS-.oSTATIC = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
++libtype.oSTATIC = lib%_nonshared.a
+ endif
+ 
+ # The assembler can generate debug information too.
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2014-04-26 21:08:31.595088100 +0100
++++ b/Makerules	2014-04-26 21:09:41.696097600 +0100
+@@ -161,14 +161,14 @@
+ # We only generate these in the top-level makefile, to avoid any weirdness
+ # from subdir-specific makefile tweaks creeping in on an update.
+ $(common-objpfx)%.make: $(..)%.make.c $(..)Makerules $(common-before-compile)
+-	rm -f $@T $@.dT
++	rm -f $@T $@.dTEMP
+ 	(echo '# Generated from $*.make.c by Makerules.'; \
+ 	 $(CC) $(CFLAGS) $(CPPFLAGS) -E -DASSEMBLER $< \
+-	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dT \
++	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dTEMP \
+ 	 | sed -n '/@@@/{s/@@@[	 ]*\(.*\)@@@/\1/;s/[	 ]*$$//p;}'; \
+ 	 echo 'common-generated += $(@F)'; \
+-	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dT; \
+-	 rm -f $@.dT) > $@T
++	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dTEMP; \
++	 rm -f $@.dTEMP) > $@T
+ 	mv -f $@T $@
+ endif
+ 
+@@ -327,7 +327,7 @@
+ endif # $(versioning) = yes
+ endif # sysd-sorted-done
+ 
+-# Generate .dT files as we compile.
++# Generate .dTEMP files as we compile.
+ compile-mkdep-flags = -MD -MP -MF $@.dt -MT $@
+ compile-command.S = $(compile.S) $(OUTPUT_OPTION) $(compile-mkdep-flags)
+ compile-command.c = $(compile.c) $(OUTPUT_OPTION) $(compile-mkdep-flags)
+@@ -404,7 +404,7 @@
+ endif
+ endif
+ 
+-elide-routines.oS += $(filter-out $(static-only-routines),\
++elide-routines.oSTATIC += $(filter-out $(static-only-routines),\
+ 				  $(routines) $(aux) $(sysdep_routines))
+ elide-routines.os += $(static-only-routines)
+ 
+@@ -647,7 +647,7 @@
+ 
+ +depfiles := $(sources:.c=.d) \
+ 	     $(patsubst %.o,%.d,$(filter %.o,$(extra-objs:.os=.o))) \
+-	     $(patsubst %.oS,%.d,$(filter %.oS,$(extra-objs))) \
++	     $(patsubst %.oSTATIC,%.d,$(filter %.oSTATIC,$(extra-objs))) \
+ 	     $(patsubst %.o,%.d,$(filter %.o,$(extra-test-objs:.os=.o))) \
+ 	     $(addsuffix .d,$(tests) $(xtests) $(test-srcs))
+ ifeq ($(build-programs),yes)
+@@ -938,7 +938,7 @@
+ install: $(inst_libdir)/libc.so
+ $(inst_libdir)/libc.so: $(common-objpfx)format.lds \
+ 			$(common-objpfx)libc.so$(libc.so-version) \
+-			$(inst_libdir)/$(patsubst %,$(libtype.oS),\
++			$(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
+ 						  $(libprefix)$(libc-name)) \
+ 			$(+force)
+ 	(echo '/* GNU ld script';\
+@@ -946,7 +946,7 @@
+ 	 echo '   the static library, so try that secondarily.  */';\
+ 	 cat $<; \
+ 	 echo 'GROUP ( $(slibdir)/libc.so$(libc.so-version)' \
+-	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)$(libc-name))'\
++	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)$(libc-name))'\
+ 	      ' AS_NEEDED (' $(rtlddir)/$(rtld-installed-name) ') )' \
+ 	) > $@.new
+ 	mv -f $@.new $@
+diff -urN a/nptl/Makefile b/nptl/Makefile
+--- a/nptl/Makefile	2014-04-26 21:08:31.739096300 +0100
++++ b/nptl/Makefile	2014-04-26 21:08:55.425451100 +0100
+@@ -380,7 +380,7 @@
+ 
+ $(inst_libdir)/libpthread.so: $(common-objpfx)format.lds \
+ 			      $(objpfx)libpthread.so$(libpthread.so-version) \
+-			      $(inst_libdir)/$(patsubst %,$(libtype.oS),\
++			      $(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
+ 							$(libprefix)pthread) \
+ 			      $(+force)
+ 	(echo '/* GNU ld script';\
+@@ -388,7 +388,7 @@
+ 	 echo '   the static library, so try that secondarily.  */';\
+ 	 cat $<; \
+ 	 echo 'GROUP ( $(slibdir)/libpthread.so$(libpthread.so-version)' \
+-	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)pthread)'\
++	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)pthread)'\
+ 	      ')' \
+ 	) > $@.new
+ 	mv -f $@.new $@
+diff -urN a/sysdeps/i386/i686/Makefile b/sysdeps/i386/i686/Makefile
+--- a/sysdeps/i386/i686/Makefile	2014-04-26 21:08:34.859274800 +0100
++++ b/sysdeps/i386/i686/Makefile	2014-04-26 21:08:55.427451200 +0100
+@@ -15,11 +15,11 @@
+ CFLAGS-.os += -Wa,-mtune=i686
+ CFLAGS-.op += -Wa,-mtune=i686
+ CFLAGS-.og += -Wa,-mtune=i686
+-CFLAGS-.oS += -Wa,-mtune=i686
++CFLAGS-.oSTATIC += -Wa,-mtune=i686
+ 
+ ASFLAGS-.o += -Wa,-mtune=i686
+ ASFLAGS-.os += -Wa,-mtune=i686
+ ASFLAGS-.op += -Wa,-mtune=i686
+ ASFLAGS-.og += -Wa,-mtune=i686
+-ASFLAGS-.oS += -Wa,-mtune=i686
++ASFLAGS-.oSTATIC += -Wa,-mtune=i686
+ endif
+diff -urN a/sysdeps/ieee754/ldbl-opt/Makefile b/sysdeps/ieee754/ldbl-opt/Makefile
+--- a/sysdeps/ieee754/ldbl-opt/Makefile	2014-04-26 21:08:35.001282900 +0100
++++ b/sysdeps/ieee754/ldbl-opt/Makefile	2014-04-26 21:08:55.429451300 +0100
+@@ -44,7 +44,7 @@
+ libnldbl-routines = $(libnldbl-calls:%=nldbl-%)
+ libnldbl-inhibit-o = $(object-suffixes)
+ libnldbl-static-only-routines = $(libnldbl-routines)
+-extra-objs += $(addsuffix .oS, $(libnldbl-routines))
++extra-objs += $(addsuffix .oSTATIC, $(libnldbl-routines))
+ 
+ CFLAGS-nldbl-acos.c = -fno-builtin-acosl
+ CFLAGS-nldbl-acosh.c = -fno-builtin-acoshl
+diff -urN a/sysdeps/sparc/sparc32/sparcv9/Makefile b/sysdeps/sparc/sparc32/sparcv9/Makefile
+--- a/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-04-26 21:08:35.322301300 +0100
++++ b/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-04-26 21:08:55.431451400 +0100
+@@ -10,11 +10,11 @@
+ ASFLAGS-.os += -Wa,-Av9d
+ ASFLAGS-.op += -Wa,-Av9d
+ ASFLAGS-.og += -Wa,-Av9d
+-ASFLAGS-.oS += -Wa,-Av9d
++ASFLAGS-.oSTATIC += -Wa,-Av9d
+ else
+ ASFLAGS-.o += -Wa,-Av9a
+ ASFLAGS-.os += -Wa,-Av9a
+ ASFLAGS-.op += -Wa,-Av9a
+ ASFLAGS-.og += -Wa,-Av9a
+-ASFLAGS-.oS += -Wa,-Av9a
++ASFLAGS-.oSTATIC += -Wa,-Av9a
+ endif
+diff -urN a/sysdeps/sparc/sparc64/Makefile b/sysdeps/sparc/sparc64/Makefile
+--- a/sysdeps/sparc/sparc64/Makefile	2014-04-26 21:08:35.356303200 +0100
++++ b/sysdeps/sparc/sparc64/Makefile	2014-04-26 21:08:55.433451600 +0100
+@@ -12,5 +12,5 @@
+ ASFLAGS-.os += -Wa,-Av9d
+ ASFLAGS-.op += -Wa,-Av9d
+ ASFLAGS-.og += -Wa,-Av9d
+-ASFLAGS-.oS += -Wa,-Av9d
++ASFLAGS-.oSTATIC += -Wa,-Av9d
+ endif
diff --git a/patches/glibc/2.18/250-MSYS-Hack-force-ln-s.patch b/patches/glibc/2.18/250-MSYS-Hack-force-ln-s.patch
new file mode 100644
index 0000000..9c5e1ff
--- /dev/null
+++ b/patches/glibc/2.18/250-MSYS-Hack-force-ln-s.patch
@@ -0,0 +1,39 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-02-23 14:23:24.999212000 +0000
++++ b/configure	2014-02-23 14:23:38.010364200 +0000
+@@ -4474,6 +4474,16 @@
+ $as_echo "no, using $LN_S" >&6; }
+ fi
+ 
++# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
++# eglibc, whereas cp -r doesn't.
++case "$build_os" in
++*mingw*)
++  as_ln_s='ln -s'
++  LN_S=$as_ln_s
++  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&5
++$as_echo "$as_me: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&2;}
++  ;;
++esac
+ 
+ # Was a --with-binutils option given?
+ if test -n "$path_binutils"; then
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-23 14:23:24.999712000 +0000
++++ b/configure.in	2014-02-23 14:23:38.012864500 +0000
+@@ -971,6 +971,15 @@
+   INSTALL='\$(..)./scripts/install-sh -c'
+ fi
+ AC_PROG_LN_S
++# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
++# eglibc, whereas cp -r doesn't.
++case "$build_os" in
++*mingw*)
++  as_ln_s='ln -s'
++  LN_S=$as_ln_s
++  AC_MSG_WARN(Hacked as_ln_s and LN_S to 'ln -s' for MSYS2)
++  ;;
++esac
+ 
+ LIBC_PROG_BINUTILS
+ 
diff --git a/patches/glibc/2.19/220-Fix-crossrpc-to-build-on-non-Linux.patch b/patches/glibc/2.19/220-Fix-crossrpc-to-build-on-non-Linux.patch
new file mode 100644
index 0000000..96821be
--- /dev/null
+++ b/patches/glibc/2.19/220-Fix-crossrpc-to-build-on-non-Linux.patch
@@ -0,0 +1,248 @@
+diff -urN a/sunrpc/rpc/types.h b/sunrpc/rpc/types.h
+--- a/sunrpc/rpc/types.h	2014-02-07 09:04:38.000000000 +0000
++++ b/sunrpc/rpc/types.h	2014-04-26 21:39:25.772140900 +0100
+@@ -74,6 +74,7 @@
+ # define __daddr_t_defined
+ #endif
+ 
++#ifdef __linux__
+ #ifndef __u_char_defined
+ typedef __u_char u_char;
+ typedef __u_short u_short;
+@@ -89,11 +90,14 @@
+ typedef __caddr_t caddr_t;
+ # define __daddr_t_defined
+ #endif
++#endif
+ 
+ #include <sys/time.h>
+ #include <sys/param.h>
+ 
++#ifndef _WIN32
+ #include <netinet/in.h>
++#endif
+ 
+ #ifndef INADDR_LOOPBACK
+ #define       INADDR_LOOPBACK         (u_long)0x7F000001
+diff -urN a/sunrpc/rpc_main.c b/sunrpc/rpc_main.c
+--- a/sunrpc/rpc_main.c	2014-02-07 09:04:38.000000000 +0000
++++ b/sunrpc/rpc_main.c	2014-04-26 21:39:25.796142300 +0100
+@@ -38,14 +38,20 @@
+ #include <stdio.h>
+ #include <string.h>
+ #include <unistd.h>
++#ifndef IS_IN_build
+ #include <libintl.h>
++#endif
+ #include <locale.h>
+ #include <ctype.h>
+ #include <sys/types.h>
+ #include <sys/param.h>
+ #include <sys/file.h>
+ #include <sys/stat.h>
++#ifndef _WIN32
+ #include <sys/wait.h>
++#else
++#include <windows.h>
++#endif
+ #include "rpc_parse.h"
+ #include "rpc_util.h"
+ #include "rpc_scan.h"
+@@ -54,6 +60,33 @@
+ #include "../version.h"
+ #define PACKAGE _libc_intl_domainname
+ 
++#ifdef _WIN32
++#define rindex(_dest, _src) strrchr((_dest), (_src))
++
++char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src);
++
++char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src)
++{
++  if (src == NULL)
++      return NULL;
++  return strcpy(dest, src) + strlen(dest);
++}
++#endif /* _WIN32 */
++
++#if defined(_WIN32) || defined(__BSD__)
++
++char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len);
++
++char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len)
++{
++  size_t min_len = strlen(src);
++  if (min_len > len)
++    min_len = len;
++  return strncpy(dest, src, len) + min_len;
++}
++
++#endif /* defined(_WIN32) || defined(__BSD__) */
++
+ #define EXTEND	1		/* alias for TRUE */
+ #define DONT_EXTEND	0	/* alias for FALSE */
+ 
+@@ -81,7 +114,11 @@
+ static const char *CPP = "/lib/cpp";
+ static const char CPPFLAGS[] = "-C";
+ static char *pathbuf;
++#ifdef _WIN32
++static HANDLE cpp_pid;
++#else
+ static int cpp_pid;
++#endif
+ static const char *allv[] =
+ {
+   "rpcgen", "-s", "udp", "-s", "tcp"
+@@ -328,6 +365,20 @@
+ {
+   struct stat64 buf;
+ 
++  /* Avoid trying to directly execute a bash script on Windows. */
++#ifdef _WIN32
++  char* CPPENVV = getenv("CPP");
++  if (CPPENVV)
++    {
++      CPP = (char*)malloc(strlen(CPPENVV)+1);
++      strcpy((char*)CPP, CPPENVV);
++      /* Don't bother checking that it exists with stat64 as
++       * we'd have to check in the path, also it usually ends
++       * with a few arguments. */
++      return;
++    }
++#endif
++
+   if (stat64 (CPP, &buf) == 0)
+     return;
+ 
+@@ -341,9 +392,122 @@
+   CPP = "cpp";
+ }
+ 
++#ifdef _WIN32
++/*
++ * Open input file with given define for C-preprocessor
++ */
++static void
++open_input (const char *infile, const char *define)
++{
++  int argi;
++  int argcc = 0;
++  LPSTR argsall;
++  HANDLE StdOutHandle;
++  HANDLE StdErrHandle;
++  HANDLE ReadPipe;
++  HANDLE WritePipe;
++  SECURITY_ATTRIBUTES SecAttr;
++  STARTUPINFO StartupInfo;
++  PROCESS_INFORMATION ProcessInfo;
++  DWORD Status;
++
++  find_cpp ();
++  putarg (0, CPP);
++  putarg (1, CPPFLAGS);
++  addarg (define);
++  if (infile)
++    addarg (infile);
++  addarg ((char *) NULL);
++  for (argi = 0; argi < argcount - 1; ++argi)
++    {
++      argcc += strlen(arglist[argi])+2;
++    }
++  argsall = (LPSTR)alloca(argcc + 1);
++  if (!argsall)
++    {
++      fprintf (stderr, _ ("cannot alloca for argsall\n"));
++      exit (1);
++    }
++  argsall[0] = '\0';
++  for (argi = 0; argi < argcount - 1; ++argi)
++    {
++      strcat((char*)argsall, arglist[argi]);
++      strcat((char*)argsall, " ");
++    }
++
++  memset(&SecAttr,     0, sizeof(SecAttr));
++  memset(&StartupInfo, 0, sizeof(StartupInfo));
++  memset(&ProcessInfo, 0, sizeof(ProcessInfo));
++
++  SecAttr.nLength = sizeof(SecAttr);
++  SecAttr.bInheritHandle = TRUE;
++
++  Status = CreatePipe( &ReadPipe, &WritePipe, &SecAttr, 0 );
++  if (!Status)
++    {
++      fprintf (stderr, _ ("cannot CreatePipe: GetLastError() -> %d\n"), GetLastError());
++      exit (1);
++    }
++
++  SetHandleInformation( ReadPipe, HANDLE_FLAG_INHERIT, 0 );
++
++  /*
++  StdOutHandle = GetStdHandle( STD_OUTPUT_HANDLE );
++  StdErrHandle = GetStdHandle( STD_ERROR_HANDLE );
++  if (StdOutHandle != INVALID_HANDLE_VALUE) {
++      SetHandleInformation( StdOutHandle, HANDLE_FLAG_INHERIT, 0 );
++  }
++  if (StdErrHandle != INVALID_HANDLE_VALUE) {
++      SetHandleInformation( StdErrHandle, HANDLE_FLAG_INHERIT, 0 );
++  }
++  */
++
++  StartupInfo.cb         = sizeof(StartupInfo);
++  StartupInfo.hStdInput  = GetStdHandle( STD_INPUT_HANDLE );
++  StartupInfo.hStdOutput = WritePipe;
++  StartupInfo.hStdError  = GetStdHandle( STD_ERROR_HANDLE );
++  StartupInfo.dwFlags    = STARTF_USESTDHANDLES;
++
++  Status = CreateProcess(
++          NULL,           /* lpApplicationName */
++          argsall,        /* lpCommandLine */
++          NULL,           /* lpProcessAttributes */
++          NULL,           /* lpThreadAttributes */
++          TRUE,           /* bInheritHandles */
++          0,              /* dwCreationFlags */
++          NULL,           /* lpEnvironment */
++          NULL,           /* lpCurrentDirectory */
++          &StartupInfo,   /* lpStartupInfo */
++          &ProcessInfo ); /* lpProcessInformation */
++
++  CloseHandle( WritePipe );
++  if (!Status)
++    {
++      fprintf (stderr, _ ("cannot find C preprocessor: %s, GetLastError() -> %d\n"), CPP, GetLastError());
++      exit (1);
++    }
++  int fd = _open_osfhandle((intptr_t)ReadPipe, _O_APPEND | _O_RDONLY);
++  if(fd != -1)
++    {
++      fin = _fdopen(fd, "a+");
++    }
++  cpp_pid = ProcessInfo.hProcess;
++}
++
++/* Close the connection to the C-preprocessor and check for successfull
++   termination.  */
++static void
++close_input (void)
++{
++  WaitForSingleObject(cpp_pid, INFINITE);
++}
++
++#else
++
+ /*
+  * Open input file with given define for C-preprocessor
+  */
++
+ static void
+ open_input (const char *infile, const char *define)
+ {
+@@ -416,6 +580,7 @@
+       crash ();
+     }
+ }
++#endif
+ 
+ /* valid tirpc nettypes */
+ static const char *valid_ti_nettypes[] =
diff --git a/patches/glibc/2.19/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch b/patches/glibc/2.19/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
new file mode 100644
index 0000000..a248854
--- /dev/null
+++ b/patches/glibc/2.19/230-MSYS-vs-MinGW-Hacky-sed-in-Makefiles.patch
@@ -0,0 +1,118 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-04-26 21:41:01.767631600 +0100
++++ b/configure	2014-04-26 21:46:09.757247600 +0100
+@@ -623,6 +623,7 @@
+ libc_cv_gcc_static_libgcc
+ CXX_SYSINCLUDES
+ SYSINCLUDES
++sysheaders
+ AUTOCONF
+ NM
+ AWK
+diff -urN a/configure.ac b/configure.ac
+--- a/configure.ac	2014-04-26 21:41:01.767631600 +0100
++++ b/configure.ac	2014-04-26 21:46:09.791249500 +0100
+@@ -1061,6 +1061,7 @@
+     done
+   fi
+ fi
++AC_SUBST(sysheaders)
+ AC_SUBST(SYSINCLUDES)
+ AC_SUBST(CXX_SYSINCLUDES)
+ 
+diff -urN a/elf/Makefile b/elf/Makefile
+--- a/elf/Makefile	2014-04-26 21:41:01.864637100 +0100
++++ b/elf/Makefile	2014-04-26 21:46:09.794249700 +0100
+@@ -63,6 +63,15 @@
+ ld-map		= $(common-objpfx)ld.map
+ endif
+ 
++# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
++# suffix of w means Windows.
++uname_o := $(shell uname -o)
++ifneq (, $(findstring Msys, $(uname_o)))
++common-objpfxw = $(shell cd $(common-objpfx); pwd -W)/
++else
++common-objpfxw = $(common-objpfx)
++endif
++
+ ifeq (yes,$(build-shared))
+ extra-objs	= $(all-rtld-routines:%=%.os) soinit.os sofini.os interp.os
+ generated	+= librtld.os dl-allobjs.os ld.so ldd
+@@ -290,15 +299,15 @@
+ 
+ $(objpfx)librtld.mk: $(objpfx)librtld.map Makefile
+ 	LC_ALL=C \
+-	sed -n 's@^$(common-objpfx)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
++	sed -n 's@^$(common-objpfxw)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
+ 	    $< | \
+ 	while read lib file; do \
+ 	  case $$lib in \
+ 	  libc_pic.a) \
+ 	    LC_ALL=C fgrep -l /$$file \
+-		  $(common-objpfx)stamp.os $(common-objpfx)*/stamp.os | \
++		  $(common-objpfxw)stamp.os $(common-objpfxw)*/stamp.os | \
+ 	    LC_ALL=C \
+-	    sed 's@^$(common-objpfx)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
++	    sed 's@^$(common-objpfxw)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
+ 	    ;; \
+ 	  */*.a) \
+ 	    echo rtld-$${lib%%/*} += $$file ;; \
+diff -urN a/Makefile.in b/Makefile.in
+--- a/Makefile.in	2014-04-26 21:41:02.436669800 +0100
++++ b/Makefile.in	2014-04-26 21:46:09.796249800 +0100
+@@ -1,4 +1,5 @@
+ srcdir = @srcdir@
++sysheaders = @sysheaders@
+ 
+ # Uncomment the line below if you want to do parallel build.
+ # PARALLELMFLAGS = -j 4
+@@ -6,11 +7,11 @@
+ .PHONY: all install bench
+ 
+ all .DEFAULT:
+-	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` $@
++	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` sysheaders=$(sysheaders) $@
+ 
+ install:
+ 	LANGUAGE=C LC_ALL=C; export LANGUAGE LC_ALL; \
+-	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` $@
++	$(MAKE) -r PARALLELMFLAGS="$(PARALLELMFLAGS)" -C $(srcdir) objdir=`pwd` sysheaders=$(sysheaders) $@
+ 
+ bench bench-clean:
+ 	$(MAKE) -C $(srcdir)/benchtests $(PARALLELMFLAGS) objdir=`pwd` $@
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2014-04-26 21:41:02.436669800 +0100
++++ b/Makerules	2014-04-26 21:46:09.798249900 +0100
+@@ -369,11 +369,29 @@
+ mv -f $(@:.d=.T) $@ $(generate-md5)
+ endef
+ 
++# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
++# suffix of w means Windows, and m means MSYS2.
++uname_o := $(shell uname -o)
++sysroot = $(shell echo `$(CC) -print-file-name="include"`)
++ifneq (, $(findstring Msys, $(uname_o)))
++common-objpfxw = $(shell cd $(common-objpfx); pwd -W)/
++sysheadersw = $(shell cd $(sysheaders); pwd -W)
++sysrootm = $(shell cd $(sysroot); pwd)
++else
++common-objpfxw = $(common-objpfx)
++sysheadersw = $(sysheaders)
++sysrootm = $(sysroot)
++endif
++
+ ifneq (,$(objpfx))
+ # Continuation lines here are dangerous because they introduce spaces!
+ define sed-remove-objpfx
+--e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfx)))@ $$(common-objpfx)@g' \
+--e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfx)))@$$(common-objpfx)@g'
++-e 's@ $(subst .,\.,$(subst @,\@,$(common-objpfxw)))@ $$(common-objpfx)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(common-objpfxw)))@$$(common-objpfx)@g' \
++-e 's@ $(subst .,\.,$(subst @,\@,$(sysheadersw)))@ $(sysheaders)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(sysheadersw)))@$(sysheaders)@g' \
++-e 's@ $(subst .,\.,$(subst @,\@,$(sysroot)))@ $(sysrootm)@g' \
++-e 's@^$(subst .,\.,$(subst @,\@,$(sysroot)))@$(sysrootm)@g'
+ endef
+ endif
+ 
diff --git a/patches/glibc/2.19/240-Rename-extensions-for-case-insensitive-fs.patch b/patches/glibc/2.19/240-Rename-extensions-for-case-insensitive-fs.patch
new file mode 100644
index 0000000..6a6fca8
--- /dev/null
+++ b/patches/glibc/2.19/240-Rename-extensions-for-case-insensitive-fs.patch
@@ -0,0 +1,247 @@
+diff -urN a/extra-lib.mk b/extra-lib.mk
+--- a/extra-lib.mk	2014-04-26 21:46:57.650986900 +0100
++++ b/extra-lib.mk	2014-04-26 21:47:34.849114500 +0100
+@@ -13,7 +13,7 @@
+ 
+ ifneq (,$($(lib)-static-only-routines))
+ ifneq (,$(filter yes%,$(build-shared)$($(lib).so-version)))
+-object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oS)
++object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oSTATIC)
+ endif
+ endif
+ 
+@@ -29,7 +29,7 @@
+ 
+ # Add each flavor of library to the lists of things to build and install.
+ install-lib += $(foreach o,$(object-suffixes-$(lib)),$(lib:lib%=$(libtype$o)))
+-extra-objs += $(foreach o,$(filter-out .os .oS,$(object-suffixes-$(lib))),\
++extra-objs += $(foreach o,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))),\
+ 			$(patsubst %,%$o,$(filter-out \
+ 					   $($(lib)-shared-only-routines),\
+ 					   $(all-$(lib)-routines))))
+@@ -37,8 +37,8 @@
+ extra-objs += $(patsubst %,%.os,$(filter-out $($(lib)-static-only-routines),\
+ 					     $(all-$(lib)-routines)))
+ endif
+-ifneq (,$(filter .oS,$(object-suffixes-$(lib))))
+-extra-objs += $(patsubst %,%.oS,$(filter $($(lib)-static-only-routines),\
++ifneq (,$(filter .oSTATIC,$(object-suffixes-$(lib))))
++extra-objs += $(patsubst %,%.oSTATIC,$(filter $($(lib)-static-only-routines),\
+ 					 $(all-$(lib)-routines)))
+ endif
+ alltypes-$(lib) := $(foreach o,$(object-suffixes-$(lib)),\
+@@ -62,7 +62,7 @@
+ 
+ 
+ # Use o-iterator.mk to generate a rule for each flavor of library.
+-ifneq (,$(filter-out .os .oS,$(object-suffixes-$(lib))))
++ifneq (,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))))
+ define o-iterator-doit
+ $(objpfx)$(patsubst %,$(libtype$o),$(lib:lib%=%)): \
+   $(patsubst %,$(objpfx)%$o,\
+@@ -70,7 +70,7 @@
+ 			  $(all-$(lib)-routines))); \
+ 	$$(build-extra-lib)
+ endef
+-object-suffixes-left = $(filter-out .os .oS,$(object-suffixes-$(lib)))
++object-suffixes-left = $(filter-out .os .oSTATIC,$(object-suffixes-$(lib)))
+ include $(patsubst %,$(..)o-iterator.mk,$(object-suffixes-left))
+ endif
+ 
+@@ -82,9 +82,9 @@
+ 	$(build-extra-lib)
+ endif
+ 
+-ifneq (,$(filter .oS,$(object-suffixes-$(lib))))
+-$(objpfx)$(patsubst %,$(libtype.oS),$(lib:lib%=%)): \
+-  $(patsubst %,$(objpfx)%.oS,\
++ifneq (,$(filter .oSTATIC,$(object-suffixes-$(lib))))
++$(objpfx)$(patsubst %,$(libtype.oSTATIC),$(lib:lib%=%)): \
++  $(patsubst %,$(objpfx)%.oSTATIC,\
+ 	     $(filter $($(lib)-static-only-routines),\
+ 		      $(all-$(lib)-routines)))
+ 	$(build-extra-lib)
+diff -urN a/Makeconfig b/Makeconfig
+--- a/Makeconfig	2014-04-26 21:46:58.170016600 +0100
++++ b/Makeconfig	2014-04-26 21:47:34.856114900 +0100
+@@ -469,7 +469,7 @@
+ link-libc-tests-rpath-link = $(link-libc-rpath-link)
+ endif
+ link-libc-before-gnulib = $(common-objpfx)libc.so$(libc.so-version) \
+-			  $(common-objpfx)$(patsubst %,$(libtype.oS),c) \
++			  $(common-objpfx)$(patsubst %,$(libtype.oSTATIC),c) \
+ 			  $(as-needed) $(common-objpfx)elf/ld.so \
+ 			  $(no-as-needed)
+ link-libc = $(link-libc-rpath-link) $(link-libc-before-gnulib) $(gnulib)
+@@ -813,7 +813,7 @@
+ # The compilation rules use $(CPPFLAGS-${SUFFIX}) and $(CFLAGS-${SUFFIX})
+ # to pass different flags for each flavor.
+ libtypes = $(foreach o,$(object-suffixes-for-libc),$(libtype$o))
+-all-object-suffixes := .o .os .op .og .oS
++all-object-suffixes := .o .os .op .og .oSTATIC
+ object-suffixes :=
+ CPPFLAGS-.o = $(pic-default)
+ CFLAGS-.o = $(filter %frame-pointer,$(+cflags))
+@@ -852,14 +852,14 @@
+ 
+ ifeq (yes,$(build-shared))
+ # Build special library that contains the static-only routines for libc.
+-object-suffixes-for-libc += .oS
++object-suffixes-for-libc += .oSTATIC
+ 
+ # Must build the routines as PIC, though, because they can end up in (users')
+ # shared objects.  We don't want to use CFLAGS-os because users may, for
+ # example, make that processor-specific.
+-CFLAGS-.oS = $(CFLAGS-.o) $(PIC-ccflag)
+-CPPFLAGS-.oS = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
+-libtype.oS = lib%_nonshared.a
++CFLAGS-.oSTATIC = $(CFLAGS-.o) $(PIC-ccflag)
++CPPFLAGS-.oSTATIC = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
++libtype.oSTATIC = lib%_nonshared.a
+ endif
+ 
+ # The assembler can generate debug information too.
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2014-04-26 21:46:58.171016700 +0100
++++ b/Makerules	2014-04-26 21:47:34.859115100 +0100
+@@ -161,14 +161,14 @@
+ # We only generate these in the top-level makefile, to avoid any weirdness
+ # from subdir-specific makefile tweaks creeping in on an update.
+ $(common-objpfx)%.make: $(..)%.make.c $(..)Makerules $(common-before-compile)
+-	rm -f $@T $@.dT
++	rm -f $@T $@.dTEMP
+ 	(echo '# Generated from $*.make.c by Makerules.'; \
+ 	 $(CC) $(CFLAGS) $(CPPFLAGS) -E -DASSEMBLER $< \
+-	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dT \
++	       -MD -MP -MT '$$(common-objpfx)$*.make' -MF $@.dTEMP \
+ 	 | sed -n '/@@@/{s/@@@[	 ]*\(.*\)@@@/\1/;s/[	 ]*$$//p;}'; \
+ 	 echo 'common-generated += $(@F)'; \
+-	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dT; \
+-	 rm -f $@.dT) > $@T
++	 sed $(sed-remove-objpfx) $(sed-remove-dotdot) $@.dTEMP; \
++	 rm -f $@.dTEMP) > $@T
+ 	mv -f $@T $@
+ endif
+ 
+@@ -327,7 +327,7 @@
+ endif # $(build-shared) = yes
+ endif # sysd-sorted-done
+ 
+-# Generate .dT files as we compile.
++# Generate .dTEMP files as we compile.
+ compile-mkdep-flags = -MD -MP -MF $@.dt -MT $@
+ compile-command.S = $(compile.S) $(OUTPUT_OPTION) $(compile-mkdep-flags)
+ compile-command.c = $(compile.c) $(OUTPUT_OPTION) $(compile-mkdep-flags)
+@@ -404,7 +404,7 @@
+ endif
+ endif
+ 
+-elide-routines.oS += $(filter-out $(static-only-routines),\
++elide-routines.oSTATIC += $(filter-out $(static-only-routines),\
+ 				  $(routines) $(aux) $(sysdep_routines))
+ elide-routines.os += $(static-only-routines)
+ 
+@@ -678,7 +678,7 @@
+ 
+ +depfiles := $(sources:.c=.d) \
+ 	     $(patsubst %.o,%.d,$(filter %.o,$(extra-objs:.os=.o))) \
+-	     $(patsubst %.oS,%.d,$(filter %.oS,$(extra-objs))) \
++	     $(patsubst %.oSTATIC,%.d,$(filter %.oSTATIC,$(extra-objs))) \
+ 	     $(patsubst %.o,%.d,$(filter %.o,$(extra-test-objs:.os=.o))) \
+ 	     $(addsuffix .d,$(tests) $(xtests) $(test-srcs))
+ ifeq ($(build-programs),yes)
+@@ -969,7 +969,7 @@
+ install: $(inst_libdir)/libc.so
+ $(inst_libdir)/libc.so: $(common-objpfx)format.lds \
+ 			$(common-objpfx)libc.so$(libc.so-version) \
+-			$(inst_libdir)/$(patsubst %,$(libtype.oS),\
++			$(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
+ 						  $(libprefix)$(libc-name)) \
+ 			$(+force)
+ 	(echo '/* GNU ld script';\
+@@ -977,7 +977,7 @@
+ 	 echo '   the static library, so try that secondarily.  */';\
+ 	 cat $<; \
+ 	 echo 'GROUP ( $(slibdir)/libc.so$(libc.so-version)' \
+-	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)$(libc-name))'\
++	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)$(libc-name))'\
+ 	      ' AS_NEEDED (' $(rtlddir)/$(rtld-installed-name) ') )' \
+ 	) > $@.new
+ 	mv -f $@.new $@
+diff -urN a/nptl/Makefile b/nptl/Makefile
+--- a/nptl/Makefile	2014-04-26 21:47:00.009121800 +0100
++++ b/nptl/Makefile	2014-04-26 21:47:34.862115300 +0100
+@@ -384,7 +384,7 @@
+ 
+ $(inst_libdir)/libpthread.so: $(common-objpfx)format.lds \
+ 			      $(objpfx)libpthread.so$(libpthread.so-version) \
+-			      $(inst_libdir)/$(patsubst %,$(libtype.oS),\
++			      $(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
+ 							$(libprefix)pthread) \
+ 			      $(+force)
+ 	(echo '/* GNU ld script';\
+@@ -392,7 +392,7 @@
+ 	 echo '   the static library, so try that secondarily.  */';\
+ 	 cat $<; \
+ 	 echo 'GROUP ( $(slibdir)/libpthread.so$(libpthread.so-version)' \
+-	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)pthread)'\
++	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)pthread)'\
+ 	      ')' \
+ 	) > $@.new
+ 	mv -f $@.new $@
+diff -urN a/sysdeps/i386/i686/Makefile b/sysdeps/i386/i686/Makefile
+--- a/sysdeps/i386/i686/Makefile	2014-04-26 21:47:07.665559700 +0100
++++ b/sysdeps/i386/i686/Makefile	2014-04-26 21:47:34.865115500 +0100
+@@ -15,11 +15,11 @@
+ CFLAGS-.os += -Wa,-mtune=i686
+ CFLAGS-.op += -Wa,-mtune=i686
+ CFLAGS-.og += -Wa,-mtune=i686
+-CFLAGS-.oS += -Wa,-mtune=i686
++CFLAGS-.oSTATIC += -Wa,-mtune=i686
+ 
+ ASFLAGS-.o += -Wa,-mtune=i686
+ ASFLAGS-.os += -Wa,-mtune=i686
+ ASFLAGS-.op += -Wa,-mtune=i686
+ ASFLAGS-.og += -Wa,-mtune=i686
+-ASFLAGS-.oS += -Wa,-mtune=i686
++ASFLAGS-.oSTATIC += -Wa,-mtune=i686
+ endif
+diff -urN a/sysdeps/ieee754/ldbl-opt/Makefile b/sysdeps/ieee754/ldbl-opt/Makefile
+--- a/sysdeps/ieee754/ldbl-opt/Makefile	2014-04-26 21:47:07.816568400 +0100
++++ b/sysdeps/ieee754/ldbl-opt/Makefile	2014-04-26 21:47:34.867115600 +0100
+@@ -44,7 +44,7 @@
+ libnldbl-routines = $(libnldbl-calls:%=nldbl-%)
+ libnldbl-inhibit-o = $(object-suffixes)
+ libnldbl-static-only-routines = $(libnldbl-routines)
+-extra-objs += $(addsuffix .oS, $(libnldbl-routines))
++extra-objs += $(addsuffix .oSTATIC, $(libnldbl-routines))
+ 
+ CFLAGS-nldbl-acos.c = -fno-builtin-acosl
+ CFLAGS-nldbl-acosh.c = -fno-builtin-acoshl
+diff -urN a/sysdeps/sparc/sparc32/sparcv9/Makefile b/sysdeps/sparc/sparc32/sparcv9/Makefile
+--- a/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-04-26 21:47:08.578612000 +0100
++++ b/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-04-26 21:47:34.868115600 +0100
+@@ -10,11 +10,11 @@
+ ASFLAGS-.os += -Wa,-Av9d
+ ASFLAGS-.op += -Wa,-Av9d
+ ASFLAGS-.og += -Wa,-Av9d
+-ASFLAGS-.oS += -Wa,-Av9d
++ASFLAGS-.oSTATIC += -Wa,-Av9d
+ else
+ ASFLAGS-.o += -Wa,-Av9a
+ ASFLAGS-.os += -Wa,-Av9a
+ ASFLAGS-.op += -Wa,-Av9a
+ ASFLAGS-.og += -Wa,-Av9a
+-ASFLAGS-.oS += -Wa,-Av9a
++ASFLAGS-.oSTATIC += -Wa,-Av9a
+ endif
+diff -urN a/sysdeps/sparc/sparc64/Makefile b/sysdeps/sparc/sparc64/Makefile
+--- a/sysdeps/sparc/sparc64/Makefile	2014-04-26 21:47:09.202647600 +0100
++++ b/sysdeps/sparc/sparc64/Makefile	2014-04-26 21:47:34.870115700 +0100
+@@ -12,5 +12,5 @@
+ ASFLAGS-.os += -Wa,-Av9d
+ ASFLAGS-.op += -Wa,-Av9d
+ ASFLAGS-.og += -Wa,-Av9d
+-ASFLAGS-.oS += -Wa,-Av9d
++ASFLAGS-.oSTATIC += -Wa,-Av9d
+ endif
diff --git a/patches/glibc/2.19/250-MSYS-Hack-force-ln-s.patch b/patches/glibc/2.19/250-MSYS-Hack-force-ln-s.patch
new file mode 100644
index 0000000..3329a03
--- /dev/null
+++ b/patches/glibc/2.19/250-MSYS-Hack-force-ln-s.patch
@@ -0,0 +1,39 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-04-26 21:48:09.994124700 +0100
++++ b/configure	2014-04-26 21:48:40.261855900 +0100
+@@ -4475,6 +4475,16 @@
+ $as_echo "no, using $LN_S" >&6; }
+ fi
+ 
++# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
++# eglibc, whereas cp -r doesn't.
++case "$build_os" in
++*mingw*)
++  as_ln_s='ln -s'
++  LN_S=$as_ln_s
++  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&5
++$as_echo "$as_me: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&2;}
++  ;;
++esac
+ 
+ # Was a --with-binutils option given?
+ if test -n "$path_binutils"; then
+diff -urN a/configure.ac b/configure.ac
+--- a/configure.ac	2014-04-26 21:48:09.995124800 +0100
++++ b/configure.ac	2014-04-26 21:48:40.267856300 +0100
+@@ -972,6 +972,15 @@
+   INSTALL='\$(..)./scripts/install-sh -c'
+ fi
+ AC_PROG_LN_S
++# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
++# eglibc, whereas cp -r doesn't.
++case "$build_os" in
++*mingw*)
++  as_ln_s='ln -s'
++  LN_S=$as_ln_s
++  AC_MSG_WARN(Hacked as_ln_s and LN_S to 'ln -s' for MSYS2)
++  ;;
++esac
+ 
+ LIBC_PROG_BINUTILS
+ 
-- 
2.0.1


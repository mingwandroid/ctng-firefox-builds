From 0080c7936fdebca87526272f806a49b4a5d86a67 Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Sun, 8 Dec 2013 19:37:31 +0000
Subject: [PATCH 12/13] Add gettext and libiconv as a companion lib

.. it's needed for the RPC stuff in {e}glibc.
---
 config/companion_libs.in                           |  27 +++++
 config/companion_libs/gettext.in                   |  19 ++++
 config/companion_libs/libiconv.in                  |  19 ++++
 config/libc/eglibc.in                              |   1 +
 config/libc/glibc.in                               |   3 +
 ...ix-linker-error-redefinition-of-vasprintf.patch |  31 ++++++
 ...ix-linker-error-redefinition-of-vasprintf.patch |  31 ++++++
 scripts/build/companion_libs/310-openssl.sh        |   4 +-
 scripts/build/companion_libs/320-libiconv.sh       |  95 +++++++++++++++++
 scripts/build/companion_libs/330-gettext.sh        | 116 +++++++++++++++++++++
 10 files changed, 344 insertions(+), 2 deletions(-)
 create mode 100644 config/companion_libs/gettext.in
 create mode 100644 config/companion_libs/libiconv.in
 create mode 100644 patches/gettext/0.18.2/110-Fix-linker-error-redefinition-of-vasprintf.patch
 create mode 100644 patches/gettext/0.18.3.1/110-Fix-linker-error-redefinition-of-vasprintf.patch
 create mode 100644 scripts/build/companion_libs/320-libiconv.sh
 create mode 100644 scripts/build/companion_libs/330-gettext.sh

diff --git a/config/companion_libs.in b/config/companion_libs.in
index db1c600..83d9f14 100644
--- a/config/companion_libs.in
+++ b/config/companion_libs.in
@@ -57,6 +57,17 @@ config OPENSSL_NEEDED
     select OPENSSL
     select COMPLIBS_NEEDED
 
+config LIBICONV_NEEDED
+    bool
+    select LIBICONV
+    select COMPLIBS_NEEDED
+
+config GETTEXT_NEEDED
+    bool
+    select GETTEXT
+    select LIBICONV_NEEDED
+    select COMPLIBS_NEEDED
+
 config LIBUUID_NEEDED
     bool
     select LIBUUID
@@ -110,6 +121,14 @@ config OPENSSL
     bool
     select COMPLIBS
 
+config LIBICONV
+    bool
+    select COMPLIBS
+
+config GETTEXT
+    bool
+    select COMPLIBS
+
 config LIBUUID
     bool
     select COMPLIBS
@@ -146,6 +165,14 @@ if OPENSSL
 source "config/companion_libs/openssl.in"
 endif
 
+if LIBICONV
+source "config/companion_libs/libiconv.in"
+endif
+
+if GETTEXT
+source "config/companion_libs/gettext.in"
+endif
+
 if LLVM
 source "config/companion_libs/llvm.in"
 endif
diff --git a/config/companion_libs/gettext.in b/config/companion_libs/gettext.in
new file mode 100644
index 0000000..e600b66
--- /dev/null
+++ b/config/companion_libs/gettext.in
@@ -0,0 +1,19 @@
+# gettext options
+
+choice
+    bool
+    prompt "gettext version"
+# Don't remove next line
+# CT_INSERT_VERSION_BELOW
+
+config GETTEXT_V_0_18_3_1
+    bool
+    prompt "0.18.3.1"
+
+endchoice
+
+config GETTEXT_VERSION
+    string
+# Don't remove next line
+# CT_INSERT_VERSION_STRING_BELOW
+    default "0.18.3.1" if GETTEXT_V_0_18_3_1
diff --git a/config/companion_libs/libiconv.in b/config/companion_libs/libiconv.in
new file mode 100644
index 0000000..361d34e
--- /dev/null
+++ b/config/companion_libs/libiconv.in
@@ -0,0 +1,19 @@
+# libiconv options
+
+choice
+    bool
+    prompt "libiconv version"
+# Don't remove next line
+# CT_INSERT_VERSION_BELOW
+
+config LIBICONV_V_1_14
+    bool
+    prompt "1.14"
+
+endchoice
+
+config LIBICONV_VERSION
+    string
+# Don't remove next line
+# CT_INSERT_VERSION_STRING_BELOW
+    default "1.14" if LIBICONV_V_1_14
diff --git a/config/libc/eglibc.in b/config/libc/eglibc.in
index ea6d7bf..6690dd4 100644
--- a/config/libc/eglibc.in
+++ b/config/libc/eglibc.in
@@ -5,6 +5,7 @@
 ## select LIBC_SUPPORT_NPTL
 ## select LIBC_SUPPORT_LINUXTHREADS
 ## select CC_CORE_PASSES_NEEDED
+## select GETTEXT_NEEDED
 ##
 ## help EGLIBC (Embedded GLIBC) is a variant of the standard GNU GLIBC
 ## help that is designed to work well on embedded systems.  EGLIBC strives
diff --git a/config/libc/glibc.in b/config/libc/glibc.in
index 3fe7522..82aa056 100644
--- a/config/libc/glibc.in
+++ b/config/libc/glibc.in
@@ -4,6 +4,7 @@
 ##
 ## select LIBC_SUPPORT_NPTL
 ## select CC_CORE_PASSES_NEEDED
+## select GETTEXT_NEEDED
 ##
 ## help The de-facto standard for Linux distributions.
 ## help Feature-rich, but large...  Most usefull for desktop-like systems.
@@ -103,3 +104,5 @@ config LIBC_VERSION
     default "2.10.1" if LIBC_GLIBC_V_2_10_1
     default "2.9" if LIBC_GLIBC_V_2_9
     default "2.8" if LIBC_GLIBC_V_2_8
+    # Test for now!
+    select OPENSSL_NEEDED
diff --git a/patches/gettext/0.18.2/110-Fix-linker-error-redefinition-of-vasprintf.patch b/patches/gettext/0.18.2/110-Fix-linker-error-redefinition-of-vasprintf.patch
new file mode 100644
index 0000000..a5287b3
--- /dev/null
+++ b/patches/gettext/0.18.2/110-Fix-linker-error-redefinition-of-vasprintf.patch
@@ -0,0 +1,31 @@
+From a76649dae62768d0af7017b3fc0ca5f891588c78 Mon Sep 17 00:00:00 2001
+From: Andoni Morales Alastruey <ylatuya@gmail.com>
+Date: Wed, 29 Feb 2012 10:44:43 +0100
+Subject: [PATCH] Fix linker error: redefinition of vasprintf
+
+This might not be the best patch, but it works for us
+The link error was:
+.libs/autosprintf.o:autosprintf.cc:(.text$vasprintf[_vasprintf]+0x0): multiple definition of `_vasprintf'
+.libs/lib-asprintf.o:lib-asprintf.c:(.text+0x4621): first defined here
+---
+ gettext-runtime/libasprintf/autosprintf.cc | 2 ++
+ 1 file changed, 2 insertions(+)
+
+diff --git a/gettext-runtime/libasprintf/autosprintf.cc b/gettext-runtime/libasprintf/autosprintf.cc
+index ca318f7..2526210 100644
+--- a/gettext-runtime/libasprintf/autosprintf.cc
++++ b/gettext-runtime/libasprintf/autosprintf.cc
+@@ -21,8 +21,10 @@
+    This must come before <config.h> because <config.h> may include
+    <features.h>, and once <features.h> has been included, it's too late.  */
+ #ifndef _GNU_SOURCE
++#ifndef _WIN32
+ # define _GNU_SOURCE    1
+ #endif
++#endif
+ 
+ /* Specification.  */
+ #include "autosprintf.h"
+-- 
+1.8.4
+
diff --git a/patches/gettext/0.18.3.1/110-Fix-linker-error-redefinition-of-vasprintf.patch b/patches/gettext/0.18.3.1/110-Fix-linker-error-redefinition-of-vasprintf.patch
new file mode 100644
index 0000000..a5287b3
--- /dev/null
+++ b/patches/gettext/0.18.3.1/110-Fix-linker-error-redefinition-of-vasprintf.patch
@@ -0,0 +1,31 @@
+From a76649dae62768d0af7017b3fc0ca5f891588c78 Mon Sep 17 00:00:00 2001
+From: Andoni Morales Alastruey <ylatuya@gmail.com>
+Date: Wed, 29 Feb 2012 10:44:43 +0100
+Subject: [PATCH] Fix linker error: redefinition of vasprintf
+
+This might not be the best patch, but it works for us
+The link error was:
+.libs/autosprintf.o:autosprintf.cc:(.text$vasprintf[_vasprintf]+0x0): multiple definition of `_vasprintf'
+.libs/lib-asprintf.o:lib-asprintf.c:(.text+0x4621): first defined here
+---
+ gettext-runtime/libasprintf/autosprintf.cc | 2 ++
+ 1 file changed, 2 insertions(+)
+
+diff --git a/gettext-runtime/libasprintf/autosprintf.cc b/gettext-runtime/libasprintf/autosprintf.cc
+index ca318f7..2526210 100644
+--- a/gettext-runtime/libasprintf/autosprintf.cc
++++ b/gettext-runtime/libasprintf/autosprintf.cc
+@@ -21,8 +21,10 @@
+    This must come before <config.h> because <config.h> may include
+    <features.h>, and once <features.h> has been included, it's too late.  */
+ #ifndef _GNU_SOURCE
++#ifndef _WIN32
+ # define _GNU_SOURCE    1
+ #endif
++#endif
+ 
+ /* Specification.  */
+ #include "autosprintf.h"
+-- 
+1.8.4
+
diff --git a/scripts/build/companion_libs/310-openssl.sh b/scripts/build/companion_libs/310-openssl.sh
index ee79491..240769b 100644
--- a/scripts/build/companion_libs/310-openssl.sh
+++ b/scripts/build/companion_libs/310-openssl.sh
@@ -30,8 +30,8 @@ do_openssl_for_build() {
 
     openssl_opts+=( "host=${CT_BUILD}" )
     openssl_opts+=( "prefix=${CT_BUILDTOOLS_PREFIX_DIR}" )
-    libuuid_opts+=( "cflags=${CT_CFLAGS_FOR_BUILD}" )
-    libuuid_opts+=( "ldflags=${CT_LDFLAGS_FOR_BUILD}" )
+    openssl_opts+=( "cflags=${CT_CFLAGS_FOR_BUILD}" )
+    openssl_opts+=( "ldflags=${CT_LDFLAGS_FOR_BUILD}" )
     do_openssl_backend "${gmp_opts[@]}"
 
     CT_Popd
diff --git a/scripts/build/companion_libs/320-libiconv.sh b/scripts/build/companion_libs/320-libiconv.sh
new file mode 100644
index 0000000..60cb78f
--- /dev/null
+++ b/scripts/build/companion_libs/320-libiconv.sh
@@ -0,0 +1,95 @@
+# Build script for libiconv
+
+do_libiconv_get() { :; }
+do_libiconv_extract() { :; }
+do_libiconv_for_build() { :; }
+do_libiconv_for_host() { :; }
+
+if [ "${CT_LIBICONV}" = "y" ]; then
+
+do_libiconv_get() {
+    CT_GetFile "libiconv-${CT_LIBICONV_VERSION}" \
+               http://ftp.gnu.org/pub/gnu/libiconv/
+}
+
+do_libiconv_extract() {
+    CT_Extract "libiconv-${CT_LIBICONV_VERSION}"
+    CT_Patch "libiconv" "${CT_LIBICONV_VERSION}"
+}
+
+# Build libiconv for running on build
+do_libiconv_for_build() {
+    local -a libiconv_opts
+
+    CT_DoStep INFO "Installing libiconv for build"
+    CT_mkdir_pushd "${CT_BUILD_DIR}/build-libiconv-build-${CT_BUILD}"
+
+    libiconv_opts+=( "host=${CT_BUILD}" )
+    libiconv_opts+=( "prefix=${CT_BUILDTOOLS_PREFIX_DIR}" )
+    libiconv_opts+=( "cflags=${CT_CFLAGS_FOR_BUILD}" )
+    libiconv_opts+=( "ldflags=${CT_LDFLAGS_FOR_BUILD}" )
+    do_libiconv_backend "${libiconv_opts[@]}"
+
+    CT_Popd
+    CT_EndStep
+}
+
+# Build libiconv for running on host
+do_libiconv_for_host() {
+    local -a libiconv_opts
+
+    CT_DoStep INFO "Installing libiconv for host"
+    CT_mkdir_pushd "${CT_BUILD_DIR}/build-libiconv-host-${CT_HOST}"
+
+    libiconv_opts+=( "host=${CT_HOST}" )
+    libiconv_opts+=( "prefix=${CT_HOST_COMPLIBS_DIR}" )
+    libiconv_opts+=( "cflags=${CT_CFLAGS_FOR_HOST}" )
+    libiconv_opts+=( "ldflags=${CT_LDFLAGS_FOR_HOST}" )
+    libiconv_opts+=( "static_build=${CT_STATIC_TOOLCHAIN}" )
+    do_libiconv_backend "${libiconv_opts[@]}"
+
+    CT_Popd
+    CT_EndStep
+}
+
+# Build libiconv
+#     Parameter     : description               : type      : default
+#     host          : machine to run on         : tuple     : (none)
+#     prefix        : prefix to install into    : dir       : (none)
+#     static_build  : build statcially          : bool      : no
+#     cflags        : host cflags to use        : string    : (empty)
+#     ldflags       : host ldflags to use       : string    : (empty)
+do_libiconv_backend() {
+    local host
+    local prefix
+    local static_build
+    local cflags
+    local ldflags
+    local arg
+    local -a extra_config
+
+    for arg in "$@"; do
+        eval "${arg// /\\ }"
+    done
+
+    CT_DoLog EXTRA "Configuring libiconv"
+
+    CT_DoExecLog ALL cp -aT "${CT_SRC_DIR}/libiconv-${CT_LIBICONV_VERSION}" "."
+
+    CT_DoExecLog CFG                                          \
+    CFLAGS="${cflags}"                                        \
+    LDFLAGS="${ldflags}"                                      \
+    "${CT_SRC_DIR}/libiconv-${CT_LIBICONV_VERSION}/configure" \
+        --build=${CT_BUILD}                                   \
+        --host="${host}"                                      \
+        --prefix="${prefix}"                                  \
+        "${extra_config[@]}"                                  \
+ 
+    CT_DoLog EXTRA "Building libiconv"
+    CT_DoExecLog ALL make CC="${CT_HOST}-gcc ${cflags}"
+
+    CT_DoLog EXTRA "Installing libiconv"
+    CT_DoExecLog ALL make install CC="${CT_HOST}-gcc ${cflags}"
+}
+
+fi
diff --git a/scripts/build/companion_libs/330-gettext.sh b/scripts/build/companion_libs/330-gettext.sh
new file mode 100644
index 0000000..2ec2c5f
--- /dev/null
+++ b/scripts/build/companion_libs/330-gettext.sh
@@ -0,0 +1,116 @@
+# Build script for gettext
+
+do_gettext_get() { :; }
+do_gettext_extract() { :; }
+do_gettext_for_build() { :; }
+do_gettext_for_host() { :; }
+
+if [ "${CT_GETTEXT}" = "y" ]; then
+
+do_gettext_get() {
+    CT_GetFile "gettext-${CT_GETTEXT_VERSION}" \
+               http://ftp.gnu.org/pub/gnu/gettext/
+}
+
+do_gettext_extract() {
+    CT_Extract "gettext-${CT_GETTEXT_VERSION}"
+    CT_Patch "gettext" "${CT_GETTEXT_VERSION}"
+}
+
+# Build gettext for running on build
+do_gettext_for_build() {
+    local -a gettext_opts
+
+    CT_DoStep INFO "Installing gettext for build"
+    CT_mkdir_pushd "${CT_BUILD_DIR}/build-gettext-build-${CT_BUILD}"
+
+    gettext_opts+=( "host=${CT_BUILD}" )
+    gettext_opts+=( "prefix=${CT_BUILDTOOLS_PREFIX_DIR}" )
+    gettext_opts+=( "cflags=${CT_CFLAGS_FOR_BUILD}" )
+    gettext_opts+=( "ldflags=${CT_LDFLAGS_FOR_BUILD}" )
+    do_gettext_backend "${gettext_opts[@]}"
+
+    CT_Popd
+    CT_EndStep
+}
+
+# Build gettext for running on host
+do_gettext_for_host() {
+    local -a gettext_opts
+
+    CT_DoStep INFO "Installing gettext for host"
+    CT_mkdir_pushd "${CT_BUILD_DIR}/build-gettext-host-${CT_HOST}"
+
+    gettext_opts+=( "host=${CT_HOST}" )
+    gettext_opts+=( "prefix=${CT_HOST_COMPLIBS_DIR}" )
+    gettext_opts+=( "cflags=${CT_CFLAGS_FOR_HOST}" )
+    gettext_opts+=( "ldflags=${CT_LDFLAGS_FOR_HOST}" )
+    gettext_opts+=( "static_build=${CT_STATIC_TOOLCHAIN}" )
+    do_gettext_backend "${gettext_opts[@]}"
+
+    CT_Popd
+    CT_EndStep
+}
+
+# Build gettext
+#     Parameter     : description               : type      : default
+#     host          : machine to run on         : tuple     : (none)
+#     prefix        : prefix to install into    : dir       : (none)
+#     static_build  : build statcially          : bool      : no
+#     cflags        : host cflags to use        : string    : (empty)
+#     ldflags       : host ldflags to use       : string    : (empty)
+do_gettext_backend() {
+    local host
+    local prefix
+    local static_build
+    local cflags
+    local ldflags
+    local arg
+    local -a extra_config
+
+    for arg in "$@"; do
+        eval "${arg// /\\ }"
+    done
+
+    CT_DoLog EXTRA "Configuring gettext"
+
+    CT_DoExecLog ALL cp -aT "${CT_SRC_DIR}/gettext-${CT_GETTEXT_VERSION}" "."
+
+    # A bit ugly. D__USE_MINGW_ANSI_STDIO=1 has its own {v}asprintf functions
+    # but gettext configure doesn't see this flag when it checks for that. An
+    # alternative may be to use CC="${host}-gcc ${cflags}" but that didn't
+    # work.
+    case "${host}" in
+        *mingw*)
+            case "${cflags}" in
+                *D__USE_MINGW_ANSI_STDIO=1*)
+                    extra_config+=( --disable-libasprintf )
+                    ;;
+            esac
+        ;;
+    esac
+
+    CT_DoExecLog CFG                                        \
+    CFLAGS="${cflags}"                                      \
+    LDFLAGS="${ldflags}"                                    \
+    "${CT_SRC_DIR}/gettext-${CT_GETTEXT_VERSION}/configure" \
+        --build=${CT_BUILD}                                 \
+        --host="${host}"                                    \
+        --prefix="${prefix}"                                \
+        --disable-java                                      \
+        --disable-native-java                               \
+        --disable-csharp                                    \
+        --enable-static                                     \
+        --enable-threads=win32                              \
+        --without-emacs                                     \
+        --disable-openmp                                    \
+        "${extra_config[@]}"
+ 
+    CT_DoLog EXTRA "Building gettext"
+    CT_DoExecLog ALL make
+
+    CT_DoLog EXTRA "Installing gettext"
+    CT_DoExecLog ALL make install
+}
+
+fi
-- 
1.8.5.1


From 103e2e887eb031cb8d222083a6e97a4ee13a3d9e Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Thu, 30 Jan 2014 00:47:27 +0000
Subject: [PATCH 31/36] Add glibc 2.16 patches

---
 patches/glibc/2.16.0/100-make-4.patch              |  24 ++
 ...re-Default-to-CPP-CC--E-unless-overridden.patch | 242 +++++++++++++++++++++
 2 files changed, 266 insertions(+)
 create mode 100644 patches/glibc/2.16.0/100-make-4.patch
 create mode 100644 patches/glibc/2.16.0/110-configure-Default-to-CPP-CC--E-unless-overridden.patch

diff --git a/patches/glibc/2.16.0/100-make-4.patch b/patches/glibc/2.16.0/100-make-4.patch
new file mode 100644
index 0000000..bf6a547
--- /dev/null
+++ b/patches/glibc/2.16.0/100-make-4.patch
@@ -0,0 +1,24 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-01-30 00:29:11.327126414 +0000
++++ b/configure	2014-01-30 00:45:45.455833677 +0000
+@@ -4845,7 +4845,7 @@
+   ac_prog_version=`$MAKE --version 2>&1 | sed -n 's/^.*GNU Make[^0-9]*\([0-9][0-9.]*\).*$/\1/p'`
+   case $ac_prog_version in
+     '') ac_prog_version="v. ?.??, bad"; ac_verc_fail=yes;;
+-    3.79* | 3.[89]*)
++    3.79* | 3.[89]* | 4.*)
+        ac_prog_version="$ac_prog_version, ok"; ac_verc_fail=no;;
+     *) ac_prog_version="$ac_prog_version, bad"; ac_verc_fail=yes;;
+ 
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2012-06-30 20:12:34.000000000 +0100
++++ b/configure.in	2014-01-30 00:45:45.455833677 +0000
+@@ -940,7 +940,7 @@
+   critic_missing="$critic_missing gcc")
+ AC_CHECK_PROG_VER(MAKE, gnumake gmake make, --version,
+   [GNU Make[^0-9]*\([0-9][0-9.]*\)],
+-  [3.79* | 3.[89]*], critic_missing="$critic_missing make")
++  [3.79* | 3.[89]* | 4.*], critic_missing="$critic_missing make")
+ 
+ AC_CHECK_PROG_VER(MSGFMT, gnumsgfmt gmsgfmt msgfmt, --version,
+   [GNU gettext.* \([0-9]*\.[0-9.]*\)],
diff --git a/patches/glibc/2.16.0/110-configure-Default-to-CPP-CC--E-unless-overridden.patch b/patches/glibc/2.16.0/110-configure-Default-to-CPP-CC--E-unless-overridden.patch
new file mode 100644
index 0000000..ab9e99b
--- /dev/null
+++ b/patches/glibc/2.16.0/110-configure-Default-to-CPP-CC--E-unless-overridden.patch
@@ -0,0 +1,242 @@
+diff -urN a/ChangeLog b/ChangeLog
+--- a/ChangeLog	2014-01-30 01:29:35.376504709 +0000
++++ b/ChangeLog	2014-01-30 01:30:29.690677901 +0000
+@@ -1,3 +1,8 @@
++2013-01-25  Thomas Schwinge  <thomas@codesourcery.com>
++
++        * configure.in (AC_PROG_CPP): New definition.
++        * configure: Regenerate.
++
+ 2012-06-30  Carlos O'Donell  <carlos_odonell@mentor.com>
+ 
+ 	* NEWS: Update copyright. Remove last-updated date.
+diff -urN a/configure b/configure
+--- a/configure	2014-01-30 01:29:35.723176691 +0000
++++ b/configure	2014-01-30 01:29:59.923550901 +0000
+@@ -1554,43 +1554,6 @@
+ 
+ } # ac_fn_c_try_compile
+ 
+-# ac_fn_c_try_cpp LINENO
+-# ----------------------
+-# Try to preprocess conftest.$ac_ext, and return whether this succeeded.
+-ac_fn_c_try_cpp ()
+-{
+-  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+-  if { { ac_try="$ac_cpp conftest.$ac_ext"
+-case "(($ac_try" in
+-  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+-  *) ac_try_echo=$ac_try;;
+-esac
+-eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+-$as_echo "$ac_try_echo"; } >&5
+-  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.err
+-  ac_status=$?
+-  if test -s conftest.err; then
+-    grep -v '^ *+' conftest.err >conftest.er1
+-    cat conftest.er1 >&5
+-    mv -f conftest.er1 conftest.err
+-  fi
+-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+-  test $ac_status = 0; } > conftest.i && {
+-	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+-	 test ! -s conftest.err
+-       }; then :
+-  ac_retval=0
+-else
+-  $as_echo "$as_me: failed program was:" >&5
+-sed 's/^/| /' conftest.$ac_ext >&5
+-
+-    ac_retval=1
+-fi
+-  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
+-  as_fn_set_status $ac_retval
+-
+-} # ac_fn_c_try_cpp
+-
+ # ac_fn_cxx_try_compile LINENO
+ # ----------------------------
+ # Try to compile conftest.$ac_ext, and return whether this succeeded.
+@@ -2282,6 +2245,11 @@
+ # Glibc should not depend on any header files
+ 
+ 
++# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
++# here to work around the Autoconf issue discussed in
++# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
++# AC_PROG_CPP
++
+ 
+ 
+ subdirs="$subdirs "
+@@ -2996,142 +2964,13 @@
+ 
+ fi
+ 
+-ac_ext=c
+-ac_cpp='$CPP $CPPFLAGS'
+-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+-ac_compiler_gnu=$ac_cv_c_compiler_gnu
+-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor" >&5
+-$as_echo_n "checking how to run the C preprocessor... " >&6; }
+ # On Suns, sometimes $CPP names a directory.
+ if test -n "$CPP" && test -d "$CPP"; then
+   CPP=
+ fi
+ if test -z "$CPP"; then
+-  if ${ac_cv_prog_CPP+:} false; then :
+-  $as_echo_n "(cached) " >&6
+-else
+-      # Double quotes because CPP needs to be expanded
+-    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
+-    do
+-      ac_preproc_ok=false
+-for ac_c_preproc_warn_flag in '' yes
+-do
+-  # Use a header file that comes with gcc, so configuring glibc
+-  # with a fresh cross-compiler works.
+-  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+-  # <limits.h> exists even on freestanding compilers.
+-  # On the NeXT, cc -E runs the code through the compiler's parser,
+-  # not just through cpp. "Syntax error" is here to catch this case.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#ifdef __STDC__
+-# include <limits.h>
+-#else
+-# include <assert.h>
+-#endif
+-		     Syntax error
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-
+-else
+-  # Broken: fails on valid input.
+-continue
++  CPP="$CC -E"
+ fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-  # OK, works on sane cases.  Now check whether nonexistent headers
+-  # can be detected and how.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#include <ac_nonexistent.h>
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-  # Broken: success on invalid input.
+-continue
+-else
+-  # Passes both tests.
+-ac_preproc_ok=:
+-break
+-fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-done
+-# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+-rm -f conftest.i conftest.err conftest.$ac_ext
+-if $ac_preproc_ok; then :
+-  break
+-fi
+-
+-    done
+-    ac_cv_prog_CPP=$CPP
+-
+-fi
+-  CPP=$ac_cv_prog_CPP
+-else
+-  ac_cv_prog_CPP=$CPP
+-fi
+-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $CPP" >&5
+-$as_echo "$CPP" >&6; }
+-ac_preproc_ok=false
+-for ac_c_preproc_warn_flag in '' yes
+-do
+-  # Use a header file that comes with gcc, so configuring glibc
+-  # with a fresh cross-compiler works.
+-  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+-  # <limits.h> exists even on freestanding compilers.
+-  # On the NeXT, cc -E runs the code through the compiler's parser,
+-  # not just through cpp. "Syntax error" is here to catch this case.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#ifdef __STDC__
+-# include <limits.h>
+-#else
+-# include <assert.h>
+-#endif
+-		     Syntax error
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-
+-else
+-  # Broken: fails on valid input.
+-continue
+-fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-  # OK, works on sane cases.  Now check whether nonexistent headers
+-  # can be detected and how.
+-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-#include <ac_nonexistent.h>
+-_ACEOF
+-if ac_fn_c_try_cpp "$LINENO"; then :
+-  # Broken: success on invalid input.
+-continue
+-else
+-  # Passes both tests.
+-ac_preproc_ok=:
+-break
+-fi
+-rm -f conftest.err conftest.i conftest.$ac_ext
+-
+-done
+-# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+-rm -f conftest.i conftest.err conftest.$ac_ext
+-if $ac_preproc_ok; then :
+-
+-else
+-  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+-$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+-as_fn_error $? "C preprocessor \"$CPP\" fails sanity check
+-See \`config.log' for more details" "$LINENO" 5; }
+-fi
+-
+-ac_ext=c
+-ac_cpp='$CPP $CPPFLAGS'
+-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+-ac_compiler_gnu=$ac_cv_c_compiler_gnu
+ 
+ # We need the C++ compiler only for testing.
+ ac_ext=cpp
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-01-30 01:29:35.723176691 +0000
++++ b/configure.in	2014-01-30 01:29:59.923550901 +0000
+@@ -10,6 +10,23 @@
+   [m4_divert_text([DEFAULTS],
+     [ac_includes_default='/* none */'])])
+ 
++# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
++# here to work around the Autoconf issue discussed in
++# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
++AC_DEFUN([AC_PROG_CPP],
++[AC_REQUIRE([AC_PROG_CC])dnl
++AC_ARG_VAR([CPP],      [C preprocessor])dnl
++_AC_ARG_VAR_CPPFLAGS()dnl
++# On Suns, sometimes $CPP names a directory.
++if test -n "$CPP" && test -d "$CPP"; then
++  CPP=
++fi
++if test -z "$CPP"; then
++  CPP="$CC -E"
++fi
++AC_SUBST(CPP)dnl
++])# AC_PROG_CPP
++
+ dnl This is here so we can set $subdirs directly based on configure fragments.
+ AC_CONFIG_SUBDIRS()
+ 
-- 
1.9.2


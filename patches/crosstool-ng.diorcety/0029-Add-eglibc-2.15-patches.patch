From c9b22673f2057abb3827f7a399d22cb0e9b5228b Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Tue, 18 Feb 2014 21:26:55 +0000
Subject: [PATCH 29/29] Add eglibc 2.15 patches

---
 patches/eglibc/2_15/110-make-4.patch               |  24 ++
 ...re-Default-to-CPP-CC--E-unless-overridden.patch | 318 +++++++++++++++++++++
 .../120-Fix-crossrpc-to-build-on-non-Linux.patch   | 247 ++++++++++++++++
 .../2_15/130-MSYS-Hack-elf-librtld.mk-gen.patch    |  37 +++
 ...ame-oS-to-oSTATIC-for-case-insensitive-fs.patch | 182 ++++++++++++
 patches/eglibc/2_15/150-MSYS-Hack-force-ln-s.patch |  39 +++
 .../160-Remove-test-for-__builtin_expect.patch     |  86 ++++++
 7 files changed, 933 insertions(+)
 create mode 100644 patches/eglibc/2_15/110-make-4.patch
 create mode 100644 patches/eglibc/2_15/115-configure-Default-to-CPP-CC--E-unless-overridden.patch
 create mode 100644 patches/eglibc/2_15/120-Fix-crossrpc-to-build-on-non-Linux.patch
 create mode 100644 patches/eglibc/2_15/130-MSYS-Hack-elf-librtld.mk-gen.patch
 create mode 100644 patches/eglibc/2_15/140-Rename-oS-to-oSTATIC-for-case-insensitive-fs.patch
 create mode 100644 patches/eglibc/2_15/150-MSYS-Hack-force-ln-s.patch
 create mode 100644 patches/eglibc/2_15/160-Remove-test-for-__builtin_expect.patch

diff --git a/patches/eglibc/2_15/110-make-4.patch b/patches/eglibc/2_15/110-make-4.patch
new file mode 100644
index 0000000..7183b85
--- /dev/null
+++ b/patches/eglibc/2_15/110-make-4.patch
@@ -0,0 +1,24 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-02-07 21:13:28.000000000 +0000
++++ b/configure	2014-02-18 19:57:33.343538466 +0000
+@@ -5246,7 +5246,7 @@
+   ac_prog_version=`$MAKE --version 2>&1 | sed -n 's/^.*GNU Make[^0-9]*\([0-9][0-9.]*\).*$/\1/p'`
+   case $ac_prog_version in
+     '') ac_prog_version="v. ?.??, bad"; ac_verc_fail=yes;;
+-    3.79* | 3.[89]*)
++    3.79* | 3.[89]* | 4.*)
+        ac_prog_version="$ac_prog_version, ok"; ac_verc_fail=no;;
+     *) ac_prog_version="$ac_prog_version, bad"; ac_verc_fail=yes;;
+ 
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-07 21:13:28.000000000 +0000
++++ b/configure.in	2014-02-18 19:57:33.346871836 +0000
+@@ -1048,7 +1048,7 @@
+   critic_missing="$critic_missing gcc")
+ AC_CHECK_PROG_VER(MAKE, gnumake gmake make, --version,
+   [GNU Make[^0-9]*\([0-9][0-9.]*\)],
+-  [3.79* | 3.[89]*], critic_missing="$critic_missing make")
++  [3.79* | 3.[89]* | 4.*], critic_missing="$critic_missing make")
+ 
+ AC_CHECK_PROG_VER(MSGFMT, gnumsgfmt gmsgfmt msgfmt, --version,
+   [GNU gettext.* \([0-9]*\.[0-9.]*\)],
diff --git a/patches/eglibc/2_15/115-configure-Default-to-CPP-CC--E-unless-overridden.patch b/patches/eglibc/2_15/115-configure-Default-to-CPP-CC--E-unless-overridden.patch
new file mode 100644
index 0000000..da534be
--- /dev/null
+++ b/patches/eglibc/2_15/115-configure-Default-to-CPP-CC--E-unless-overridden.patch
@@ -0,0 +1,318 @@
+diff -urN a/ChangeLog b/ChangeLog
+--- a/ChangeLog	2014-02-18 19:58:01.703977043 +0000
++++ b/ChangeLog	2014-02-18 19:59:53.365703737 +0000
+@@ -1,3 +1,8 @@
++2013-01-25  Thomas Schwinge  <thomas@codesourcery.com>
++
++        * configure.in (AC_PROG_CPP): New definition.
++        * configure: Regenerate.
++
+ 2012-09-28  Andreas Schwab  <schwab@linux-m68k.org>
+ 
+ 	[BZ #6530]
+diff -urN a/configure b/configure
+--- a/configure	2014-02-18 19:58:01.663976423 +0000
++++ b/configure	2014-02-18 20:02:37.324906090 +0000
+@@ -2021,6 +2021,11 @@
+ 
+ 
+ 
++# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
++# here to work around the Autoconf issue discussed in
++# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
++# AC_PROG_CPP
++
+ 
+ 
+ subdirs="$subdirs "
+@@ -2898,242 +2903,14 @@
+ 
+ fi
+ 
+-ac_ext=c
+-ac_cpp='$CPP $CPPFLAGS'
+-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+-ac_compiler_gnu=$ac_cv_c_compiler_gnu
+-{ $as_echo "$as_me:$LINENO: checking how to run the C preprocessor" >&5
+-$as_echo_n "checking how to run the C preprocessor... " >&6; }
+ # On Suns, sometimes $CPP names a directory.
+ if test -n "$CPP" && test -d "$CPP"; then
+   CPP=
+ fi
+ if test -z "$CPP"; then
+-  if test "${ac_cv_prog_CPP+set}" = set; then
+-  $as_echo_n "(cached) " >&6
+-else
+-      # Double quotes because CPP needs to be expanded
+-    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
+-    do
+-      ac_preproc_ok=false
+-for ac_c_preproc_warn_flag in '' yes
+-do
+-  # Use a header file that comes with gcc, so configuring glibc
+-  # with a fresh cross-compiler works.
+-  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+-  # <limits.h> exists even on freestanding compilers.
+-  # On the NeXT, cc -E runs the code through the compiler's parser,
+-  # not just through cpp. "Syntax error" is here to catch this case.
+-  cat >conftest.$ac_ext <<_ACEOF
+-/* confdefs.h.  */
+-_ACEOF
+-cat confdefs.h >>conftest.$ac_ext
+-cat >>conftest.$ac_ext <<_ACEOF
+-/* end confdefs.h.  */
+-#ifdef __STDC__
+-# include <limits.h>
+-#else
+-# include <assert.h>
+-#endif
+-		     Syntax error
+-_ACEOF
+-if { (ac_try="$ac_cpp conftest.$ac_ext"
+-case "(($ac_try" in
+-  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+-  *) ac_try_echo=$ac_try;;
+-esac
+-eval ac_try_echo="\"\$as_me:$LINENO: $ac_try_echo\""
+-$as_echo "$ac_try_echo") >&5
+-  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
+-  ac_status=$?
+-  grep -v '^ *+' conftest.er1 >conftest.err
+-  rm -f conftest.er1
+-  cat conftest.err >&5
+-  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
+-  (exit $ac_status); } >/dev/null && {
+-	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+-	 test ! -s conftest.err
+-       }; then
+-  :
+-else
+-  $as_echo "$as_me: failed program was:" >&5
+-sed 's/^/| /' conftest.$ac_ext >&5
+-
+-  # Broken: fails on valid input.
+-continue
+-fi
+-
+-rm -f conftest.err conftest.$ac_ext
+-
+-  # OK, works on sane cases.  Now check whether nonexistent headers
+-  # can be detected and how.
+-  cat >conftest.$ac_ext <<_ACEOF
+-/* confdefs.h.  */
+-_ACEOF
+-cat confdefs.h >>conftest.$ac_ext
+-cat >>conftest.$ac_ext <<_ACEOF
+-/* end confdefs.h.  */
+-#include <ac_nonexistent.h>
+-_ACEOF
+-if { (ac_try="$ac_cpp conftest.$ac_ext"
+-case "(($ac_try" in
+-  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+-  *) ac_try_echo=$ac_try;;
+-esac
+-eval ac_try_echo="\"\$as_me:$LINENO: $ac_try_echo\""
+-$as_echo "$ac_try_echo") >&5
+-  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
+-  ac_status=$?
+-  grep -v '^ *+' conftest.er1 >conftest.err
+-  rm -f conftest.er1
+-  cat conftest.err >&5
+-  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
+-  (exit $ac_status); } >/dev/null && {
+-	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+-	 test ! -s conftest.err
+-       }; then
+-  # Broken: success on invalid input.
+-continue
+-else
+-  $as_echo "$as_me: failed program was:" >&5
+-sed 's/^/| /' conftest.$ac_ext >&5
+-
+-  # Passes both tests.
+-ac_preproc_ok=:
+-break
+-fi
+-
+-rm -f conftest.err conftest.$ac_ext
+-
+-done
+-# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+-rm -f conftest.err conftest.$ac_ext
+-if $ac_preproc_ok; then
+-  break
+-fi
+-
+-    done
+-    ac_cv_prog_CPP=$CPP
+-
+-fi
+-  CPP=$ac_cv_prog_CPP
+-else
+-  ac_cv_prog_CPP=$CPP
+-fi
+-{ $as_echo "$as_me:$LINENO: result: $CPP" >&5
+-$as_echo "$CPP" >&6; }
+-ac_preproc_ok=false
+-for ac_c_preproc_warn_flag in '' yes
+-do
+-  # Use a header file that comes with gcc, so configuring glibc
+-  # with a fresh cross-compiler works.
+-  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+-  # <limits.h> exists even on freestanding compilers.
+-  # On the NeXT, cc -E runs the code through the compiler's parser,
+-  # not just through cpp. "Syntax error" is here to catch this case.
+-  cat >conftest.$ac_ext <<_ACEOF
+-/* confdefs.h.  */
+-_ACEOF
+-cat confdefs.h >>conftest.$ac_ext
+-cat >>conftest.$ac_ext <<_ACEOF
+-/* end confdefs.h.  */
+-#ifdef __STDC__
+-# include <limits.h>
+-#else
+-# include <assert.h>
+-#endif
+-		     Syntax error
+-_ACEOF
+-if { (ac_try="$ac_cpp conftest.$ac_ext"
+-case "(($ac_try" in
+-  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+-  *) ac_try_echo=$ac_try;;
+-esac
+-eval ac_try_echo="\"\$as_me:$LINENO: $ac_try_echo\""
+-$as_echo "$ac_try_echo") >&5
+-  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
+-  ac_status=$?
+-  grep -v '^ *+' conftest.er1 >conftest.err
+-  rm -f conftest.er1
+-  cat conftest.err >&5
+-  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
+-  (exit $ac_status); } >/dev/null && {
+-	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+-	 test ! -s conftest.err
+-       }; then
+-  :
+-else
+-  $as_echo "$as_me: failed program was:" >&5
+-sed 's/^/| /' conftest.$ac_ext >&5
+-
+-  # Broken: fails on valid input.
+-continue
+-fi
+-
+-rm -f conftest.err conftest.$ac_ext
+-
+-  # OK, works on sane cases.  Now check whether nonexistent headers
+-  # can be detected and how.
+-  cat >conftest.$ac_ext <<_ACEOF
+-/* confdefs.h.  */
+-_ACEOF
+-cat confdefs.h >>conftest.$ac_ext
+-cat >>conftest.$ac_ext <<_ACEOF
+-/* end confdefs.h.  */
+-#include <ac_nonexistent.h>
+-_ACEOF
+-if { (ac_try="$ac_cpp conftest.$ac_ext"
+-case "(($ac_try" in
+-  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+-  *) ac_try_echo=$ac_try;;
+-esac
+-eval ac_try_echo="\"\$as_me:$LINENO: $ac_try_echo\""
+-$as_echo "$ac_try_echo") >&5
+-  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
+-  ac_status=$?
+-  grep -v '^ *+' conftest.er1 >conftest.err
+-  rm -f conftest.er1
+-  cat conftest.err >&5
+-  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
+-  (exit $ac_status); } >/dev/null && {
+-	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+-	 test ! -s conftest.err
+-       }; then
+-  # Broken: success on invalid input.
+-continue
+-else
+-  $as_echo "$as_me: failed program was:" >&5
+-sed 's/^/| /' conftest.$ac_ext >&5
+-
+-  # Passes both tests.
+-ac_preproc_ok=:
+-break
++  CPP="$CC -E"
+ fi
+ 
+-rm -f conftest.err conftest.$ac_ext
+-
+-done
+-# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+-rm -f conftest.err conftest.$ac_ext
+-if $ac_preproc_ok; then
+-  :
+-else
+-  { { $as_echo "$as_me:$LINENO: error: in \`$ac_pwd':" >&5
+-$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+-{ { $as_echo "$as_me:$LINENO: error: C preprocessor \"$CPP\" fails sanity check
+-See \`config.log' for more details." >&5
+-$as_echo "$as_me: error: C preprocessor \"$CPP\" fails sanity check
+-See \`config.log' for more details." >&2;}
+-   { (exit 1); exit 1; }; }; }
+-fi
+-
+-ac_ext=c
+-ac_cpp='$CPP $CPPFLAGS'
+-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+-ac_compiler_gnu=$ac_cv_c_compiler_gnu
+-
+ # We need the C++ compiler only for testing.
+ ac_ext=cpp
+ ac_cpp='$CXXCPP $CPPFLAGS'
+@@ -3980,7 +3757,7 @@
+ 
+ 
+ # Check whether --enable-obsolete-rpc was given.
+-if test "${enable_obsolete_rpc+set}" = set; then :
++if test "${enable_obsolete_rpc+set}" = set; then
+   enableval=$enable_obsolete_rpc; link_obsolete_rpc=$enableval
+ else
+   link_obsolete_rpc=no
+@@ -3989,7 +3766,9 @@
+ 
+ 
+ if test "$link_obsolete_rpc" = yes; then
+-  $as_echo "#define LINK_OBSOLETE_RPC 1" >>confdefs.h
++  cat >>confdefs.h <<\_ACEOF
++#define LINK_OBSOLETE_RPC 1
++_ACEOF
+ 
+ fi
+ 
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-18 19:58:01.663976423 +0000
++++ b/configure.in	2014-02-18 19:58:09.730767821 +0000
+@@ -5,6 +5,23 @@
+ AC_CONFIG_HEADERS([config.h])
+ AC_CONFIG_AUX_DIR([scripts])
+ 
++# We require GCC, and by default use its preprocessor.  Override AC_PROG_CPP
++# here to work around the Autoconf issue discussed in
++# <http://sourceware.org/ml/libc-alpha/2013-01/msg00721.html>.
++AC_DEFUN([AC_PROG_CPP],
++[AC_REQUIRE([AC_PROG_CC])dnl
++AC_ARG_VAR([CPP],      [C preprocessor])dnl
++_AC_ARG_VAR_CPPFLAGS()dnl
++# On Suns, sometimes $CPP names a directory.
++if test -n "$CPP" && test -d "$CPP"; then
++  CPP=
++fi
++if test -z "$CPP"; then
++  CPP="$CC -E"
++fi
++AC_SUBST(CPP)dnl
++])# AC_PROG_CPP
++
+ dnl This is here so we can set $subdirs directly based on configure fragments.
+ AC_CONFIG_SUBDIRS()
+ 
diff --git a/patches/eglibc/2_15/120-Fix-crossrpc-to-build-on-non-Linux.patch b/patches/eglibc/2_15/120-Fix-crossrpc-to-build-on-non-Linux.patch
new file mode 100644
index 0000000..577e8f6
--- /dev/null
+++ b/patches/eglibc/2_15/120-Fix-crossrpc-to-build-on-non-Linux.patch
@@ -0,0 +1,247 @@
+diff -urN a/sunrpc/rpc/types.h b/sunrpc/rpc/types.h
+--- a/sunrpc/rpc/types.h	2014-02-18 21:01:57.273293081 +0000
++++ b/sunrpc/rpc/types.h	2014-02-18 21:02:31.023814825 +0000
+@@ -69,6 +69,7 @@
+ #include <sys/types.h>
+ #endif
+ 
++#ifdef __linux__
+ #ifndef __u_char_defined
+ typedef __u_char u_char;
+ typedef __u_short u_short;
+@@ -84,11 +85,14 @@
+ typedef __caddr_t caddr_t;
+ # define __daddr_t_defined
+ #endif
++#endif
+ 
+ #include <sys/time.h>
+ #include <sys/param.h>
+ 
++#ifndef _WIN32
+ #include <netinet/in.h>
++#endif
+ 
+ #ifndef INADDR_LOOPBACK
+ #define       INADDR_LOOPBACK         (u_long)0x7F000001
+diff -urN a/sunrpc/rpc_main.c b/sunrpc/rpc_main.c
+--- a/sunrpc/rpc_main.c	2014-02-18 21:01:57.273293081 +0000
++++ b/sunrpc/rpc_main.c	2014-02-18 21:02:31.023814825 +0000
+@@ -38,13 +38,19 @@
+ #include <stdio.h>
+ #include <string.h>
+ #include <unistd.h>
++#ifndef IS_IN_build
+ #include <libintl.h>
++#endif
+ #include <ctype.h>
+ #include <sys/types.h>
+ #include <sys/param.h>
+ #include <sys/file.h>
+ #include <sys/stat.h>
++#ifndef _WIN32
+ #include <sys/wait.h>
++#else
++#include <windows.h>
++#endif
+ #include "rpc_parse.h"
+ #include "rpc_util.h"
+ #include "rpc_scan.h"
+@@ -53,6 +59,33 @@
+ #include "../version.h"
+ #define PACKAGE _libc_intl_domainname
+ 
++#ifdef _WIN32
++#define rindex(_dest, _src) strrchr((_dest), (_src))
++
++char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src);
++
++char* __cdecl stpcpy(char* __restrict__ dest, char const* __restrict__ src)
++{
++  if (src == NULL)
++      return NULL;
++  return strcpy(dest, src) + strlen(dest);
++}
++#endif /* _WIN32 */
++
++#if defined(_WIN32) || defined(__BSD__)
++
++char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len);
++
++char* __cdecl stpncpy(char* __restrict__ dest, char const* __restrict__ src, size_t len)
++{
++  size_t min_len = strlen(src);
++  if (min_len > len)
++    min_len = len;
++  return strncpy(dest, src, len) + min_len;
++}
++
++#endif /* defined(_WIN32) || defined(__BSD__) */
++
+ #define EXTEND	1		/* alias for TRUE */
+ #define DONT_EXTEND	0	/* alias for FALSE */
+ 
+@@ -83,7 +116,11 @@
+ static const char *CPP = SUNOS_CPP;
+ static const char CPPFLAGS[] = "-C";
+ static char *pathbuf;
++#ifdef _WIN32
++static HANDLE cpp_pid;
++#else
+ static int cpp_pid;
++#endif
+ static const char *allv[] =
+ {
+   "rpcgen", "-s", "udp", "-s", "tcp"
+@@ -335,6 +372,20 @@
+ {
+   struct stat buf;
+ 
++  /* Avoid trying to directly execute a bash script on Windows. */
++#ifdef _WIN32
++  char* CPPENVV = getenv("CPP");
++  if (CPPENVV)
++    {
++      CPP = (char*)malloc(strlen(CPPENVV)+1);
++      strcpy((char*)CPP, CPPENVV);
++      /* Don't bother checking that it exists with stat64 as
++       * we'd have to check in the path, also it usually ends
++       * with a few arguments. */
++      return;
++    }
++#endif
++
+   if (stat (CPP, &buf) < 0)
+     {				/* /lib/cpp or explicit cpp does not exist */
+       if (cppDefined)
+@@ -354,9 +405,122 @@
+     }
+ }
+ 
++#ifdef _WIN32
++/*
++ * Open input file with given define for C-preprocessor
++ */
++static void
++open_input (const char *infile, const char *define)
++{
++  int argi;
++  int argcc = 0;
++  LPSTR argsall;
++  HANDLE StdOutHandle;
++  HANDLE StdErrHandle;
++  HANDLE ReadPipe;
++  HANDLE WritePipe;
++  SECURITY_ATTRIBUTES SecAttr;
++  STARTUPINFO StartupInfo;
++  PROCESS_INFORMATION ProcessInfo;
++  DWORD Status;
++
++  find_cpp ();
++  putarg (0, CPP);
++  putarg (1, CPPFLAGS);
++  addarg (define);
++  if (infile)
++    addarg (infile);
++  addarg ((char *) NULL);
++  for (argi = 0; argi < argcount - 1; ++argi)
++    {
++      argcc += strlen(arglist[argi])+2;
++    }
++  argsall = (LPSTR)alloca(argcc + 1);
++  if (!argsall)
++    {
++      fprintf (stderr, _ ("cannot alloca for argsall\n"));
++      exit (1);
++    }
++  argsall[0] = '\0';
++  for (argi = 0; argi < argcount - 1; ++argi)
++    {
++      strcat((char*)argsall, arglist[argi]);
++      strcat((char*)argsall, " ");
++    }
++
++  memset(&SecAttr,     0, sizeof(SecAttr));
++  memset(&StartupInfo, 0, sizeof(StartupInfo));
++  memset(&ProcessInfo, 0, sizeof(ProcessInfo));
++
++  SecAttr.nLength = sizeof(SecAttr);
++  SecAttr.bInheritHandle = TRUE;
++
++  Status = CreatePipe( &ReadPipe, &WritePipe, &SecAttr, 0 );
++  if (!Status)
++    {
++      fprintf (stderr, _ ("cannot CreatePipe: GetLastError() -> %d\n"), GetLastError());
++      exit (1);
++    }
++
++  SetHandleInformation( ReadPipe, HANDLE_FLAG_INHERIT, 0 );
++
++  /*
++  StdOutHandle = GetStdHandle( STD_OUTPUT_HANDLE );
++  StdErrHandle = GetStdHandle( STD_ERROR_HANDLE );
++  if (StdOutHandle != INVALID_HANDLE_VALUE) {
++      SetHandleInformation( StdOutHandle, HANDLE_FLAG_INHERIT, 0 );
++  }
++  if (StdErrHandle != INVALID_HANDLE_VALUE) {
++      SetHandleInformation( StdErrHandle, HANDLE_FLAG_INHERIT, 0 );
++  }
++  */
++
++  StartupInfo.cb         = sizeof(StartupInfo);
++  StartupInfo.hStdInput  = GetStdHandle( STD_INPUT_HANDLE );
++  StartupInfo.hStdOutput = WritePipe;
++  StartupInfo.hStdError  = GetStdHandle( STD_ERROR_HANDLE );
++  StartupInfo.dwFlags    = STARTF_USESTDHANDLES;
++
++  Status = CreateProcess(
++          NULL,           /* lpApplicationName */
++          argsall,        /* lpCommandLine */
++          NULL,           /* lpProcessAttributes */
++          NULL,           /* lpThreadAttributes */
++          TRUE,           /* bInheritHandles */
++          0,              /* dwCreationFlags */
++          NULL,           /* lpEnvironment */
++          NULL,           /* lpCurrentDirectory */
++          &StartupInfo,   /* lpStartupInfo */
++          &ProcessInfo ); /* lpProcessInformation */
++
++  CloseHandle( WritePipe );
++  if (!Status)
++    {
++      fprintf (stderr, _ ("cannot find C preprocessor: %s, GetLastError() -> %d\n"), CPP, GetLastError());
++      exit (1);
++    }
++  int fd = _open_osfhandle((intptr_t)ReadPipe, _O_APPEND | _O_RDONLY);
++  if(fd != -1)
++    {
++      fin = _fdopen(fd, "a+");
++    }
++  cpp_pid = ProcessInfo.hProcess;
++}
++
++/* Close the connection to the C-preprocessor and check for successfull
++   termination.  */
++static void
++close_input (void)
++{
++  WaitForSingleObject(cpp_pid, INFINITE);
++}
++
++#else
++
+ /*
+  * Open input file with given define for C-preprocessor
+  */
++
+ static void
+ open_input (const char *infile, const char *define)
+ {
+@@ -424,6 +588,7 @@
+       crash ();
+     }
+ }
++#endif
+ 
+ /* valid tirpc nettypes */
+ static const char *valid_ti_nettypes[] =
diff --git a/patches/eglibc/2_15/130-MSYS-Hack-elf-librtld.mk-gen.patch b/patches/eglibc/2_15/130-MSYS-Hack-elf-librtld.mk-gen.patch
new file mode 100644
index 0000000..3a4c47c
--- /dev/null
+++ b/patches/eglibc/2_15/130-MSYS-Hack-elf-librtld.mk-gen.patch
@@ -0,0 +1,37 @@
+diff -urN a/elf/Makefile b/elf/Makefile
+--- a/elf/Makefile	2014-02-18 21:03:08.974401925 +0000
++++ b/elf/Makefile	2014-02-18 21:03:18.381213967 +0000
+@@ -146,6 +146,14 @@
+ ld-map		= $(common-objpfx)ld.map
+ # eglibc: endif
+ 
++# Hack for building on MSYS2 but using native host (e.g. MinGW-w64) compilers.
++uname_o := $(shell uname -o)
++ifneq (, $(findstring Msys, $(uname_o)))
++common-objpfxh = $(shell cd $(common-objpfx); pwd -W)/
++else
++common-objpfxh = $(common-objpfx)
++endif
++
+ ifeq (yes,$(build-shared))
+ extra-objs	= $(all-rtld-routines:%=%.os) soinit.os sofini.os interp.os
+ generated	+= librtld.os dl-allobjs.os ld.so ldd
+@@ -388,15 +396,15 @@
+ 
+ $(objpfx)librtld.mk: $(objpfx)librtld.map Makefile
+ 	LC_ALL=C \
+-	sed -n 's@^$(common-objpfx)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
++	sed -n 's@^$(common-objpfxh)\([^(]*\)(\([^)]*\.os\)) *.*$$@\1 \2@p' \
+ 	    $< | \
+ 	while read lib file; do \
+ 	  case $$lib in \
+ 	  libc_pic.a) \
+ 	    LC_ALL=C fgrep -l /$$file \
+-		  $(common-objpfx)stamp.os $(common-objpfx)*/stamp.os | \
++		  $(common-objpfxh)stamp.os $(common-objpfxh)*/stamp.os | \
+ 	    LC_ALL=C \
+-	    sed 's@^$(common-objpfx)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
++	    sed 's@^$(common-objpfxh)\([^/]*\)/stamp\.os$$@rtld-\1'" +=$$file@"\
+ 	    ;; \
+ 	  */*.a) \
+ 	    echo rtld-$${lib%%/*} += $$file ;; \
diff --git a/patches/eglibc/2_15/140-Rename-oS-to-oSTATIC-for-case-insensitive-fs.patch b/patches/eglibc/2_15/140-Rename-oS-to-oSTATIC-for-case-insensitive-fs.patch
new file mode 100644
index 0000000..499c450
--- /dev/null
+++ b/patches/eglibc/2_15/140-Rename-oS-to-oSTATIC-for-case-insensitive-fs.patch
@@ -0,0 +1,182 @@
+diff -urN a/ChangeLog b/ChangeLog
+--- a/ChangeLog	2014-02-18 21:04:06.581959454 +0000
++++ b/ChangeLog	2014-02-18 21:04:32.595695077 +0000
+@@ -1,3 +1,8 @@
++2014-01-22  Ray Donnelly  <mingw.android@gmail.com>
++
++        * Rename .oS to .oSTATIC so that builds can be done on file
++        systems that are not both case sensitive and case preserving.
++
+ 2013-01-25  Thomas Schwinge  <thomas@codesourcery.com>
+ 
+         * configure.in (AC_PROG_CPP): New definition.
+diff -urN a/Makeconfig b/Makeconfig
+--- a/Makeconfig	2014-02-18 21:04:06.658627324 +0000
++++ b/Makeconfig	2014-02-18 21:04:32.595695077 +0000
+@@ -508,7 +508,7 @@
+ # run the linked programs.
+ link-libc = -Wl,-rpath-link=$(rpath-link) \
+ 	    $(common-objpfx)libc.so$(libc.so-version) \
+-	    $(common-objpfx)$(patsubst %,$(libtype.oS),c) \
++	    $(common-objpfx)$(patsubst %,$(libtype.oSTATIC),c) \
+ 	    $(as-needed) $(common-objpfx)elf/ld.so $(no-as-needed) $(gnulib)
+ # This is how to find at build-time things that will be installed there.
+ rpath-dirs = math elf dlfcn nss nis rt resolv crypt
+@@ -738,7 +738,7 @@
+ # The compilation rules use $(CPPFLAGS-${SUFFIX}) and $(CFLAGS-${SUFFIX})
+ # to pass different flags for each flavor.
+ libtypes = $(foreach o,$(object-suffixes-for-libc),$(libtype$o))
+-all-object-suffixes := .o .os .op .og .ob .oS
++all-object-suffixes := .o .os .op .og .ob .oSTATIC
+ object-suffixes :=
+ CPPFLAGS-.o = $(pic-default)
+ CFLAGS-.o = $(filter %frame-pointer,$(+cflags))
+@@ -798,14 +798,14 @@
+ 
+ ifeq (yes,$(build-shared))
+ # Build special library that contains the static-only routines for libc.
+-object-suffixes-for-libc += .oS
++object-suffixes-for-libc += .oSTATIC
+ 
+ # Must build the routines as PIC, though, because they can end up in (users')
+ # shared objects.  We don't want to use CFLAGS-os because users may, for
+ # example, make that processor-specific.
+-CFLAGS-.oS = $(CFLAGS-.o) $(PIC-ccflag)
+-CPPFLAGS-.oS = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
+-libtype.oS = lib%_nonshared.a
++CFLAGS-.oSTATIC = $(CFLAGS-.o) $(PIC-ccflag)
++CPPFLAGS-.oSTATIC = $(CPPFLAGS-.o) -DPIC -DLIBC_NONSHARED=1
++libtype.oSTATIC = lib%_nonshared.a
+ endif
+ 
+ # The assembler can generate debug information too.
+diff -urN a/Makerules b/Makerules
+--- a/Makerules	2014-02-18 21:04:06.685294414 +0000
++++ b/Makerules	2014-02-18 21:04:32.599028491 +0000
+@@ -441,7 +441,7 @@
+ # Bounded pointer thunks are only built for *.ob
+ elide-bp-thunks = $(addprefix $(bppfx),$(bp-thunks))
+ 
+-elide-routines.oS += $(filter-out $(static-only-routines),\
++elide-routines.oSTATIC += $(filter-out $(static-only-routines),\
+ 				  $(routines) $(aux) $(sysdep_routines)) \
+ 		     $(elide-bp-thunks)
+ elide-routines.os += $(static-only-routines) $(elide-bp-thunks)
+@@ -1060,7 +1060,7 @@
+ install: $(inst_libdir)/libc.so
+ $(inst_libdir)/libc.so: $(common-objpfx)format.lds \
+ 			$(common-objpfx)libc.so$(libc.so-version) \
+-			$(inst_libdir)/$(patsubst %,$(libtype.oS),\
++			$(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
+ 						  $(libprefix)$(libc-name)) \
+ 			$(+force)
+ 	(echo '/* GNU ld script';\
+@@ -1068,7 +1068,7 @@
+ 	 echo '   the static library, so try that secondarily.  */';\
+ 	 cat $<; \
+ 	 echo 'GROUP ( $(slibdir)/libc.so$(libc.so-version)' \
+-	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)$(libc-name))'\
++	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)$(libc-name))'\
+ 	      ' AS_NEEDED (' $(slibdir)/$(rtld-installed-name) ') )' \
+ 	) > $@.new
+ 	mv -f $@.new $@
+diff -urN a/extra-lib.mk b/extra-lib.mk
+--- a/extra-lib.mk	2014-02-18 21:04:06.588626231 +0000
++++ b/extra-lib.mk	2014-02-18 21:04:32.595695077 +0000
+@@ -13,7 +13,7 @@
+ 
+ ifneq (,$($(lib)-static-only-routines))
+ ifneq (,$(filter yesyes%,$(build-shared)$(elf)$($(lib).so-version)))
+-object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oS)
++object-suffixes-$(lib) += $(filter-out $($(lib)-inhibit-o),.oSTATIC)
+ endif
+ endif
+ 
+@@ -31,7 +31,7 @@
+ 
+ # Add each flavor of library to the lists of things to build and install.
+ install-lib += $(foreach o,$(object-suffixes-$(lib)),$(lib:lib%=$(libtype$o)))
+-extra-objs += $(foreach o,$(filter-out .os .oS,$(object-suffixes-$(lib))),\
++extra-objs += $(foreach o,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))),\
+ 			$(patsubst %,%$o,$(filter-out \
+ 					   $($(lib)-shared-only-routines),\
+ 					   $(all-$(lib)-routines))))
+@@ -59,7 +59,7 @@
+ 
+ 
+ # Use o-iterator.mk to generate a rule for each flavor of library.
+-ifneq (,$(filter-out .os .oS,$(object-suffixes-$(lib))))
++ifneq (,$(filter-out .os .oSTATIC,$(object-suffixes-$(lib))))
+ define o-iterator-doit
+ $(objpfx)$(patsubst %,$(libtype$o),$(lib:lib%=%)): \
+   $(patsubst %,$(objpfx)%$o,\
+@@ -67,7 +67,7 @@
+ 			  $(all-$(lib)-routines))); \
+ 	$$(build-extra-lib)
+ endef
+-object-suffixes-left = $(filter-out .os .oS,$(object-suffixes-$(lib)))
++object-suffixes-left = $(filter-out .os .oSTATIC,$(object-suffixes-$(lib)))
+ include $(patsubst %,$(..)o-iterator.mk,$(object-suffixes-left))
+ endif
+ 
+@@ -79,9 +79,9 @@
+ 	$(build-extra-lib)
+ endif
+ 
+-ifneq (,$(filter .oS,$(object-suffixes-$(lib))))
+-$(objpfx)$(patsubst %,$(libtype.oS),$(lib:lib%=%)): \
+-  $(patsubst %,$(objpfx)%.oS,\
++ifneq (,$(filter .oSTATIC,$(object-suffixes-$(lib))))
++$(objpfx)$(patsubst %,$(libtype.oSTATIC),$(lib:lib%=%)): \
++  $(patsubst %,$(objpfx)%.oSTATIC,\
+ 	     $(filter $($(lib)-static-only-routines),\
+ 		      $(all-$(lib)-routines)))
+ 	$(build-extra-lib)
+diff -urN a/nptl/Makefile b/nptl/Makefile
+--- a/nptl/Makefile	2014-02-18 21:04:06.681960998 +0000
++++ b/nptl/Makefile	2014-02-18 21:04:32.599028491 +0000
+@@ -396,7 +396,7 @@
+ 
+ $(inst_libdir)/libpthread.so: $(common-objpfx)format.lds \
+ 			      $(objpfx)libpthread.so$(libpthread.so-version) \
+-			      $(inst_libdir)/$(patsubst %,$(libtype.oS),\
++			      $(inst_libdir)/$(patsubst %,$(libtype.oSTATIC),\
+ 							$(libprefix)pthread) \
+ 			      $(+force)
+ 	(echo '/* GNU ld script';\
+@@ -404,7 +404,7 @@
+ 	 echo '   the static library, so try that secondarily.  */';\
+ 	 cat $<; \
+ 	 echo 'GROUP ( $(slibdir)/libpthread.so$(libpthread.so-version)' \
+-	      '$(libdir)/$(patsubst %,$(libtype.oS),$(libprefix)pthread)'\
++	      '$(libdir)/$(patsubst %,$(libtype.oSTATIC),$(libprefix)pthread)'\
+ 	      ')' \
+ 	) > $@.new
+ 	mv -f $@.new $@
+diff -urN a/sysdeps/i386/i686/Makefile b/sysdeps/i386/i686/Makefile
+--- a/sysdeps/i386/i686/Makefile	2014-02-18 21:04:06.658627324 +0000
++++ b/sysdeps/i386/i686/Makefile	2014-02-18 21:04:32.599028491 +0000
+@@ -16,12 +16,12 @@
+ CFLAGS-.op += -Wa,-mtune=i686
+ CFLAGS-.og += -Wa,-mtune=i686
+ CFLAGS-.ob += -Wa,-mtune=i686
+-CFLAGS-.oS += -Wa,-mtune=i686
++CFLAGS-.oSTATIC += -Wa,-mtune=i686
+ 
+ ASFLAGS-.o += -Wa,-mtune=i686
+ ASFLAGS-.os += -Wa,-mtune=i686
+ ASFLAGS-.op += -Wa,-mtune=i686
+ ASFLAGS-.og += -Wa,-mtune=i686
+ ASFLAGS-.ob += -Wa,-mtune=i686
+-ASFLAGS-.oS += -Wa,-mtune=i686
++ASFLAGS-.oSTATIC += -Wa,-mtune=i686
+ endif
+diff -urN a/sysdeps/sparc/sparc32/sparcv9/Makefile b/sysdeps/sparc/sparc32/sparcv9/Makefile
+--- a/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-02-18 21:04:06.611959942 +0000
++++ b/sysdeps/sparc/sparc32/sparcv9/Makefile	2014-02-18 21:04:32.599028491 +0000
+@@ -10,4 +10,4 @@
+ ASFLAGS-.op += -Wa,-Av9a
+ ASFLAGS-.og += -Wa,-Av9a
+ ASFLAGS-.ob += -Wa,-Av9a
+-ASFLAGS-.oS += -Wa,-Av9a
++ASFLAGS-.oSTATIC += -Wa,-Av9a
diff --git a/patches/eglibc/2_15/150-MSYS-Hack-force-ln-s.patch b/patches/eglibc/2_15/150-MSYS-Hack-force-ln-s.patch
new file mode 100644
index 0000000..291c03d
--- /dev/null
+++ b/patches/eglibc/2_15/150-MSYS-Hack-force-ln-s.patch
@@ -0,0 +1,39 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-02-18 21:05:29.506575189 +0000
++++ b/configure	2014-02-18 21:05:43.073451819 +0000
+@@ -4671,6 +4671,16 @@
+ $as_echo "no, using $LN_S" >&6; }
+ fi
+ 
++# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
++# eglibc, whereas cp -r doesn't.
++case "$build_os" in
++*mingw*)
++  as_ln_s='ln -s'
++  LN_S=$as_ln_s
++  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&5
++$as_echo "$as_me: WARNING: Hacked as_ln_s and LN_S to 'ln -s' for MSYS2" >&2;}
++  ;;
++esac
+ 
+ # Was a --with-binutils option given?
+ if test -n "$path_binutils"; then
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-18 21:05:29.506575189 +0000
++++ b/configure.in	2014-02-18 21:05:43.076785047 +0000
+@@ -1035,6 +1035,15 @@
+   INSTALL='\$(..)./scripts/install-sh -c'
+ fi
+ AC_PROG_LN_S
++# Even though 'ln -s' doesn't work right in MSYS2, it works enough for
++# eglibc, whereas cp -r doesn't.
++case "$build_os" in
++*mingw*)
++  as_ln_s='ln -s'
++  LN_S=$as_ln_s
++  AC_MSG_WARN(Hacked as_ln_s and LN_S to 'ln -s' for MSYS2)
++  ;;
++esac
+ 
+ LIBC_PROG_BINUTILS
+ AC_SUBST(MIG)dnl Needed by sysdeps/mach/configure.in
diff --git a/patches/eglibc/2_15/160-Remove-test-for-__builtin_expect.patch b/patches/eglibc/2_15/160-Remove-test-for-__builtin_expect.patch
new file mode 100644
index 0000000..50c88c8
--- /dev/null
+++ b/patches/eglibc/2_15/160-Remove-test-for-__builtin_expect.patch
@@ -0,0 +1,86 @@
+diff -urN a/configure b/configure
+--- a/configure	2014-02-18 21:09:53.820662742 +0000
++++ b/configure	2014-02-18 21:13:11.000000000 +0000
+@@ -7376,40 +7376,6 @@
+ fi
+ fi
+ 
+-{ $as_echo "$as_me:$LINENO: checking for __builtin_expect" >&5
+-$as_echo_n "checking for __builtin_expect... " >&6; }
+-if test "${libc_cv_gcc_builtin_expect+set}" = set; then
+-  $as_echo_n "(cached) " >&6
+-else
+-  cat > conftest.c <<EOF
+-#line $LINENO "configure"
+-int foo (int a)
+-{
+-  a = __builtin_expect (a, 10);
+-  return a == 10 ? 0 : 1;
+-}
+-EOF
+-if { ac_try='${CC-cc} $CFLAGS $CPPFLAGS $LDFLAGS -nostdlib -nostartfiles
+-			    -o conftest conftest.c -lgcc >&5'
+-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+-  (eval $ac_try) 2>&5
+-  ac_status=$?
+-  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
+-  (exit $ac_status); }; }; then
+-  libc_cv_gcc_builtin_expect=yes
+-else
+-  libc_cv_gcc_builtin_expect=no
+-fi
+-rm -f conftest*
+-fi
+-{ $as_echo "$as_me:$LINENO: result: $libc_cv_gcc_builtin_expect" >&5
+-$as_echo "$libc_cv_gcc_builtin_expect" >&6; }
+-if test "$libc_cv_gcc_builtin_expect" = no; then
+-  { { $as_echo "$as_me:$LINENO: error: support for __builtin_expect needed" >&5
+-$as_echo "$as_me: error: support for __builtin_expect needed" >&2;}
+-   { (exit 1); exit 1; }; }
+-fi
+-
+ { $as_echo "$as_me:$LINENO: checking for __builtin_memset" >&5
+ $as_echo_n "checking for __builtin_memset... " >&6; }
+ if test "${libc_cv_gcc_builtin_memset+set}" = set; then
+@@ -9502,8 +9468,7 @@
+ if test -n "$CONFIG_FILES"; then
+ 
+ 
+-ac_cr='
+-'
++ac_cr=''
+ ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
+ if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
+   ac_cs_awk_cr='\\r'
+diff -urN a/configure.in b/configure.in
+--- a/configure.in	2014-02-18 21:09:53.820662742 +0000
++++ b/configure.in	2014-02-18 21:10:05.067503165 +0000
+@@ -2171,28 +2171,6 @@
+ fi
+ fi
+ 
+-dnl Check whether compiler understands __builtin_expect.
+-AC_CACHE_CHECK(for __builtin_expect, libc_cv_gcc_builtin_expect,
+-[cat > conftest.c <<EOF
+-#line $LINENO "configure"
+-int foo (int a)
+-{
+-  a = __builtin_expect (a, 10);
+-  return a == 10 ? 0 : 1;
+-}
+-EOF
+-dnl No \ in command here because it ends up inside ''.
+-if AC_TRY_COMMAND([${CC-cc} $CFLAGS $CPPFLAGS $LDFLAGS -nostdlib -nostartfiles
+-			    -o conftest conftest.c -lgcc >&AS_MESSAGE_LOG_FD]); then
+-  libc_cv_gcc_builtin_expect=yes
+-else
+-  libc_cv_gcc_builtin_expect=no
+-fi
+-rm -f conftest*])
+-if test "$libc_cv_gcc_builtin_expect" = no; then
+-  AC_MSG_ERROR([support for __builtin_expect needed])
+-fi
+-
+ AC_CACHE_CHECK(for __builtin_memset, libc_cv_gcc_builtin_memset, [dnl
+ cat > conftest.c <<\EOF
+ void zero (void *x)
-- 
1.9.0


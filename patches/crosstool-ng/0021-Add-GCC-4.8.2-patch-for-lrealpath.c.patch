From abde81d72c02d93bd4325a93541972fc331bb194 Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Mon, 23 Dec 2013 22:05:54 +0000
Subject: [PATCH 21/25] Add GCC 4.8.2 patch for lrealpath.c

.. On Windows, lrealpath in libiberty calls
GetFullPathName and then CharLowerBuff. This
isn't great as you end up with differences
between the build system's idea of the paths
and GCC's idea of them, so fix this back to
/ dirseps and keep the case as it was.
---
 ...dows-not-minding-non-existant-parent-dirs.patch |  3 +-
 ...realpath-no-force-lowercase-nor-backslash.patch | 34 ++++++++++++++++++++++
 2 files changed, 36 insertions(+), 1 deletion(-)
 create mode 100644 patches/gcc/4.8.2/150-windows-lrealpath-no-force-lowercase-nor-backslash.patch

diff --git a/patches/gcc/4.8.2/140-fix-for-windows-not-minding-non-existant-parent-dirs.patch b/patches/gcc/4.8.2/140-fix-for-windows-not-minding-non-existant-parent-dirs.patch
index 21f5c81..f7a8455 100644
--- a/patches/gcc/4.8.2/140-fix-for-windows-not-minding-non-existant-parent-dirs.patch
+++ b/patches/gcc/4.8.2/140-fix-for-windows-not-minding-non-existant-parent-dirs.patch
@@ -1,4 +1,5 @@
---- /tmp/gcc-4.8.2/libcpp/files.c	2013-03-06 16:18:40.000000000 +0000
+diff -urN gcc-4.8.2.orig/libcpp/files.c gcc-4.8.2/libcpp/files.c
+--- gcc-4.8.2.orig/libcpp/files.c	2013-03-06 16:18:40.000000000 +0000
 +++ gcc-4.8.2/libcpp/files.c	2013-12-23 13:38:19.780368200 +0000
 @@ -30,6 +30,13 @@
  #include "md5.h"
diff --git a/patches/gcc/4.8.2/150-windows-lrealpath-no-force-lowercase-nor-backslash.patch b/patches/gcc/4.8.2/150-windows-lrealpath-no-force-lowercase-nor-backslash.patch
new file mode 100644
index 0000000..37c6ef2
--- /dev/null
+++ b/patches/gcc/4.8.2/150-windows-lrealpath-no-force-lowercase-nor-backslash.patch
@@ -0,0 +1,34 @@
+diff -urN gcc-4.8.2.orig/libiberty/lrealpath.c gcc-4.8.2/libiberty/lrealpath.c
+--- gcc-4.8.2.orig/libiberty/lrealpath.c	2013-12-21 20:21:26.446076700 +0000
++++ gcc-4.8.2/libiberty/lrealpath.c	2013-12-22 02:56:54.800559500 +0000
+@@ -138,15 +138,26 @@
+   {
+     char buf[MAX_PATH];
+     char* basename;
++    char* slash;
+     DWORD len = GetFullPathName (filename, MAX_PATH, buf, &basename);
+     if (len == 0 || len > MAX_PATH - 1)
+       return strdup (filename);
+     else
+       {
+-	/* The file system is case-preserving but case-insensitive,
+-	   Canonicalize to lowercase, using the codepage associated
+-	   with the process locale.  */
+-        CharLowerBuff (buf, len);
++	/* Turn all back slashes back back into forward slashes
++	   and don't make it all lowercase.
++	   Rationale:
++	   Windows is as happy with / as it is with \. This will
++	   have been built using Cygwin, MSYS* or cross-compiled
++	   from a system where dirsep is / so it is cleaner just
++	   to keep the dirseps as / (and the case un-modified).
++	   This way, the value will be consistent with the build
++	   system and string operations (be they internal to this
++	   software or external to it, e.g. processing map files
++	   with sed) work as expected.  */
++	slash = buf;
++	while ((slash = strchr(slash,'\\')) !=  NULL)
++	  *slash = '/';
+         return strdup (buf);
+       }
+   }
-- 
1.8.5.2

